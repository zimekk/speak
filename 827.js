/*! For license information please see 827.js.LICENSE.txt */
(self.webpackChunk_dev_web=self.webpackChunk_dev_web||[]).push([[827],{8839:(e,t,n)=>{"use strict";n.d(t,{Ue:()=>$c});var s,r=n(2079),a=n(7675),i=n(521);function o(e,t,n=new Map,s=new Set){if(null==e)return null;if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(p(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=o(e[a],t,n,s);r[a]=i}return s.delete(e),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function l(e,t=c){return u(e,t)}function u(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(p(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=u(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function c(e){return null===e?null:p(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function h(e,t){const n=new Map;o(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(r.D5U.isPromise(t)){const s=await t;n.set(e,s)}}return o(e,t,n)}function p(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof r.esB))}function d(e){return e instanceof r.esB?{value:e.clone(),recurse:!1}:p(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class f{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class m extends f{constructor(){super(m.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function g(e){return new y(e)}m.INITIAL_CAPACITY=32;class b{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new S(this,e)}filter(e){return new I(this,e)}map(e){return new $(this,e)}mapAsync(e){return new E(this,e)}serialMapAsync(e){return new E(this,e).serial()}flatmap(e){return new T(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new C(this,e,t)}columnMajorBatch(e,t=!0,n=c){return this.rowMajorBatch(e,t).map((e=>l(e,n)))}concatenate(e,t){return new R(g([this,e]),t)}take(e){return e<0||null==e?this:new k(this,e)}skip(e){return e<0||null==e?this:new v(this,e)}prefetch(e){return new D(this,e)}shuffle(e,t){return new F(this,e,t)}serial(){return new w(this)}}class y extends b{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,o(t,d)),done:!1};var t}}class x extends b{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class w extends b{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class v extends b{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;r.B90(e.value)}return this.upstream.next()}}class k extends b{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class C extends b{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class I extends b{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;r.B90(e.value)}}}class $ extends b{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class S extends b{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class E extends b{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=r.piX.getTensorsInContainer(e.value),n=await this.transform(e.value),s=r.piX.getTensorsInContainer(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return{value:n,done:!1}}}class N extends b{constructor(){super(),this.outputQueue=new m,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class T extends N{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=r.piX.getTensorsInContainer(e.value),n=this.transform(e.value),s=r.piX.getTensorsInContainer(n);this.outputQueue.pushAll(n);for(const e of t)r.piX.isTensorInList(e,s)||e.dispose();return!0}}class R extends b{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(s||(s={}));class A extends b{constructor(e,t=s.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await h(this.iterators,(function(e){return e instanceof b?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case s.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case s.SHORTEST:return{value:null,done:!0};case s.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class D extends b{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new f(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class F extends D{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=i.alea(n||r.D5U.now().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class _{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return r.D5U.assert(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),O((async()=>(await n.iterator()).columnMajorBatch(e,t,B)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,O((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,O((async()=>(await t.iterator()).filter((t=>r.lub((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return O((async()=>(await t.iterator()).map((t=>r.lub((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return O((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return O((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,O((async()=>{return n=(r=async()=>({value:await t.iterator(),done:!1}),new x(r)).take(e),new R(n,s);var n,s,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,O((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,a=i.alea(t||r.D5U.now().toString());return O((async()=>{let t=a.int32();return n&&(t+=a.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,O((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function O(e,t=null){return new class extends _{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function L(e){return O((async()=>g(e)),e.length)}function z(e){if(!p(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return O((async()=>function(e,t=s.FAIL){return new A(e,t)}(await h(e,(e=>{if(e instanceof _)return{value:e.iterator(),recurse:!1};if(p(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),s.SHORTEST)),t)}function B(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof r.esB||r.D5U.isTypedArray(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof r.esB?r.knu(e):r.XeE(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}_.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");var M=n(6720),U=n(1313);(0,U.t3)().prototype.abs=function(){return this.throwIfDisposed(),(0,M.W)(this)};var P=n(3421),W=n(5202),V=n(8516),G=n(128);const H=(0,G.op)({acos_:function(e){const t={x:(0,V._1)(e,"x","acos")};return P.BV.runKernel(W.VG,t)}});(0,U.t3)().prototype.acos=function(){return this.throwIfDisposed(),H(this)};const j=(0,G.op)({acosh_:function(e){const t={x:(0,V._1)(e,"x","acosh")};return P.BV.runKernel(W.Sp,t)}});(0,U.t3)().prototype.acosh=function(){return this.throwIfDisposed(),j(this)};var X=n(7571);(0,U.t3)().prototype.add=function(e){return this.throwIfDisposed(),(0,X.I)(this,e)};var q=n(7590);(0,U.t3)().prototype.all=function(e,t){return this.throwIfDisposed(),(0,q.$)(this,e,t)};var K=n(6298);(0,U.t3)().prototype.any=function(e,t){return this.throwIfDisposed(),(0,K.Y)(this,e,t)};var Y=n(1523);(0,U.t3)().prototype.argMax=function(e){return this.throwIfDisposed(),(0,Y.N)(this,e)};const J=(0,G.op)({argMin_:function(e,t=0){const n={x:(0,V._1)(e,"x","argMin")},s={axis:t};return P.BV.runKernel(W.aJ,n,s)}});(0,U.t3)().prototype.argMin=function(e){return this.throwIfDisposed(),J(this,e)};var Z=n(2673),Q=n(9740);(0,U.t3)().prototype.asScalar=function(){return this.throwIfDisposed(),(0,Q.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,Z.X)(this,[])};var ee=n(5875);(0,U.t3)().prototype.asType=function(e){return this.throwIfDisposed(),(0,ee.p)(this,e)},(0,U.t3)().prototype.as1D=function(){return this.throwIfDisposed(),(0,Z.X)(this,[this.size])},(0,U.t3)().prototype.as2D=function(e,t){return this.throwIfDisposed(),(0,Z.X)(this,[e,t])},(0,U.t3)().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),(0,Z.X)(this,[e,t,n])},(0,U.t3)().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),(0,Z.X)(this,[e,t,n,s])},(0,U.t3)().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),(0,Z.X)(this,[e,t,n,s,r])};const te=(0,G.op)({asin_:function(e){const t={x:(0,V._1)(e,"x","asin")};return P.BV.runKernel(W.M2,t)}});(0,U.t3)().prototype.asin=function(){return this.throwIfDisposed(),te(this)};const ne=(0,G.op)({asinh_:function(e){const t={x:(0,V._1)(e,"x","asinh")};return P.BV.runKernel(W.qw,t)}});(0,U.t3)().prototype.asinh=function(){return this.throwIfDisposed(),ne(this)};const se=(0,G.op)({atan_:function(e){const t={x:(0,V._1)(e,"x","atan")};return P.BV.runKernel(W.jM,t)}});(0,U.t3)().prototype.atan=function(){return this.throwIfDisposed(),se(this)};var re=n(9201);const ae=(0,G.op)({atan2_:function(e,t){let n=(0,V._1)(e,"a","atan2"),s=(0,V._1)(t,"b","atan2");[n,s]=(0,re.makeTypesMatch)(n,s);const r={a:n,b:s};return P.BV.runKernel(W.QC,r)}});(0,U.t3)().prototype.atan2=function(e){return this.throwIfDisposed(),ae(this,e)};const ie=(0,G.op)({atanh_:function(e){const t={x:(0,V._1)(e,"x","atanh")};return P.BV.runKernel(W.Oy,t)}});(0,U.t3)().prototype.atanh=function(){return this.throwIfDisposed(),ie(this)};var oe=n(9385);(0,U.t3)().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),(0,oe.w)(this,e,t,n,s)};const le=(0,G.op)({batchToSpaceND_:function(e,t,n){const s=(0,V._1)(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));Q.hu(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),Q.hu(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),Q.hu(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return P.BV.runKernel(W.zw,a,i)}});(0,U.t3)().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),le(this,e,t)};var ue=n(8325);(0,U.t3)().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),(0,ue.t)(this,e,t,n,s,r)};var ce=n(7933);(0,U.t3)().prototype.broadcastTo=function(e){return this.throwIfDisposed(),(0,ce.U)(this,e)},(0,U.t3)().prototype.cast=function(e){return this.throwIfDisposed(),(0,ee.p)(this,e)};const he=(0,G.op)({ceil_:function(e){const t={x:(0,V._1)(e,"x","ceil")};return P.BV.runKernel(W.gJ,t)}});(0,U.t3)().prototype.ceil=function(){return this.throwIfDisposed(),he(this)};var pe=n(3092);(0,U.t3)().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),(0,pe.i)(this,e,t)};var de=n(9134);(0,U.t3)().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof U.es&&(e=[e]),(0,de.z)([this,...e],t)};var fe=n(6409);(0,U.t3)().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,fe.P)(this,e,t,n,s,r,a)};var me=n(7905);(0,U.t3)().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),(0,me.b)(this,e,t,n,s,r)};var ge=n(9399);(0,U.t3)().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ge.T)(this,e,t,n,s,r,a)};const be=(0,G.op)({cos_:function(e){const t={x:(0,V._1)(e,"x","cos")};return P.BV.runKernel(W.mc,t)}});(0,U.t3)().prototype.cos=function(){return this.throwIfDisposed(),be(this)};const ye=(0,G.op)({cosh_:function(e){const t={x:(0,V._1)(e,"x","cosh")};return P.BV.runKernel(W.TR,t)}});(0,U.t3)().prototype.cosh=function(){return this.throwIfDisposed(),ye(this)};const xe=(0,G.op)({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:(0,V._1)(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return P.BV.runKernel(W.iH,r,a)}});(0,U.t3)().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),xe(this,e,t,n)};const we=(0,G.op)({depthToSpace_:function(e,t,n="NHWC"){const s=(0,V._1)(e,"x","depthToSpace"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];Q.hu(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),Q.hu(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),Q.hu(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return P.BV.runKernel(W.T0,o,l)}});(0,U.t3)().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),we(this,e,t)};var ve=n(6581);(0,U.t3)().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,ve.B)(this,e,t,n,s,r,a)};const ke=(0,G.op)({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=(0,V._1)(e,"x","dilation2d"),o=(0,V._1)(t,"filter","dilation2d");Q.hu(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),Q.hu(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),Q.hu("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=(0,Z.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=P.BV.runKernel(W.p4,c,h);return u?(0,Z.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}});(0,U.t3)().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),ke(this,e,t,n,s,r)};var Ce=n(2639),Ie=n(1966),$e=n(1203),Se=n(9635);const Ee=(0,G.op)({divNoNan_:function(e,t){let n=(0,V._1)(e,"a","div"),s=(0,V._1)(t,"b","div");[n,s]=(0,re.makeTypesMatch)(n,s);const r=(0,Ce.h)(n,s),a=(0,Se.P)(r),i=(0,Ie.D)(s,a);return(0,$e.a)(i,a,r)}});(0,U.t3)().prototype.divNoNan=function(e){return this.throwIfDisposed(),Ee(this,e)},(0,U.t3)().prototype.div=function(e){return this.throwIfDisposed(),(0,Ce.h)(this,e)};var Ne=n(8249);const Te=(0,G.op)({dot_:function(e,t){const n=(0,V._1)(e,"t1","dot"),s=(0,V._1)(t,"t2","dot");Q.hu(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(Q.hu(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=(0,Z.X)(n,[1,-1]),t=(0,Z.X)(s,[-1,1]),r=(0,Ne.O)(e,t);return(0,Z.X)(r,[])}if(1===n.rank&&2===s.rank){const e=(0,Z.X)(n,[1,-1]),t=(0,Z.X)(s,[s.shape[0],s.shape[1]]),r=(0,Ne.O)(e,t);return(0,Z.X)(r,[r.size])}if(2===n.rank&&1===s.rank){const e=(0,Z.X)(s,[-1,1]),t=(0,Ne.O)(n,e);return(0,Z.X)(t,[t.size])}{const e=(0,Z.X)(s,[s.shape[0],s.shape[1]]);return(0,Ne.O)(n,e)}}});(0,U.t3)().prototype.dot=function(e){return this.throwIfDisposed(),Te(this,e)};var Re=n(9673);(0,U.t3)().prototype.elu=function(){return this.throwIfDisposed(),(0,Re.p)(this)},(0,U.t3)().prototype.equal=function(e){return this.throwIfDisposed(),(0,Ie.D)(this,e)};const Ae=(0,G.op)({erf_:function(e){let t=(0,V._1)(e,"x","erf");Q.hu("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=(0,ee.p)(t,"float32"));const n={x:t};return P.BV.runKernel(W.Om,n)}});(0,U.t3)().prototype.erf=function(){return this.throwIfDisposed(),Ae(this)};var De=n(8575);(0,U.t3)().prototype.exp=function(){return this.throwIfDisposed(),(0,De.Q)(this)};var Fe=n(1064);(0,U.t3)().prototype.expandDims=function(e){return this.throwIfDisposed(),(0,Fe.d)(this,e)};const _e=(0,G.op)({expm1_:function(e){const t={x:(0,V._1)(e,"x","expm1")};return P.BV.runKernel(W.Y0,t)}});(0,U.t3)().prototype.expm1=function(){return this.throwIfDisposed(),_e(this)};var Oe=n(6991);(0,U.t3)().prototype.fft=function(){return this.throwIfDisposed(),(0,Oe.k)(this)},(0,U.t3)().prototype.flatten=function(){return this.throwIfDisposed(),(0,Z.X)(this,[this.size])};var Le=n(7184);(0,U.t3)().prototype.floor=function(){return this.throwIfDisposed(),(0,Le.G)(this)};var ze=n(6986);(0,U.t3)().prototype.floorDiv=function(e){return this.throwIfDisposed(),(0,ze.q)(this,e)};var Be=n(5262);(0,U.t3)().prototype.gather=function(e,t){return this.throwIfDisposed(),(0,Be.I)(this,e,t)};var Me=n(6731);(0,U.t3)().prototype.greaterEqual=function(e){return this.throwIfDisposed(),(0,Me.b)(this,e)};var Ue=n(1694);(0,U.t3)().prototype.greater=function(e){return this.throwIfDisposed(),(0,Ue.p)(this,e)};var Pe=n(8923);(0,U.t3)().prototype.ifft=function(){return this.throwIfDisposed(),(0,Pe.S)(this)};var We=n(8117);(0,U.t3)().prototype.irfft=function(){return this.throwIfDisposed(),(0,We.w)(this)};const Ve=(0,G.op)({isFinite_:function(e){const t={x:(0,V._1)(e,"x","isFinite")};return P.BV.runKernel(W.av,t)}});(0,U.t3)().prototype.isFinite=function(){return this.throwIfDisposed(),Ve(this)};const Ge=(0,G.op)({isInf_:function(e){const t={x:(0,V._1)(e,"x","isInf")};return P.BV.runKernel(W.iW,t)}});(0,U.t3)().prototype.isInf=function(){return this.throwIfDisposed(),Ge(this)};const He=(0,G.op)({isNaN_:function(e){const t={x:(0,V._1)(e,"x","isNaN")};return P.BV.runKernel(W.r7,t)}});(0,U.t3)().prototype.isNaN=function(){return this.throwIfDisposed(),He(this)};var je=n(7397);(0,U.t3)().prototype.leakyRelu=function(e){return this.throwIfDisposed(),(0,je.h)(this,e)};var Xe=n(5573);(0,U.t3)().prototype.lessEqual=function(e){return this.throwIfDisposed(),(0,Xe.z)(this,e)};var qe=n(2011);const Ke=(0,G.op)({less_:function(e,t){let n=(0,V._1)(e,"a","less"),s=(0,V._1)(t,"b","less");[n,s]=(0,re.makeTypesMatch)(n,s),(0,qe.$N)(n.shape,s.shape);const r={a:n,b:s};return P.BV.runKernel(W.vt,r)}});(0,U.t3)().prototype.less=function(e){return this.throwIfDisposed(),Ke(this,e)};const Ye=(0,G.op)({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=(0,V._1)(e,"x","localResponseNormalization");Q.hu(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),Q.hu(Q.GN(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=(0,Z.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=P.BV.runKernel(W.eZ,l,u);return o?(0,Z.X)(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});(0,U.t3)().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),Ye(this,e,t,n,s)};var Je=n(3184),Ze=n(2805),Qe=n(7211),et=n(5808),tt=n(9876);const nt=(0,G.op)({logSigmoid_:function(e){const t=(0,V._1)(e,"x","logSigmoid");return(0,Je.cb)((e=>({value:(0,Qe.W)((0,tt.W)((0,Qe.W)(e))),gradFunc:t=>(0,Ze.d)(t,(0,et.X)((0,Qe.W)(e)))})))(t)}});(0,U.t3)().prototype.logSigmoid=function(){return this.throwIfDisposed(),nt(this)};var st=n(2929);(0,U.t3)().prototype.logSoftmax=function(e){return this.throwIfDisposed(),(0,st.C)(this,e)};var rt=n(2425);(0,U.t3)().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),(0,rt.l)(this,e,t)};var at=n(3102);(0,U.t3)().prototype.log=function(){return this.throwIfDisposed(),(0,at.c)(this)};var it=n(6883);(0,U.t3)().prototype.log1p=function(){return this.throwIfDisposed(),(0,it.K)(this)};var ot=n(495);(0,U.t3)().prototype.logicalAnd=function(e){return this.throwIfDisposed(),(0,ot.H)(this,e)};const lt=(0,G.op)({logicalNot_:function(e){const t={x:(0,V._1)(e,"x","logicalNot","bool")};return P.BV.runKernel(W.Vf,t)}});(0,U.t3)().prototype.logicalNot=function(){return this.throwIfDisposed(),lt(this)};const ut=(0,G.op)({logicalOr_:function(e,t){const n=(0,V._1)(e,"a","logicalOr","bool"),s=(0,V._1)(t,"b","logicalOr","bool");(0,qe.$N)(n.shape,s.shape);const r={a:n,b:s};return P.BV.runKernel(W.MZ,r)}});(0,U.t3)().prototype.logicalOr=function(e){return this.throwIfDisposed(),ut(this,e)};const ct=(0,G.op)({logicalXor_:function(e,t){const n=(0,V._1)(e,"a","logicalXor","bool"),s=(0,V._1)(t,"b","logicalXor","bool");return(0,qe.$N)(n.shape,s.shape),(0,ot.H)(ut(e,t),lt((0,ot.H)(e,t)))}});(0,U.t3)().prototype.logicalXor=function(e){return this.throwIfDisposed(),ct(this,e)},(0,U.t3)().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),(0,Ne.O)(this,e,t,n)};var ht=n(4433);(0,U.t3)().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),(0,ht._)(this,e,t,n,s)};var pt=n(4991);(0,U.t3)().prototype.max=function(e,t){return this.throwIfDisposed(),(0,pt.F)(this,e,t)};var dt=n(3171);(0,U.t3)().prototype.maximum=function(e){return this.throwIfDisposed(),(0,dt.g)(this,e)};var ft=n(4854);(0,U.t3)().prototype.mean=function(e,t){return this.throwIfDisposed(),(0,ft.J)(this,e,t)};var mt=n(6038);(0,U.t3)().prototype.min=function(e,t){return this.throwIfDisposed(),(0,mt.V)(this,e,t)};var gt=n(7511);(0,U.t3)().prototype.minimum=function(e){return this.throwIfDisposed(),(0,gt.L)(this,e)};const bt=(0,G.op)({mirrorPad_:function(e,t,n){Q.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=(0,V._1)(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");Q.hu(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)Q.hu(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),Q.hu(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return P.BV.runKernel(W.jQ,i,a)}});(0,U.t3)().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),bt(this,e,t)};const yt=(0,G.op)({mod_:function(e,t){let n=(0,V._1)(e,"a","mod"),s=(0,V._1)(t,"b","mod");[n,s]=(0,re.makeTypesMatch)(n,s);const r={a:n,b:s};return P.BV.runKernel(W.Vb,r)}});(0,U.t3)().prototype.mod=function(e){return this.throwIfDisposed(),yt(this,e)},(0,U.t3)().prototype.mul=function(e){return this.throwIfDisposed(),(0,Ze.d)(this,e)},(0,U.t3)().prototype.neg=function(){return this.throwIfDisposed(),(0,Qe.W)(this)};var xt=n(1458);(0,U.t3)().prototype.norm=function(e,t,n){return this.throwIfDisposed(),(0,xt.K)(this,e,t,n)};var wt=n(1576);(0,U.t3)().prototype.notEqual=function(e){return this.throwIfDisposed(),(0,wt.Q)(this,e)};var vt=n(7910);(0,U.t3)().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),(0,vt.l)(this,e,t,n)};var kt=n(9622);(0,U.t3)().prototype.onesLike=function(){return this.throwIfDisposed(),(0,kt.J)(this)};var Ct=n(7039);(0,U.t3)().prototype.pad=function(e,t){return this.throwIfDisposed(),(0,Ct.v)(this,e,t)};var It=n(1129);const $t=(0,G.op)({spaceToBatchND_:function(e,t,n){const s=(0,V._1)(e,"x","spaceToBatchND");Q.hu(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),Q.hu(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),Q.hu(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return P.BV.runKernel(W.TQ,r,a)}}),St=(0,G.op)({pool_:function(e,t,n,s,r,a){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const i=(0,V._1)(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=(0,Z.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]])),Q.hu(It.jT(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const u=It.Xw(o.shape,t,a,r,s),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const p=1===c[0]&&1===c[1],[d,f]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),m=p?s:"valid",g=p?o:$t(o,c,d),b=("avg"===n?()=>(0,oe.w)(g,t,a,m):()=>(0,ht._)(g,t,a,m))(),y=p?b:le(b,c,f);return l?(0,Z.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});(0,U.t3)().prototype.pool=function(e,t,n,s,r){return this.throwIfDisposed(),St(this,e,t,n,s,r)};var Et=n(3788);(0,U.t3)().prototype.pow=function(e){return this.throwIfDisposed(),(0,Et.s)(this,e)};var Nt=n(1224);(0,U.t3)().prototype.prelu=function(e){return this.throwIfDisposed(),(0,Nt.A)(this,e)};const Tt=(0,G.op)({prod_:function(e,t=null,n=!1){let s=(0,V._1)(e,"x","prod");"bool"===s.dtype&&(s=(0,ee.p)(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return P.BV.runKernel(W.Dl,r,a)}});(0,U.t3)().prototype.prod=function(e,t){return this.throwIfDisposed(),Tt(this,e,t)};const Rt=(0,G.op)({reciprocal_:function(e){const t={x:(0,V._1)(e,"x","reciprocal")};return P.BV.runKernel(W.$H,t)}});(0,U.t3)().prototype.reciprocal=function(){return this.throwIfDisposed(),Rt(this)};var At=n(8536);(0,U.t3)().prototype.relu=function(){return this.throwIfDisposed(),(0,At.U)(this)};var Dt=n(9902);(0,U.t3)().prototype.relu6=function(){return this.throwIfDisposed(),(0,Dt.b)(this)},(0,U.t3)().prototype.reshapeAs=function(e){return this.throwIfDisposed(),(0,Z.X)(this,e.shape)},(0,U.t3)().prototype.reshape=function(e){return this.throwIfDisposed(),(0,Z.X)(this,e)};var Ft=n(4284);(0,U.t3)().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),(0,Ft.I)(this,e,t,n)};var _t=n(739);(0,U.t3)().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),(0,_t.j)(this,e,t,n)};var Ot=n(4330);(0,U.t3)().prototype.reverse=function(e){return this.throwIfDisposed(),(0,Ot.G)(this,e)};var Lt=n(1411);(0,U.t3)().prototype.rfft=function(){return this.throwIfDisposed(),(0,Lt.Q)(this)};var zt=n(4520);(0,U.t3)().prototype.round=function(){return this.throwIfDisposed(),(0,zt.N)(this)};const Bt=(0,G.op)({rsqrt_:function(e){const t={x:(0,V._1)(e,"x","rsqrt")};return P.BV.runKernel(W.bV,t)}});(0,U.t3)().prototype.rsqrt=function(){return this.throwIfDisposed(),Bt(this)};var Mt=n(2899);(0,U.t3)().prototype.selu=function(){return this.throwIfDisposed(),(0,Mt.U)(this)};var Ut=n(1438);(0,U.t3)().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),(0,Ut.U)(this,e,t,n,s,r,a)},(0,U.t3)().prototype.sigmoid=function(){return this.throwIfDisposed(),(0,et.X)(this)};const Pt=(0,G.op)({sign_:function(e){const t={x:(0,V._1)(e,"x","sign")};return P.BV.runKernel(W.i5,t)}});(0,U.t3)().prototype.sign=function(){return this.throwIfDisposed(),Pt(this)};const Wt=(0,G.op)({sin_:function(e){const t={x:(0,V._1)(e,"x","sin")};return P.BV.runKernel(W.RQ,t)}});(0,U.t3)().prototype.sin=function(){return this.throwIfDisposed(),Wt(this)};const Vt=(0,G.op)({sinh_:function(e){const t={x:(0,V._1)(e,"x","sinh")};return P.BV.runKernel(W.w3,t)}});(0,U.t3)().prototype.sinh=function(){return this.throwIfDisposed(),Vt(this)};var Gt=n(2565);(0,U.t3)().prototype.slice=function(e,t){return this.throwIfDisposed(),(0,Gt.t)(this,e,t)};var Ht=n(5301);(0,U.t3)().prototype.softmax=function(e){return this.throwIfDisposed(),(0,Ht.X)(this,e)},(0,U.t3)().prototype.softplus=function(){return this.throwIfDisposed(),(0,tt.W)(this)},(0,U.t3)().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),$t(this,e,t)};var jt=n(1381);(0,U.t3)().prototype.split=function(e,t){return this.throwIfDisposed(),(0,jt.V)(this,e,t)};var Xt=n(7346);(0,U.t3)().prototype.sqrt=function(){return this.throwIfDisposed(),(0,Xt._)(this)};var qt=n(6966);(0,U.t3)().prototype.square=function(){return this.throwIfDisposed(),(0,qt.h)(this)};var Kt=n(8774);(0,U.t3)().prototype.squaredDifference=function(e){return this.throwIfDisposed(),(0,Kt.$)(this,e)};var Yt=n(5920);(0,U.t3)().prototype.squeeze=function(e){return this.throwIfDisposed(),(0,Yt.L)(this,e)};var Jt=n(2235);(0,U.t3)().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof U.es?[this,e]:[this,...e];return(0,Jt.k)(n,t)};var Zt=n(3863);(0,U.t3)().prototype.step=function(e){return this.throwIfDisposed(),(0,Zt.N)(this,e)};const Qt=(0,G.op)({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:(0,V._1)(e,"x","stridedSlice")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return P.BV.runKernel(W.m2,u,c)}});(0,U.t3)().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Qt(this,e,t,n,s,r,a,i,o)};var en=n(6885);(0,U.t3)().prototype.sub=function(e){return this.throwIfDisposed(),(0,en.l)(this,e)};var tn=n(4786);(0,U.t3)().prototype.sum=function(e,t){return this.throwIfDisposed(),(0,tn.S)(this,e,t)};const nn=(0,G.op)({tan_:function(e){const t={x:(0,V._1)(e,"x","tan")};return P.BV.runKernel(W.sE,t)}});(0,U.t3)().prototype.tan=function(){return this.throwIfDisposed(),nn(this)};var sn=n(1871);(0,U.t3)().prototype.tanh=function(){return this.throwIfDisposed(),(0,sn.A)(this)};var rn=n(3239);(0,U.t3)().prototype.tile=function(e){return this.throwIfDisposed(),(0,rn.G)(this,e)},(0,U.t3)().prototype.toBool=function(){return this.throwIfDisposed(),(0,ee.p)(this,"bool")},(0,U.t3)().prototype.toFloat=function(){return this.throwIfDisposed(),(0,ee.p)(this,"float32")},(0,U.t3)().prototype.toInt=function(){return this.throwIfDisposed(),(0,ee.p)(this,"int32")};const an=(0,G.op)({topk_:function(e,t=1,n=!0){const s=(0,V._1)(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=P.BV.runKernel(W.cW,a,i);return{values:o,indices:l}}});(0,U.t3)().prototype.topk=function(e,t){return this.throwIfDisposed(),an(this,e,t)};var on=n(6336);(0,U.t3)().prototype.transpose=function(e){return this.throwIfDisposed(),(0,on.p)(this,e)};const ln=(0,G.op)({unique_:function(e,t=0){const n=(0,V._1)(e,"x","unique","string_or_numeric");(0,Q.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=P.BV.runKernel(W.kp,s,r);return{values:a,indices:i}}});(0,U.t3)().prototype.unique=function(e){return this.throwIfDisposed(),ln(this,e)};const un=(0,G.op)({unsortedSegmentSum_:function(e,t,n){const s=(0,V._1)(e,"x","unsortedSegmentSum"),r=(0,V._1)(t,"segmentIds","unsortedSegmentSum","int32");(0,Q.hu)((0,Q.GN)(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return P.BV.runKernel(W.Qv,a,i)}});(0,U.t3)().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),un(this,e,t)};var cn=n(7690);(0,U.t3)().prototype.unstack=function(e){return this.throwIfDisposed(),(0,cn.H)(this,e)},(0,U.t3)().prototype.where=function(e,t){return this.throwIfDisposed(),(0,$e.a)(e,this,t)},(0,U.t3)().prototype.zerosLike=function(){return this.throwIfDisposed(),(0,Se.P)(this)};const hn={kernelName:W.SY,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,Zt.N)((0,ee.p)(n,"float32"),-1))}}};var pn=n(2502);const dn={kernelName:W.VG,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,qt.h)((0,ee.p)(n,"float32")),s=(0,Xt._)((0,en.l)((0,pn.i)(1),t));return(0,Qe.W)((0,Ce.h)(e,s))}}}},fn={kernelName:W.Sp,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Xt._)((0,en.l)((0,qt.h)((0,ee.p)(n,"float32")),1));return(0,Ce.h)(e,t)}}}},mn={kernelName:W.mm,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=qe.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=qe.RR(n.shape,r);return s.length>0&&(t=(0,tn.S)(t,s)),(0,Z.X)(t,n.shape)},b:()=>{let t=e;const n=qe.RR(s.shape,r);return n.length>0&&(t=(0,tn.S)(t,n)),(0,Z.X)(t,s.shape)}}}},gn={kernelName:W.Xz,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},bn={kernelName:W.sJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Se.P)(n)}}},yn={kernelName:W.aJ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Se.P)(n)}}},xn={kernelName:W.M2,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,Xt._)((0,en.l)((0,pn.i)(1),(0,qt.h)((0,ee.p)(n,"float32")))))}}},wn={kernelName:W.qw,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Xt._)((0,X.I)((0,pn.i)(1),(0,qt.h)((0,ee.p)(n,"float32"))));return(0,Ce.h)(e,t)}}}},vn={kernelName:W.QC,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,qe.$N)(n.shape,s.shape);return{a:()=>{const t=(0,X.I)((0,qt.h)(n),(0,qt.h)(s));let a=(0,Ze.d)(e,(0,Ce.h)(s,t));const i=(0,qe.RR)(n.shape,r);return i.length>0&&(a=(0,tn.S)(a,i)),(0,Z.X)(a,n.shape)},b:()=>{const t=(0,X.I)((0,qt.h)(n),(0,qt.h)(s));let a=(0,Qe.W)((0,Ze.d)(e,(0,Ce.h)(n,t)));const i=(0,qe.RR)(s.shape,r);return i.length>0&&(a=(0,tn.S)(a,i)),(0,Z.X)(a,s.shape)}}}},kn={kernelName:W.jM,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,X.I)((0,qt.h)((0,ee.p)(n,"float32")),1))}}},Cn={kernelName:W.Oy,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,en.l)((0,pn.i)(1),(0,qt.h)((0,ee.p)(n,"float32"))))}}},In=(0,G.op)({avgPool3dGrad_:function(e,t,n,s,r,a){const i=(0,V._1)(e,"dy","avgPool3dGrad"),o=(0,V._1)(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=(0,Z.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=(0,Z.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),Q.hu(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),Q.hu(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&Q.hu(Q.GN(r),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`));const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=P.BV.runKernel(W.IM,h,p);return c?(0,Z.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),$n={kernelName:W._k,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>In(e,s,r,a,i,o)}}},Sn=(0,G.op)({avgPoolGrad_:function(e,t,n,s,r){const a=(0,V._1)(e,"dy","avgPoolGrad"),i=(0,V._1)(t,"input","avgPoolGrad");Q.hu(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=(0,Z.X)(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=(0,Z.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),Q.hu(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),Q.hu(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=P.BV.runKernel(W.RO,c,h);return u?(0,Z.X)(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),En={kernelName:W.Jh,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>Sn(e,s,r,a,i)}}},Nn={kernelName:W.XL,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>(0,Ne.O)(e,r,!1,!1),b:()=>(0,Ne.O)(e,s,!0,!1)}:a&&!i?{a:()=>(0,Ne.O)(r,e,!1,!0),b:()=>(0,Ne.O)(s,e,!1,!1)}:{a:()=>(0,Ne.O)(r,e,!0,!0),b:()=>(0,Ne.O)(e,s,!0,!0)}:{a:()=>(0,Ne.O)(e,r,!1,!0),b:()=>(0,Ne.O)(s,e,!0,!1)}}},Tn={kernelName:W.zw,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>$t(e,s,r)}}},Rn={kernelName:W.Ly,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>(0,tn.S)(e,o,!0)}}},An={kernelName:W.RF,gradFunc:e=>({x:()=>e.clone()})},Dn={kernelName:W.gJ,gradFunc:e=>({x:()=>(0,Se.P)(e)})},Fn={kernelName:W.xn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>(0,$e.a)((0,ot.H)((0,Me.b)(s,r),(0,Xe.z)(s,a)),e,(0,Se.P)(e))}}},_n={kernelName:W.yj,inputsToSave:["x"],gradFunc:hn.gradFunc},On={kernelName:W.Eh,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=(0,Q.EC)(r,t[0].shape)[0],i=s.map((e=>e[a]));return(0,jt.V)(e,i,a).map((e=>()=>e))}};var Ln=n(1885),zn=n(6858);const Bn={kernelName:W.mh,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return Q.hu(It.I0(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>(0,zn._)(s.shape,e,r,i,o,l),filter:()=>(0,Ln.p)(s,e,r.shape,i,o,l)}}},Mn={kernelName:W.wm,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>(0,ge.T)(e,r,a,i,o,1,l),filter:()=>(0,Ln.p)(e,s,r.shape,a,i,o,l)}}},Un=(0,G.op)({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=(0,Z.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=(0,Z.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),Q.hu(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),Q.hu(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),Q.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),Q.hu(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),Q.hu(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return P.BV.runKernel(W.o2,o,l)}});var Pn=n(2833);const Wn={kernelName:W.x1,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;Q.hu((0,It.I0)(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>(0,Pn._)(i.shape,e,o,r,a),filter:()=>Un(i,e,o.shape,r,a)}}},Vn={kernelName:W.mc,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)((0,Qe.W)(Wt((0,ee.p)(n,"float32"))),e)}}},Gn={kernelName:W.TR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(Vt((0,ee.p)(n,"float32")),e)}}};var Hn=n(7704);const jn={kernelName:W.iH,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=(0,Hn.Q3)([r],s.rank);let n=xe(e,r,a,!i);return null!=t&&(n=(0,on.p)(n,t)),n}}}};var Xn=n(2806),qn=n(5039);const Kn={kernelName:W.ci,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;Q.hu(It.I0(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return Q.hu(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),Q.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),Q.hu(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),Q.hu(It.jT(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),null!=i&&Q.hu(Q.GN(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>(0,qn.v)(l.shape,e,u,r,a,s,i),filter:()=>(0,Xn.z)(l,e,u.shape,r,a,s,i)}}},Yn={kernelName:W.p4,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>P.BV.runKernel(W.ek,a,n),filter:()=>P.BV.runKernel(W.Vn,i,n)}}},Jn={kernelName:W.SX,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>P.BV.runKernel(W.HE,s)}}},Zn={kernelName:W.Om,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,Ze.d)((0,De.Q)((0,Qe.W)((0,qt.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,Ze.d)(e,s)}}},Qn={kernelName:W.NE,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,n)}}},es={kernelName:W.YF,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>(0,Z.X)(e,n.shape)}}},ts={kernelName:W.Y0,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,De.Q)(n))}}},ns={kernelName:W.OR,gradFunc:e=>({x:()=>(0,Se.P)(e)})},ss={kernelName:W.je,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,qe.$N)(n.shape,s.shape);return{a:()=>{const t=(0,Ce.h)(e,(0,ee.p)(s,"float32")),a=(0,qe.RR)(n.shape,r);return a.length>0?(0,Z.X)((0,tn.S)(t,a),n.shape):t},b:()=>{let t=(0,Ze.d)(e,(0,ee.p)(n,"float32"));const a=(0,qe.RR)(s.shape,r);a.length>0&&(t=(0,Z.X)((0,tn.S)(t,a),s.shape));const i=(0,qt.h)(s);return(0,Qe.W)((0,Ce.h)(t,(0,ee.p)(i,"float32")))}}}},rs={kernelName:W.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?(0,pn.i)(1):o,u=(0,qe.RR)(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=(0,en.l)(r,a),p=(0,Ze.d)(e,l),d=Bt((0,X.I)(i,(0,pn.i)(s))),f=(0,Ze.d)((0,Ze.d)((0,Ze.d)(d,d),d),(0,pn.i)(-.5));return{x:()=>1===a.rank?(0,Z.X)((0,Ze.d)((0,Ze.d)(e,(0,rn.G)((0,Z.X)(d,[1,1,1,a.shape[0]]),c)),l),r.shape):(0,Z.X)((0,Ze.d)((0,Ze.d)(e,d),l),r.shape),mean:()=>{let e=(0,Ze.d)((0,Ze.d)(d,(0,pn.i)(-1)),p);return 1===a.rank&&(e=(0,tn.S)(e,u)),(0,Z.X)(e,a.shape)},variance:()=>{let e=(0,Ze.d)((0,Ze.d)(f,h),p);return 1===a.rank&&(e=(0,tn.S)(e,u)),(0,Z.X)(e,a.shape)},scale:()=>{const t=(0,Ze.d)(h,d);let n=(0,Ze.d)(e,t);return 1===a.rank&&(n=(0,tn.S)(n,u)),(0,Z.X)(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=(0,tn.S)(t,u)),(0,Z.X)(t,a.shape)}}}},as={kernelName:W.qi,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=(0,Q.EC)(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=is(0,l),p=is(l+1,l+1+c),d=os([o,[n],u]),f=(0,Z.X)(e,d),m=(0,Z.X)(r,[n]),g=os([[l],h,p]),b=(0,on.p)(f,g);let y=un(b,m,s.shape[i]);const x=(0,Hn.LJ)(g);return y=(0,on.p)(y,x),y},indices:()=>r}}};function is(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function os(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const ls={kernelName:W.Ac,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Se.P)(n),b:()=>(0,Se.P)(s)}}},us={kernelName:W.iJ,gradFunc:e=>({x:()=>(0,ee.p)(e,"float32")})},cs={kernelName:W.av,gradFunc:e=>({x:()=>(0,Se.P)(e)})},hs={kernelName:W.iW,gradFunc:e=>({x:()=>(0,Se.P)(e)})},ps={kernelName:W.r7,gradFunc:e=>({x:()=>(0,Se.P)(e)})},ds={kernelName:W.J$,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=(0,Ue.p)(s,0);return{x:()=>(0,$e.a)(a,e,(0,Ze.d)(e,r))}}},fs={kernelName:W.kU,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,X.I)(n,1))}}},ms={kernelName:W.Zb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,ee.p)(n,"float32"))}}},gs={kernelName:W.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=(0,De.Q)(s);return(0,en.l)(e,(0,Ze.d)((0,tn.S)(e,r,!0),t))}}}},bs=(0,G.op)({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return P.BV.runKernel(W.Hh,o,l)}}),ys={kernelName:W.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>bs(s,r,e,a,i,o,l)}}};function xs(e,t,n,s){return t.rank<n.rank&&(t=(0,Z.X)(t,Hn.rv(t.shape,s))),e.rank<n.rank&&(e=(0,Z.X)(e,Hn.rv(e.shape,s))),{x:()=>(0,Ze.d)(e,(0,ee.p)((0,Ie.D)(n,t),e.dtype))}}const ws={kernelName:W.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=xs(e,t[1],a,Q.EC(r,a.shape));return{x:()=>i.x()}}},vs={kernelName:W.BM,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Ze.d)(e,(0,ee.p)((0,Me.b)(n,s),"float32")),b:()=>(0,Ze.d)(e,(0,ee.p)(Ke(n,s),"float32"))}}},ks=(0,G.op)({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=(0,V._1)(e,"dy","maxPool3dGrad"),l=(0,V._1)(t,"input","maxPool3dGrad"),u=(0,V._1)(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=(0,Z.X)(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=(0,Z.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=(0,Z.X)(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),Q.hu(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),Q.hu(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),Q.hu(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),null!=i&&Q.hu(Q.GN(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=P.BV.runKernel(W.OU,f,m);return d?(0,Z.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Cs={kernelName:W.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>ks(e,s,r,a,i,o,l)}}},Is=(0,G.op)({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=(0,V._1)(e,"dy","maxPoolGrad"),l=(0,V._1)(t,"input","maxPoolGrad"),u=(0,V._1)(n,"output","maxPoolGrad");Q.hu(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),Q.hu(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),Q.hu(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&Q.hu(Q.GN(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return P.BV.runKernel(W.OV,c,h)}}),$s={kernelName:W.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Is(e,s,r,a,i,o)}}};var Ss=n(8074);const Es={kernelName:W.q2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=Q.EC(r,s.shape),i=(0,Hn.kz)(s.shape,a)[1],o=Q.NA(i);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=(0,Z.X)(e,t);return(0,Ce.h)((0,Ze.d)(n,(0,Ss.i)(s.shape,"float32")),o)}}}},Ns={kernelName:W.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=xs(e,i,a,Q.EC(r,a.shape));return{x:()=>o.x()}}},Ts={kernelName:W.q8,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>(0,Ze.d)(e,(0,ee.p)((0,Xe.z)(n,s),"float32")),b:()=>(0,Ze.d)(e,(0,ee.p)((0,Ue.p)(n,s),"float32"))}}},Rs={kernelName:W.jQ,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Gt.t)(e,a,s.shape)}}},As={kernelName:W.Vb,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,qe.$N)(n.shape,s.shape);return{a:()=>{const t=(0,qe.RR)(n.shape,r);return t.length>0?(0,Z.X)((0,tn.S)(e,t),n.shape):e},b:()=>{const t=(0,Ze.d)(e,(0,Qe.W)((0,Le.G)((0,Ce.h)(n,s)))),a=(0,qe.RR)(s.shape,r);return a.length>0?(0,Z.X)((0,tn.S)(t,a),s.shape):t}}}},Ds={kernelName:W.wY,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,qe.$N)(n.shape,s.shape);return{a:()=>{const t=(0,Ze.d)(e,(0,ee.p)(s,"float32")),a=(0,qe.RR)(n.shape,r);return a.length>0?(0,Z.X)((0,tn.S)(t,a),n.shape):t},b:()=>{const t=(0,Ze.d)(e,(0,ee.p)(n,"float32")),a=(0,qe.RR)(s.shape,r);return a.length>0?(0,Z.X)((0,tn.S)(t,a),s.shape):t}}}},Fs={kernelName:W.ku,gradFunc:e=>({x:()=>(0,Qe.W)(e)})};var _s=n(1434);const Os={kernelName:W.we,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>(0,_s.l)(n.shape,"float32")}}},Ls={kernelName:W.qW,gradFunc:e=>({x:()=>(0,Se.P)(e)})},zs={kernelName:W.Qi,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return(0,cn.H)(e,s).map((e=>()=>e))}},Bs={kernelName:W.ly,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>(0,Gt.t)(e,a,s.shape)}}},Ms={kernelName:W.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=qe.$N(a.shape,i.shape);return{a:()=>{const t=(0,ee.p)(i,"float32");let n=(0,Ze.d)(e,(0,Ze.d)(t,(0,Et.s)(a,(0,en.l)(t,(0,pn.i)(1)))));const s=qe.RR(a.shape,o);return s.length>0&&(n=(0,tn.S)(n,s)),(0,Z.X)(n,a.shape)},b:()=>{const t=(0,Ue.p)(a,0),n=(0,$e.a)(t,(0,at.c)(a),(0,Se.P)(a));let s=(0,Ze.d)(e,(0,Ze.d)(r,n));const l=qe.RR(i.shape,o);return l.length>0&&(s=(0,tn.S)(s,l)),(0,Z.X)(s,i.shape)}}}},Us={kernelName:W.o0,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,Ue.p)(n,0);return{x:()=>(0,$e.a)(r,e,(0,Ze.d)(e,s)),alpha:()=>{let t=(0,$e.a)(r,(0,Se.P)(e),(0,Ze.d)(e,n));const a=(0,qe.RR)(s.shape,e.shape);return a.length>0&&(t=(0,tn.S)(t,a)),(0,Z.X)(t,s.shape)}}}},Ps={kernelName:W.oH,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=qe.$N(n.shape,s.shape);return{a:()=>{const t=(0,Ce.h)(e,(0,ee.p)(s,"float32")),a=qe.RR(n.shape,r);return a.length>0?(0,Z.X)((0,tn.S)(t,a),n.shape):t},b:()=>{let t=(0,Ze.d)(e,(0,ee.p)(n,"float32"));const a=qe.RR(s.shape,r);a.length>0&&(t=(0,Z.X)((0,tn.S)(t,a),s.shape));const i=(0,qt.h)(s);return(0,Qe.W)((0,Ce.h)(t,(0,ee.p)(i,"float32")))}}}},Ws={kernelName:W.$H,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,Qe.W)((0,qt.h)(n)))}}},Vs={kernelName:W.Sb,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=(0,Ze.d)((0,Xe.z)(n,6),(0,Zt.N)(n));return{x:()=>(0,Ze.d)(e,(0,ee.p)(s,"float32"))}}},Gs={kernelName:W.qk,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,ee.p)((0,Zt.N)(n),"float32"))}}},Hs={kernelName:W.HZ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Z.X)(e,n.shape)}}},js={kernelName:W._Y,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>P.BV.runKernel(W.zb,r,n)}}},Xs={kernelName:W.dp,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>P.BV.runKernel(W.Hm,r,n)}}},qs={kernelName:W.mK,gradFunc:(e,t,n)=>{const{dims:s}=n,r=(0,Q.EC)(s,e.shape);return{x:()=>(0,Ot.G)(e,r)}}},Ks={kernelName:W.e0,gradFunc:e=>({x:()=>(0,Se.P)(e)})},Ys={kernelName:W.bV,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Qe.W)((0,Ce.h)(e,(0,Ze.d)((0,Et.s)(n,1.5),2)))}}},Js={kernelName:W.Ph,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>(0,ee.p)((0,Se.P)(n),"float32"),t:()=>(0,Ze.d)(e,(0,ee.p)(n,e.dtype)),e:()=>(0,Ze.d)(e,(0,ee.p)(lt(n),e.dtype))}}};var Zs=n(141);const Qs={kernelName:W.oF,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=(0,Ue.p)(n,(0,pn.i)(0)),s=(0,pn.i)(Zs.y),r=(0,pn.i)(Zs.$),a=(0,Ze.d)(e,r),i=(0,Ze.d)((0,Ze.d)(e,s),(0,De.Q)((0,ee.p)(n,"float32")));return(0,$e.a)(t,a,i)}}}},er={kernelName:W.a5,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,Ze.d)(n,(0,en.l)((0,pn.i)(1),n)))}}},tr={kernelName:W.i5,gradFunc:e=>({x:()=>(0,Se.P)(e)})},nr={kernelName:W.RQ,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(be((0,ee.p)(n,"float32")),e)}}},sr={kernelName:W.w3,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(ye((0,ee.p)(n,"float32")),e)}}};var rr=n(1269);const ar={kernelName:W.p2,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=(0,rr.parseSliceParams)(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>(0,Ct.v)(e,u)}}},ir={kernelName:W.Gc,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=(0,Ze.d)(e,s);return{logits:()=>(0,en.l)(a,(0,Ze.d)((0,tn.S)(a,[r],!0),s))}}},or={kernelName:W.MR,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,et.X)(n))}}},lr={kernelName:W.TQ,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>le(e,s,r)}}},ur={kernelName:W.L8,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>(0,de.z)(e,s)}}},cr={kernelName:W.FK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,Ze.d)((0,Xt._)((0,ee.p)(n,"float32")),2))}}},hr={kernelName:W.bK,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)(e,(0,Ze.d)((0,ee.p)(n,"float32"),2))}}},pr={kernelName:W._t,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=(0,pn.i)(2);return{a:()=>(0,Ze.d)(e,(0,Ze.d)(r,(0,en.l)(n,s))),b:()=>(0,Ze.d)(e,(0,Ze.d)(r,(0,en.l)(s,n)))}}},dr={kernelName:W.h8,gradFunc:e=>({x:()=>(0,Se.P)(e)})},fr={kernelName:W.Tr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=qe.$N(n.shape,s.shape);return{a:()=>{let t=e;const s=qe.RR(n.shape,r);return s.length>0&&(t=(0,tn.S)(t,s)),(0,Z.X)(t,n.shape)},b:()=>{let t=e;const n=qe.RR(s.shape,r);return n.length>0&&(t=(0,tn.S)(t,n)),(0,Z.X)((0,Qe.W)(t),s.shape)}}}},mr={kernelName:W.GB,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;(0,Q.EC)(a,s.shape).forEach((e=>{r[e]=1}));const i=(0,Z.X)(e,r),o=(0,Ze.d)(i,(0,Ss.i)(s.shape,"float32"));return{x:()=>o}}},gr={kernelName:W.sE,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ce.h)(e,(0,qt.h)(be(n)))}}},br={kernelName:W.MI,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>(0,Ze.d)((0,en.l)((0,pn.i)(1),(0,qt.h)(n)),e)}}},yr={kernelName:W.n9,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=(0,Se.P)(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=(0,X.I)(t,(0,Gt.t)(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=(0,X.I)(t,(0,Gt.t)(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=(0,X.I)(t,(0,Gt.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=(0,X.I)(t,(0,Gt.t)(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},xr={kernelName:W.G3,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Hn.LJ(r);return{x:()=>(0,on.p)(e,a)}}},wr={kernelName:W.To,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>(0,Jt.k)(e,r)}}},vr={kernelName:W.Qv,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=(0,dt.g)(t,(0,Se.P)(t)),s=(0,Be.I)(e,n);let r=(0,Me.b)(t,(0,pn.i)(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=(0,Fe.d)(r,e+1);r=(0,ot.H)(r,(0,Ss.i)(s.shape,"bool"));const i=(0,Se.P)(s);return(0,$e.a)(r,s,i)}(e,n)}}},kr={kernelName:W.Ru,gradFunc:e=>({x:()=>(0,Se.P)(e)})};var Cr=n(8307);const Ir=[hn,dn,fn,mn,gn,bn,yn,xn,wn,vn,kn,Cn,$n,En,Nn,Tn,Rn,An,Dn,Fn,_n,On,Mn,Bn,Wn,Vn,Gn,jn,Kn,Yn,Ps,Jn,Zn,Qn,es,ts,ss,ns,rs,as,ls,us,cs,hs,ps,ds,fs,ms,gs,ys,ws,ws,vs,Cs,$s,Es,Ns,Ts,Rs,As,Ds,Fs,Os,Ls,zs,Bs,Bs,Ms,Us,Ws,Vs,Gs,Hs,js,Xs,qs,Ks,Ys,Js,Qs,er,tr,nr,sr,ar,ir,or,lr,lr,ur,ur,cr,pr,hr,dr,fr,mr,gr,br,yr,xr,wr,vr,kr];for(const e of Ir)(0,Cr.Li)(e);let $r;function Sr(){return null==$r&&($r=(0,r.y3$)().epsilon()),$r}class Er extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Er.prototype)}}class Nr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Nr.prototype)}}class Tr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Tr.prototype)}}class Rr extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Rr.prototype)}}class Ar extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ar.prototype)}}function Dr(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Fr(e,t){if(!e)throw new Ar(t)}function _r(e,t){let n=0;for(const s of e)s===t&&n++;return n}function Or(e){return 1===e.length?e[0]:e}function Lr(e){return Array.isArray(e)?e:[e]}function zr(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Br(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let Mr={};function Ur(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Pr(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>Pr(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Pr(t):e[n]=t.value)}}}function Wr(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in Mr)a=Mr[r];else if(a=t[r],null==a)throw new Tr(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Tr(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in Mr?[o,l]=Mr.className:i in t&&([o,l]=t[i]),null==o)throw new Tr(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(Mr))e[t]=Mr[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},Mr);for(const e of Object.keys(n))Mr[e]=n[e];Pr(a.config);const s=l(o,a.config,n,r);return Mr=Object.assign({},t),s}{const e=Object.assign({},Mr);for(const e of Object.keys(n))Mr[e]=n[e];const t=new o(a.config);return Mr=Object.assign({},e),t}}}function Vr(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Gr(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Hr(e){if(null==e)throw new Tr(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function jr(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Tr(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function Xr(e,t,n=0,s=1/0){return Fr(n>=0),Fr(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function qr(e,t){Array.isArray(e)?(r.D5U.assert(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>qr(e,`element ${n+1} of ${t}`)))):r.D5U.assert(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Kr(e)}.`))}function Kr(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Kr(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Yr(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Jr(e,t){return(0,r.lub)((()=>r._b3(r.Smz(r.dC7(e,e),t,!0))))}class Zr extends r.m7h.Serializable{getConfig(){return{}}}class Qr extends Zr{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=Jr(e,this.axis),n=r.iUl(t,0,this.maxValue);return r.dC7(e,r.hiC(n,r.IHx(Sr(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Qr.className="MaxNorm",r.m7h.registerClass(Qr);class ea extends Zr{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>r.hiC(e,r.IHx(Sr(),Jr(e,this.axis)))))}getConfig(){return{axis:this.axis}}}ea.className="UnitNorm",r.m7h.registerClass(ea);class ta extends Zr{apply(e){return r.UYe(e)}}ta.className="NonNeg",r.m7h.registerClass(ta);class na extends Zr{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return(0,r.lub)((()=>{const t=Jr(e,this.axis),n=r.IHx(r.dC7(this.rate,r.iUl(t,this.minValue,this.maxValue)),r.dC7(1-this.rate,t));return r.dC7(e,r.hiC(n,r.IHx(Sr(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}na.className="MinMaxNorm",r.m7h.registerClass(na);const sa={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function ra(e){return Ur(e)}function aa(e,t={}){return Wr(e,r.m7h.SerializationMap.getMap().classNameMap,t,"constraint")}function ia(e){return null==e?null:"string"==typeof e?aa({className:e in sa?sa[e]:e,config:{}}):e instanceof Zr?e:aa(e)}const oa=["channelsFirst","channelsLast"],la=["nearest","bilinear"],ua=["valid","same","causal"],ca=["max","avg"],ha=["sum","mul","concat","ave"],pa=new Map;function da(e){jr(oa,"DataFormat",e)}function fa(e){jr(ua,"PaddingMode",e)}function ma(e){jr(ca,"PoolMode",e)}const ga=[];function ba(e,t){ga.push(e);try{const e=t();return ga.pop(),e}catch(e){throw ga.pop(),e}}function ya(e){if(!va(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===ga.length?"":ga.join("/")+"/")+e}function xa(e){if(!va(e))throw new Error("Not a valid tensor name: '"+e+"'");pa.has(e)||pa.set(e,0);const t=pa.get(e);if(pa.set(e,pa.get(e)+1),t>0){const n=`${e}_${t}`;return pa.set(n,1),n}return e}const wa=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function va(e){return!!e.match(wa)}function ka(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Ca(e){return e=Array.isArray(e)?new Float32Array(e):e,(0,r.RRF)(e)}function Ia(e){return r.VV$(Ca(e)).dataSync()[0]}function $a(e){return r.Fp7(Ca(e)).dataSync()[0]}function Sa(e,t){if(t<e)throw new Tr(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Ea(e,t){return e.asType(t)}function Na(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function Ta(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[t,0],[n,e.shape[1]]);case 3:return r.CnO(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return r.p0P(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return r.tPi(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return r.tPi(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Tr(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Ra(e,t,n){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:return r.SmN(e,[0,t],[e.shape[0],n]);case 3:return r.CnO(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return r.p0P(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Tr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Aa(e,t,n,s){return(0,r.lub)((()=>{switch(e.rank){case 1:return r.jZU(e,t,n);case 2:switch(s){case 1:return Ta(e,t,n);case 2:return Ra(e,t,n);default:throw new Tr(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return Ta(e,t,n);case 2:return r.CnO(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Ra(e,t,n);default:throw new Tr(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return Ta(e,t,n);case 2:return r.p0P(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return r.p0P(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Ra(e,t,n);default:throw new Tr(`The axis is not within the rank of the tensor ${s}`)}default:throw new Tr(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function Da(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),r.zoF(e,t)}function Fa(e,t){switch(e.rank){case 1:return r.gME([e,t]);case 2:return r.Izb([e,t],0);case 3:return r.MNy([e,t],0);case 4:return r.ZaL([e,t],0);default:throw new Tr(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function _a(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Tr(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return r.Gg6(e,t)}function Oa(e,t=0,n=1,s,a){return r.nGf(e,t,n,s,a)}function La(e,t,n,s){if(e.rank<2||t.rank<2)throw new Rr(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Rr(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank){const a=!1,i=!1;return r.imm.matMul({a:e,b:t,transposeA:a,transposeB:i,bias:s?Ma(e.rank,s,"channelsLast"):null,activation:n})}{const a=e.shape.slice(),i=a.pop();e=e.reshape([-1,i]);const o=t.shape.slice(),l=o.pop(),u=o.pop(),c=[...o,l],h=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(h).reshape([u,-1]);const p=[...a,...c],d=!1,f=!1;return r.imm.matMul({a:e,b:t,transposeA:d,transposeB:f,bias:s?Ma(e.rank,s,"channelsLast"):null,activation:n}).reshape(p)}}function za(e,t,n){return(0,r.lub)((()=>(t=Array.isArray(t)?(0,r.RRF)(t,"int32"):t.toInt(),r.Iqj(e,t,n))))}function Ba(e){return r.dC7(e,e)}function Ma(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Tr(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1,1]):t.reshape([1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,1,s[0]]):t.reshape([1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1,1]):t.reshape([1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,1,s[0]]):t.reshape([1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?t.reshape([1,s[0],1]):t.reshape([1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?t.reshape([1,1,s[0]]):t.reshape([1].concat(s))}else if(e<3)return t;throw new Tr(`Unsupported input rank by biasAdd: ${t.rank}`)}function Ua(e,t,n){return(0,r.lub)((()=>(null==n&&(n="channelsLast"),da(n),e.add(Ma(e.rank,t,n)))))}function Pa(e,t,n,s){return(0,r.lub)((()=>r.rvX(e,t,n,s)))}function Wa(e,t,n=!1){return n?e():t()}const Va=["fanIn","fanOut","fanAvg"],Ga=["normal","uniform","truncatedNormal"];class Ha extends r.m7h.Serializable{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class ja extends Ha{apply(e,t){return(0,r.lls)(e,t)}}ja.className="Zeros",r.m7h.registerClass(ja);class Xa extends Ha{apply(e,t){return(0,r.iUs)(e,t)}}Xa.className="Ones",r.m7h.registerClass(Xa);class qa extends Ha{constructor(e){if(super(),"object"!=typeof e)throw new Tr(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Tr(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return(0,r.lub)((()=>(0,r.dC7)((0,r.iD$)(this.value),(0,r.iUs)(e,t))))}getConfig(){return{value:this.value}}}qa.className="Constant",r.m7h.registerClass(qa);class Ka extends Ha{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return(0,r.LGj)(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Ka.className="RandomUniform",r.m7h.registerClass(Ka);class Ya extends Ha{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Rr(`randomNormal does not support dType ${t}.`);return Oa(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ya.className="RandomNormal",r.m7h.registerClass(Ya);class Ja extends Ha{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Rr(`truncatedNormal does not support dType ${t}.`);return(0,r.Xu6)(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ja.className="TruncatedNormal",r.m7h.registerClass(Ja);class Za extends Ha{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return(0,r.lub)((()=>{if(2!==e.length||e[0]!==e[1])throw new Tr("Identity matrix initializer can only be used for 2D square matrices.");return(0,r.dC7)(this.gain,(0,r.iyy)(e[0]))}))}getConfig(){return{gain:this.gain}}}Za.className="Identity",r.m7h.registerClass(Za);class Qa extends Ha{constructor(e){if(super(),e.scale<0)throw new Tr(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,jr(Va,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){jr(Ga,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(da(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ka(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=ka(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=ka(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],a=n[1];let i=this.scale;if("fanIn"===this.mode?i/=Math.max(1,s):"fanOut"===this.mode?i/=Math.max(1,a):i/=Math.max(1,(s+a)/2),"normal"===this.distribution){const n=Math.sqrt(i);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Rr(`${this.getClassName()} does not support dType ${t}.`);return(0,r.Xu6)(e,0,n,t,this.seed)}{const n=Math.sqrt(3*i);return(0,r.LGj)(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Qa.className="VarianceScaling",r.m7h.registerClass(Qa);class ei extends Qa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}ei.className="GlorotUniform",r.m7h.registerClass(ei);class ti extends Qa{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}ti.className="GlorotNormal",r.m7h.registerClass(ti);class ni extends Qa{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}ni.className="HeNormal",r.m7h.registerClass(ni);class si extends Qa{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}si.className="HeUniform",r.m7h.registerClass(si);class ri extends Qa{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}ri.className="LeCunNormal",r.m7h.registerClass(ri);class ai extends Qa{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Qa.className}}ai.className="LeCunNormal",r.m7h.registerClass(ai);class ii extends Ha{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Rr("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return(0,r.lub)((()=>{if(e.length<2)throw new Rr("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Oa(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=r.$r2.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),(0,r.dC7)(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}ii.className="Orthogonal",r.m7h.registerClass(ii);const oi={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function li(e,t={}){return Wr(e,r.m7h.SerializationMap.getMap().classNameMap,t,"initializer")}function ui(e){return Ur(e)}function ci(e){if("string"==typeof e){const t=e in oi?oi[e]:e;if("GlorotNormal"===t)return new ti;if("GlorotUniform"===t)return new ei;if("HeNormal"===t)return new ni;if("HeUniform"===t)return new si;if("LeCunNormal"===t)return new ri;if("LeCunUniform"===t)return new ai;{const e={};return e.className=t,e.config={},li(e)}}return e instanceof Ha?e:li(e)}let hi=0;function pi(){return hi++}const di={};function fi(e=""){return e in di||(di[e]=0),di[e]+=1,e+di[e].toString()}function mi(e){return Array.isArray(e)&&Array.isArray(e[0])}function gi(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function bi(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Tr(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function yi(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new Tr(`Expected exactly 1 Shape; got ${e.length}`)}return e}function xi(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class wi{constructor(e,t="float32",n="Variable",s=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=pi(),n=null==n?"Variable":n,this.originalName=ya(n),this.name=xa(this.originalName),this.trainable_=s,this.constraint=a,this.val=r.VD$(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function vi(e){return e.map((e=>e.read()))}function ki(e){e.forEach((e=>{e[0].write(e[1])}))}class Ci{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Ii{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=pi(),null!=a&&(this.originalName=ya(a),this.name=xa(this.originalName)),this.rank=t.length}}let $i=0;class Si{constructor(e,t){this.callArgs=t,this.id=$i++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Ei=0;class Ni extends r.m7h.Serializable{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Ei++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=zr(e)+"_"+fi(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Nr(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Tr(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return Or(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return Or(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Er(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Er(`Layer ${this.name} is not connected, no input to return.`);return Or(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Er(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Er(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return Or(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Lr(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Lr(this.inputSpec);if(e.length!==t.length)throw new Tr(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Tr(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Tr(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Tr(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Tr(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Tr(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Tr(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Lr(e);let s=!0;for(const e of n)if(!(e instanceof Ii)){s=!1;break}let r=!0;for(const e of n)if(e instanceof Ii){r=!1;break}if(s===r)throw new Tr("Arguments to apply() must be all SymbolicTensors or all Tensors");return ba(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Lr(e))t.push(n.shape);this.build(Or(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=Lr(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=Or(a),null!=this.activityRegularizer)throw new Rr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=Lr(e);const t=[];for(const n of e)t.push(n.shape);return Or(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new Ii(a,n,this,Lr(e),t,this.name,s))):new Ii(a,s,this,Lr(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Rr("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Er(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Er(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Nr(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return xi(this.weights)}build(e){this.built=!0}getWeights(e=!1){return vi(e?this.trainableWeights:this.weights)}setWeights(e){(0,r.lub)((()=>{const t=this.weights;if(t.length!==e.length)throw new Tr(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=vi(t);for(let a=0;a<s.length;++a){const i=s[a],o=t[a],l=e[a];if(!r.D5U.arraysEqual(i.shape,l.shape))throw new Tr(`Layer weight shape ${i.shape} not compatible with provided weight shape ${l.shape}`);n.push([o,l])}ki(n)}))}addWeight(e,t,n,s,r,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new Tr(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=ci("zeros"));const o=s.apply(t,n),l=new wi(o,n,e,a,i);return o.dispose(),null!=r&&this.addLoss((()=>r.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Lr(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=Lr(e);t=Lr(t),n=Lr(n),s=Lr(s),r=gi(r),a=gi(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new Si({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Ti(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=Ti(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ri extends Ni{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:fi("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Tr("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Tr("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Tr("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new Ii(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new Si({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Tr(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function Ai(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];(0,r.B90)(s)}}function Di(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var Fi;Ri.className="InputLayer",r.m7h.registerClass(Ri),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(Fi||(Fi={}));class _i{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Oi{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Li extends _i{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=(0,r.lub)((()=>(0,r.IHx)(this.totals[e],(0,r.dC7)(s,n))));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:(0,r.lub)((()=>{const n=(0,r.dC7)((0,r.hiC)(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),(0,r.CnY)(t[e])})))}}class zi extends _i{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Bi extends _i{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");r.D5U.isNumber(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,s=r.D5U.now();return(...a)=>{const i=r.D5U.now();return i-s<t||(s=i,n=e(...a)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await Ai(n),s.push(this.yield(e,t,n))),s.push((0,r.glt)()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Ai(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Ai(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push((0,r.glt)()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Ai(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Ai(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push((0,r.glt)()):r.D5U.isNumber(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Ai(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Ai(e),await this.trainEnd(e))}}function Mi(e,t){return null==e&&(e={}),e instanceof _i?[e]:Array.isArray(e)&&e[0]instanceof _i?e:Lr(e).map((e=>new Bi(e,t)))}class Ui{constructor(){}static registerCallbackConstructor(e,t){r.D5U.assert(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Ui.checkForDuplicate(t),null==Ui.constructors[e]&&(Ui.constructors[e]=[]),Ui.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Ui.constructors)Ui.constructors[+t].forEach((t=>{if(t===e)throw new Tr("Duplicate callback constructor.")}))}static clear(){Ui.constructors={}}static createCallbacks(e){const t=[];for(const n in Ui.constructors){const s=+n;e>=s&&t.push(...Ui.constructors[s])}return t.map((e=>new e))}}function Pi(e,t,n,s,r,a,i,o,l){const u=new zi,c=[new Li,...Ui.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Oi(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Wi(e,t={},n=!1){return Wr(e,r.m7h.SerializationMap.getMap().classNameMap,t,"layer",n)}function Vi(e,t){return(0,r.lub)((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=r.Smz(Ba(e),t,!0),s=r.hlL(n.shape,Sr()),a=r._b3(r.gWQ(n,s));return r.hiC(e,a)}))}function Gi(e,t){return(0,r.lub)((()=>r.J69(Ba(r.luU(t,e)),-1)))}function Hi(e,t){return(0,r.lub)((()=>r.J69(r.WnP(r.luU(t,e)),-1)))}function ji(e,t){return(0,r.lub)((()=>{const n=r.luU(e,t),s=r.iUl(r.WnP(e),Sr(),Number.MAX_VALUE),a=r.WnP(r.hiC(n,s));return r.dC7(100,r.J69(a,-1))}))}function Xi(e,t,n=!1){return(0,r.lub)((()=>{if(n)t=r.XAC(t);else{const e=r.Smz(t,t.shape.length-1,!0);t=r.hiC(t,e)}return t=r.iUl(t,Sr(),1-Sr()),r.W76(r.Smz(r.dC7(e.toFloat(),r.cM7(t)),t.shape.length-1))}))}function qi(e,t,n=!1){return(0,r.lub)((()=>{const s=r.GWj(function(e){const t=[ka(e.shape)];return e.reshape(t)}(e)).toInt(),a=(t=r.iUl(t,Sr(),1-Sr())).shape;return Xi(r.lfX(s,a[a.length-1]).reshape(a),t,n)}))}function Ki(e,t){return(0,r.lub)((()=>{let n;return n=r.iUl(t,Sr(),1-Sr()),n=r.cM7(r.hiC(n,r.luU(1,n))),r.J69(function(e,t){if(!r.D5U.arraysEqual(e.shape,t.shape))throw new Tr(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return(0,r.lub)((()=>{const n=t.relu(),s=t.abs().neg();return n.sub(t.mul(e)).add(s.exp().log1p())}))}(e,n),-1)}))}function Yi(e,t){return(0,r.lub)((()=>{const n=Vi(e,-1),s=Vi(t,-1),a=r.dC7(n,s);return r.W76(r.Smz(a,-1))}))}Ui.constructors={};const Ji={meanSquaredError:Gi,meanAbsoluteError:Hi,meanAbsolutePercentageError:ji,meanSquaredLogarithmicError:function(e,t){return(0,r.lub)((()=>{const n=r.iUl(t,Sr(),Number.MAX_VALUE),s=r.cM7(r.IHx(1,n)),a=r.iUl(e,Sr(),Number.MAX_VALUE),i=r.cM7(r.IHx(1,a));return r.J69(Ba(r.luU(s,i)),-1)}))},squaredHinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(Ba(n),-1)}))},hinge:function(e,t){return(0,r.lub)((()=>{const n=r.gWQ(0,r.luU(1,r.dC7(e,t)));return r.J69(n,-1)}))},categoricalHinge:function(e,t){return(0,r.lub)((()=>{const n=r.Smz(r.dC7(e,t),-1),s=r.Fp7(r.dC7(r.luU(1,e),t),-1);return r.gWQ(0,r.IHx(1,r.luU(s,n)))}))},logcosh:function(e,t){return(0,r.lub)((()=>{const n=Math.log(2),s=r.luU(t,e),a=r.luU(r.IHx(s,r.Wvh(r.dC7(-2,s))),n);return r.J69(a,-1)}))},categoricalCrossentropy:Xi,sparseCategoricalCrossentropy:qi,binaryCrossentropy:Ki,kullbackLeiblerDivergence:function(e,t){return(0,r.lub)((()=>{const n=r.iUl(e,Sr(),1),s=r.iUl(t,Sr(),1);return r.Smz(r.dC7(e,r.cM7(r.hiC(n,s))),-1)}))},poisson:function(e,t){return(0,r.lub)((()=>{const n=r.cM7(r.IHx(Sr(),t));return r.J69(r.luU(t,r.dC7(e,n)),-1)}))},cosineProximity:Yi};function Zi(e){if("string"==typeof e){if(e in Ji)return Ji[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Tr(t)}return e}function Qi(e,t){return(0,r.lub)((()=>{const n=r.dC7(.5,r.JpU(t)),s=Ea(r.pjt(t,n),e.dtype);return r.J69(r.DgJ(e,s),-1)}))}function eo(e,t){return(0,r.lub)((()=>Ea(r.DgJ(r.NqF(e,-1),r.NqF(t,-1)),"float32")))}function to(e,t){return Ki(e,t)}function no(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),r.DgJ(e,t).asType("float32")}const so=Xi,ro=qi,ao={binaryAccuracy:Qi,categoricalAccuracy:eo,precision:function(e,t){return(0,r.lub)((()=>{const n=function(e,t){return(0,r.lub)((()=>r.HvI(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),s=function(e,t){return(0,r.lub)((()=>r.HvI(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),a=n.add(s);return r.arb(r.pjt(a,0),n.div(a),0).cast("float32")}))},categoricalCrossentropy:so,sparseCategoricalCrossentropy:ro,mse:Gi,MSE:Gi,mae:Hi,MAE:Hi,mape:ji,MAPE:ji,cosine:Yi};function io(e){if("string"==typeof e&&e in ao)return ao[e];if("string"!=typeof e&&null!=e)return e;throw new Tr(`Unknown metric ${e}`)}function oo(e){if(Fr(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Ji))if(Ji[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(ao))if(ao[n]===e){t=n;break}return void 0!==t?t:e.name}}function lo(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!uo(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function uo(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!uo(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!uo(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function co(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function ho(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}co([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function po(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];co([`${i} (${o})`,r,e.countParams().toString(),l],t,s);for(let e=1;e<a.length;++e)co(["","","",a[e]],t,s)}function fo(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function mo(e,t){if(null===e)return null;if("string"==typeof e)return Br(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];fo(t,r,s)?n.push(s):n.push(mo(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=Br(n);t[e]=mo(s,e)}}return t}}function go(e,t){if(null==e)return null;if("string"==typeof e)return zr(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];fo(t,r,s)?n.push(s):n.push(go(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[zr(n)]="name"!==n&&"className"!==n||"string"!=typeof s?go(s,n):s}return t}}class bo{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof bo)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Tr(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return(0,r.pju)(t,e.dtype)}catch(n){throw new Tr(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Ii){if(null==this.id2Value[e.id])throw new Tr(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Tr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Ii){if(null==this.id2Value[e.id])throw new Tr(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Tr(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&(0,r.B90)(this.id2Mask)}}const yo={},xo={};function wo(e,t,n,s){const a=null!=n&&n.training,i=Array.isArray(e),o=i?e:[e],l=o.map((e=>e.name)),u=[],c=t.names();for(const e of l)-1!==c.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const h=l.join(",")+"|"+t.names().join(",");let p,d;if(null==yo[h]){const e=function(e,t){r.D5U.assert(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=ko(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=ko(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:vo(s)}}(o,t);p=e.sorted,d=e.recipientCounts,yo[h]=p,xo[h]=d}p=yo[h],d={},a||Object.assign(d,xo[h]);const f=new bo(t);for(let e=0;e<p.length;++e){if(null!=s){const e=(0,r.sq6)().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const i=p[e],o=i.sourceLayer;if(o instanceof Ri)continue;const c=[],h=[],m=[];let g=!1;for(const e of i.inputs){const n=f.getValue(e),s=f.getMask(e);c.push(n),h.push(s),null!=s&&(g=!0),a||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==l.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||m.push(n))}g&&((n=n||{}).mask=h[0]);const b=Lr(o.apply(c,n));let y=null;o.supportsMasking&&(y=o.computeMask(c,h));const x=Co(i),w=Array.isArray(x)?x:[x];for(let e=0;e<w.length;++e){f.hasKey(w[e])||f.add(w[e],b[e],Array.isArray(y)?y[0]:y);const t=l.indexOf(w[e].name);-1!==t&&(u[t]=b[e])}a||(0,r.B90)(m)}return f.disposeMasks(),i?u:u[0]}function vo(e){const t={};for(const n in e)t[n]=e[n].size;return t}function ko(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function Co(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Io extends Ni{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=fi(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Gr(this.inputs).length!==this.inputs.length)throw new Tr(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);Gr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;Fr(0===n,"input layer has >1 nodes"),Fr(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Ri))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Nr(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(Io.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(Vr);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof Io&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(Vr);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Nr(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Nr(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Si({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Tr("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Tr(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new Tr(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Tr(`${e.length} of ${s} weights are not set: ${e}`)}ki(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.6.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=go(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return(0,r.lub)((()=>{e=Lr(e);const n=new bo;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return wo(this.outputs,n,t)}))}computeMask(e,t){return(0,r.lub)((()=>{let n;return e=Lr(e),n=null==t?Dr(null,e.length):Lr(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=gi(e);if(t.length!==this.inputLayers.length)throw new Tr(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Vr);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=gi(t.computeOutputShape(Or(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];Fr(t in n),r.push(n[t])}return Or(r)}runInternalGraph(e,t){null==t&&(t=Dr(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(Vr);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=Lr(t.call(e,u)),l=Lr(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=Lr(t.call(s,u)),l=Lr(t.computeMask(s,i));if(t.activityRegularizer)throw new Rr("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){Fr(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Io?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=Io.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Tr(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Tr("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Tr(`No such layer: ${e}`)}calculateLosses(){return(0,r.lub)((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=Io.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=Io.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[Io.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=Io.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=Io.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(Or(n),s)}function l(e){const n=e.name,a=Wi(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Tr(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Hr(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];Fr(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];Fr(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Tr("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){(0,r.lub)((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function $o(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function So(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=(0,r.lub)((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());(0,r.B90)(t);const a=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])})),(0,r.RRF)(a,"float32")}return null}function Eo(e,t){return(0,r.dC7)(e,t)}function No(e,t){let n,s;const a=t;n=a.xs,s=a.ys,r.D5U.assert(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const i=To("input",e.inputNames,n),o=To("output",e.outputNames,s),l=i[0].shape[0];r.D5U.assert(i.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${i.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),r.D5U.assert(o.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${o.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<i.length;t++)r.D5U.assert(i[t].shape[0]===l,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${i[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));for(let t=0;t<o.length;t++)r.D5U.assert(o[t].shape[0]===l,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${o[t].shape[0]}; expected  ${l} based on input ${e.inputNames[0]}.`));return{xs:i,ys:o}}function To(e,t,n){if(n instanceof r.esB)return[n];if(Array.isArray(n))return r.D5U.assert(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Tr(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function Ro(e){return"function"==typeof e.iterator}function Ao(e){r.D5U.assert(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function Do(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>Ta(e,t,n-t))):Ta(e,t,n-t)}function Fo(e,t){return r.lub((()=>null==e?null:Array.isArray(e)?e.map((e=>Fo(e,t))):za(e,"int32"===t.dtype?t:t.toInt())))}function _o(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Oo(e){const t=[];e instanceof r.esB&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(Na(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Lo(e,t){if(null==e)return;const n=[];if(t instanceof r.esB)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof r.esB)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function zo(e){return Array.isArray(e)}function Bo(e){return!function(e){return e instanceof r.esB}(e)&&!zo(e)}function Mo(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(zo(e)&&e.length>0)t=!0;else if(Bo(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Tr(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Bo(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new Tr(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(zo(e)){if((e=e).length!==t.length)throw new Tr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new Tr(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Oo(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Tr(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new Tr(`Error when checking ${r}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function Uo(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Tr(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Tr(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Tr(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Tr(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Po extends Io{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Tr("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),co(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?ho(o[e],n,s):po(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?xi(e.collectedTrainableWeights):xi(e.trainableWeights),t}(e),u=xi(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>r.p_j.adagrad(.01),Adadelta:()=>r.p_j.adadelta(1,.95,Sr()),Adam:()=>r.p_j.adam(.001,.9,.999,Sr()),Adamax:()=>r.p_j.adamax(.002,.9,.999,Sr(),0),RMSProp:()=>r.p_j.rmsprop(.001,.9,0,Sr()),SGD:()=>r.p_j.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Tr(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof r.gaJ))throw new Tr("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Tr(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Zi(e)))}else{const n=Zi(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Tr(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Zi(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],ba("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};ba("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,r;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===Ki?-1!==["accuracy","acc"].indexOf(i)?s=Qi:-1!==["crossentropy","ce"].indexOf(i)&&(s=to):this.lossFunctions[e]===qi?-1!==["accuracy","acc"].indexOf(i)?s=no:-1!==["crossentropy","ce"].indexOf(i)&&(s=ro):-1!==["accuracy","acc"].indexOf(i)?s=eo:-1!==["crossentropy","ce"].indexOf(i)&&(s=so),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),r=s,n=""+a}else{const e=io(i);r=e,n=""+oo(i)}let t;ba(n,(()=>{t=r})),a(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;Ao(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return Or(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Lo(r[0],e),Lo(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,a=e.testFunction;let i=[];if(n.verbose>0)throw new Rr("Verbose mode is not implemented yet.");r.D5U.assert(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const o="function"==typeof t.next?t:await t.iterator();let l=0,u=0;for(;!s||u<n.batches;){const t=await o.next();if(i=r.lub((()=>{if(t.value){const{xs:n,ys:s}=No(e,t.value),o=n.concat(s),c=r.lub((()=>a(o)));if(r.B90(o),0===u)for(let e=0;e<c.length;++e)i.push((0,r.iD$)(0));const h=o[0].shape[0];for(let e=0;e<c.length;++e){const t=c[e],n=i[e];i[e]=r.lub((()=>r.IHx(i[e],r.dC7(h,t)))),u>0&&r.B90(n)}r.B90(c),l+=h,++u}return i})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<i.length;++e){const t=i[e];i[e]=r.hiC(i[e],l),r.B90(t)}return Or(i)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Tr(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Tr(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Tr("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],a=this.retrieveSymbolicTensors(s),i=new bo;if(e instanceof r.esB&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Tr(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)i.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Tr(`No value is provided for the model's input ${t.name}`);i.add(t,n)}const o=wo(a,i);return n?o:o[0]}retrieveSymbolicTensors(e){const t=Dr(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Tr(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return r.lub((()=>{const s=this.checkNumSamples(e);if(n)throw new Rr("Verbose predictLoop() is not implemented yet.");const a=_o(s,t),i=this.outputs.map((e=>[]));for(let t=0;t<a.length;++t)r.lub((()=>{const n=a[t][0],s=a[t][1],r=Do(e,n,s),i=[];if(Array.isArray(r))for(let e=0;e<r.length;++e)i.push({key:this.inputs[e],value:r[e]});else i.push({key:this.inputs[0],value:r});const o=new bo(i);return wo(this.outputs,o)})).forEach(((e,t)=>i[t].push(e)));return Or(i.map((e=>r.zoF(e,0))))}))}predict(e,t={}){const n=Oo(e);Uo(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return Ao(s),this.predictLoop(n,s)}finally{Lo(n,e)}}predictOnBatch(e){Uo(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Nr("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===qi?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t,n){const s=Gr(e.map((e=>e.shape[0])));s.sort();const a=Gr(t.map((e=>e.shape[0])));if(a.sort(),s.length>1)throw new Tr(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(a.length>1)throw new Tr(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&a.length>0&&!r.D5U.arraysEqual(s,a))throw new Tr(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${a[0]} target sample(s).`)}(e=Mo(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Mo(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const s=[Gi,Ki,Xi];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Xi&&1===a.shape[a.shape.length-1])throw new Tr(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Tr(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Tr(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=$o(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await So(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,a){return r.lub((()=>{const i=this.checkNumSamples(t,n,a,"steps"),o=[];if(s>0)throw new Rr("Verbose mode is not implemented yet.");if(null!=a)throw new Rr("steps mode in testLoop() is not implemented yet");{const s=_o(i,n),a=(0,r.RRF)(Sa(0,i));for(let n=0;n<s.length;++n){const i=s[n][0],l=s[n][1],u=Ta(a,i,l-i),c=Fo(t,u),h=e(c);if(0===n)for(let e=0;e<h.length;++e)o.push((0,r.iD$)(0));for(let e=0;e<h.length;++e){const t=h[e];o[e]=r.IHx(o[e],r.dC7(l-i,t))}}for(let e=0;e<o.length;++e)o[e]=r.hiC(o[e],i)}return o}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;_r(e,s)>1&&(r+=`_${_r(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),i=[],o=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const o=new bo(e),l=wo(this.outputs,o,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],l[e]);null!=a[e]&&(n=Eo(n,a[e]));const i=r.J69(n);t.push(i),u=0===e?n:r.IHx(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=r.J69(t(s[a],l[a]))}r.CnY(n),i.push(n)}return u=r.J69(u),this.calculateLosses().forEach((e=>{u=r.IHx(u,e)})),u}),!0,o)].concat(i)}}makeTestFunction(){this.testFunction=e=>r.lub((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),i=[];for(let e=0;e<this.inputs.length;++e)i.push({key:this.inputs[e],value:s[e]});const o=new bo(i),l=wo(this.outputs,o);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],i=r.J69(s(a[e],l[e]));n=0===e?i:r.IHx(n,i),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],i=r.J69(n(a[s],l[s]));t.push(i)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,i,o,l,u,c,h;e.isTraining=!0;try{const p=null==s.batchSize?32:s.batchSize;Ao(p);const d=!1,f=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,d,p);a=f[0],i=f[1],h=f[2];let m,g=!1;if(null!=s.validationData&&s.validationData.length>0){if(g=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Rr("validationData including sample weights is not supported yet."):new Tr(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);o=s.validationData[0],l=s.validationData[1];const t=!0,n=await e.standardizeUserData(o,l,null,null,t,p);u=n[0],c=n[1],m=u.concat(c)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){g=!0;const e=Math.floor(a[0].shape[0]*(1-s.validationSplit)),t=a[0].shape[0];u=Do(a,e,t),a=Do(a,0,e),c=Do(i,e,t),i=Do(i,0,e),m=u.concat(c)}else null!=s.validationSteps&&(g=!0);const b=a.concat(i).concat(h);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),x=e.getDedupedMetricsNames();let w,v;g?(e.makeTestFunction(),w=e.testFunction,v=x.slice().concat(x.map((e=>"val_"+e)))):(w=null,m=[],v=x.slice());const k=Mi(s.callbacks,s.yieldEvery);return await async function(e,t,n,s,a,i,o,l,u,c,h,p,d,f,m){null==a&&(a=32),null==i&&(i=1),null==h&&(h=!0),null==d&&(d=0);let g=!1;null!=u&&null!=c&&(g=!0);const b=e.checkNumSamples(n,a,f,"steps_per_epoch");let y;null!=b&&(y=Sa(0,b)),null==o&&(o=1);const{callbackList:x,history:w}=Pi(l,o,i,d,b,f,a,g,p);x.setModel(e),e.history=w,await x.onTrainBegin(),e.stopTraining_=!1;for(let o=d;o<i;++o){await x.onEpochBegin(o);const i={};{if("batch"===h)throw new Rr("batch shuffling is not implemneted yet");h&&r.D5U.shuffle(y);const o=(0,r.RRF)(y),l=_o(b,a);for(let h=0;h<l.length;++h){const p={};if(await x.onBatchBegin(h,p),r.lub((()=>{const d=l[h][0],f=l[h][1],m=Ta(o,d,f-d);p.batch=h,p.size=f-d;const b=Fo(n,m),y=t(b);for(let e=0;e<s.length;++e){const t=s[e],n=y[e];p[t]=n,r.CnY(n)}if(h===l.length-1&&g){const t=e.testLoop(u,c,a);for(let e=0;e<s.length;++e){const n=s[e],a=t[e];r.CnY(a),i["val_"+n]=a}}})),await x.onBatchEnd(h,p),Di(p),e.stopTraining_)break}o.dispose()}if(await x.onEpochEnd(o,i),e.stopTraining_)break}return await x.onTrainEnd(),await e.history.syncData(),e.history}(e,y,b,x,p,s.epochs,s.verbose,k,w,m,s.shuffle,v,s.initialEpoch,null)}finally{e.isTraining=!1,Lo(a,t),Lo(i,n),Lo(u,o),Lo(c,l),null!=h&&r.B90(h)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(r.D5U.assert(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),r.D5U.assert(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),r.D5U.assert(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),r.D5U.assert(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),r.D5U.assert(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let i,o;if(a)if(Ro(n.validationData))r.D5U.assert(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Rr("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);i=e.xs,o=e.ys}const l=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let c;c=a?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const h=Mi(n.callbacks,n.yieldEvery),p=null==n.verbose?1:n.verbose,{callbackList:d,history:f}=Pi(h,p,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,c);d.setModel(e),e.history=f,await d.onTrainBegin(),e.stopTraining_=!1;let m=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;m<n.epochs;){const c={};await d.onEpochBegin(m);let h=0,p=0;for(s||(g=await t.iterator());!s||h<n.batchesPerEpoch;){const t=await g.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${h} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:a}=No(e,t.value),i={};i.batch=p,i.size=s[0].shape[0],await d.onBatchBegin(p,i);const o=[];if(null!=n.classWeight){const t=$o(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)o.push(await So(a[e],null,t[e]))}const c=s.concat(a).concat(o),f=l(c);r.B90(c);for(let e=0;e<u.length;++e){const t=u[e],n=f[e];i[t]=n,r.CnY(n)}await d.onBatchEnd(p,i),Di(i),p++,h++}if(s?h>=n.batchesPerEpoch:t.done){if(a){let t;t=Ro(n.validationData)?Lr(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Lr(e.evaluate(i,o,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)c[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(m,c),m++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],a=n[1],i=this.makeTrainFunction()(s.concat(a)),o=[];for(const e of i){const t=await e.data();o.push(t[0])}return r.B90(i),Or(o)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=r.sq6().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-r.sq6().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=zr(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>zr(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=zr(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[zr(oo(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>zr(oo(e))));{const e={};for(const t in this.metrics)e[t]=zr(oo(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Wi(mo(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=Br(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>Br(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Br(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>Br(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=Br(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=r.io.getSaveHandlers(e);if(0===t.length)throw new Tr(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Tr(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Tr("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await r.io.encodeWeights(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.6.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await r.io.encodeWeights(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=r.io.concatenateArrayBuffers([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;lo(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){lo(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Po.className="Model",r.m7h.registerClass(Po);class Wo extends Po{}Wo.className="Functional",r.m7h.registerClass(Wo);class Vo extends Po{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:fi("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Tr(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Vo||e instanceof Po;let n;if(t){if(n=e,1!==n.outputs.length)throw new Tr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Tr("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Tr("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Tr("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ri({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Tr(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Tr("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Ti(this.outputs[0])}this.inboundNodes=[],new Si({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Dr(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(yi(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Po({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Nr("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let a,i={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Tr("Legacy serialization format not supported yet.");a=t}else r.D5U.assert(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),a=t.layers,delete t.layers,i=t;const o=new e(i);if(!(o instanceof Vo))throw new Rr(`Sequential.fromConfig called on non-Sequential input: ${o}`);for(const e of a){const t=Wi(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),o.add(t)}return o}set stopTraining(e){if(null==this.model)throw new Tr("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Tr("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Go(e){return new Po(e)}function Ho(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=r.io.getLoadHandlers(e,t);if(0===n.length)n.push(r.io.browserHTTPRequest(e,t));else if(n.length>1)throw new Tr(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Tr("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let a=s.modelTopology;null!=a.model_config&&(a=a.model_config);const i=null==n.strict||n.strict,o=null!=s.weightData&&null!=s.weightSpecs&&i,l=Wi(mo(a),void 0,o),u=s.trainingConfig;if(null!=u&&l.loadTrainingConfig(u),null!=s.userDefinedMetadata&&l.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new Tr("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=r.io.decodeWeights(e,t),s={},a=[];return t.forEach((e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:a}}(s.weightData,s.weightSpecs);l.loadWeights(e,i),null!=l.optimizer&&t.length>0&&await l.optimizer.setWeights(t),(0,r.B90)(e),(0,r.B90)(t.map((e=>e.tensor)))}return l}(e,0,t)}(e,t)}Vo.className="Sequential",r.m7h.registerClass(Vo);class jo extends r.m7h.Serializable{getConfig(){return{}}}class Xo extends jo{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Rr(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return r.pyx(e)}(e,t)}}Xo.className="elu",r.m7h.registerClass(Xo);class qo extends jo{apply(e){return r.U8D(e)}}qo.className="selu",r.m7h.registerClass(qo);class Ko extends jo{apply(e){return r.UYe(e)}}Ko.className="relu",r.m7h.registerClass(Ko);class Yo extends jo{apply(e){return(0,r.lub)((()=>r.LTh(6,r.UYe(e))))}}Yo.className="relu6",r.m7h.registerClass(Yo);class Jo extends jo{apply(e){return e}}Jo.className="linear",r.m7h.registerClass(Jo);class Zo extends jo{apply(e){return r.XD2(e)}}Zo.className="sigmoid",r.m7h.registerClass(Zo);class Qo extends jo{apply(e){return function(e){return(0,r.lub)((()=>{const t=r.IHx(.5,r.dC7(.2,e));return r.iUl(t,0,1)}))}(e)}}Qo.className="hardSigmoid",r.m7h.registerClass(Qo);class el extends jo{apply(e){return r.Wvh(e)}}el.className="softplus",r.m7h.registerClass(el);class tl extends jo{apply(e){return function(e){return(0,r.lub)((()=>r.hiC(e,r.WnP(e).add(1))))}(e)}}tl.className="softsign",r.m7h.registerClass(tl);class nl extends jo{apply(e){return r.AEp(e)}}nl.className="tanh",r.m7h.registerClass(nl);class sl extends jo{apply(e,t=-1){return r.XAC(e,t)}}sl.className="softmax",r.m7h.registerClass(sl);class rl extends jo{apply(e,t=-1){return r.CmS(e,t)}}rl.className="logSoftmax",r.m7h.registerClass(rl);class al extends jo{apply(e,t=1){return(0,r.lub)((()=>r.XD2(e.mul(t)).mul(e)))}}al.className="swish",r.m7h.registerClass(al);class il extends jo{apply(e){return(0,r.lub)((()=>r.dC7(e,r.AEp(r.Wvh(e)))))}}function ol(e){return e.getClassName()}function ll(e,t={}){return Wr(e,r.m7h.SerializationMap.getMap().classNameMap,t,"activation")}function ul(e){if(null==e){return ll({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},ll(t)}return e instanceof jo?e:ll(e)}il.className="mish",r.m7h.registerClass(il);class cl extends r.m7h.Serializable{}class hl extends cl{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return(0,r.lub)((()=>{let t=(0,r.lls)([1]);return this.hasL1&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l1,(0,r.WnP)(e))))),this.hasL2&&(t=(0,r.IHx)(t,(0,r.Smz)(r.dC7(this.l2,Ba(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}hl.className="L1L2",r.m7h.registerClass(hl);const pl={l1l2:"L1L2"};function dl(e){return Ur(e)}function fl(e,t={}){return Wr(e,r.m7h.SerializationMap.getMap().classNameMap,t,"regularizer")}function ml(e){return null==e?null:"string"==typeof e?fl({className:e in pl?pl[e]:e,config:{}}):e instanceof cl?e:fl(e)}class gl extends Ni{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=bi(e);let n=(0,r.UYe)(e);return null!=this.maxValue&&(n=(0,r.iUl)(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}gl.className="ReLU",r.m7h.registerClass(gl);class bl extends Ni{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=bi(e);return(0,r.hi7)(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}bl.className="LeakyReLU",r.m7h.registerClass(bl);class yl extends Ni{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ci(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=ml(e.alphaRegularizer),this.alphaConstraint=ia(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Tr(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=yi(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ci({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=bi(e),(0,r.AL3)(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ui(this.alphaInitializer),alphaRegularizer:dl(this.alphaRegularizer),alphaConstraint:ra(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}yl.className="PReLU",r.m7h.registerClass(yl);class xl extends Ni{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Rr(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=bi(e);return(0,r.pyx)(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}xl.className="ELU",r.m7h.registerClass(xl);class wl extends Ni{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=bi(e);return n.mul(Ea(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}wl.className="ThresholdedReLU",r.m7h.registerClass(wl);class vl extends Ni{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new sl).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=bi(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function kl(e,t,n){if("number"==typeof e)return Dr(e,t);if(e.length!==t)throw new Tr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Tr(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function Cl(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function Il(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+$a([n-t,0]);else{if("same"!==s)throw new Tr(`Unsupport padding mode: ${s}.`);e*=t}return e}function $l(e,t){return(0,r.lub)((()=>(da(t),"channelsFirst"===t?r.p4s(e,[0,2,3,1]):e)))}function Sl(e,t){return(0,r.lub)((()=>(da(t),"channelsFirst"===t?r.p4s(e,[0,2,3,4,1]):e)))}function El(e,t,n,s=[1,1],a="valid",i,o,l=null){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),da(i),3!==e.rank&&4!==e.rank)throw new Tr(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Tr(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=$l(e,i);if("causal"===a)throw new Rr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=r.imm.conv2d({x:u,filter:t,strides:s,pad:"same"===a?"same":"valid",dilations:o,dataFormat:"NHWC",bias:n,activation:l}),"channelsFirst"===i&&(u=r.p4s(u,[0,3,1,2])),u}))}vl.className="Softmax",r.m7h.registerClass(vl);class Nl extends Ni{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Nl.verifyArgs(t),this.rank=e,qr(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Rr(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=kl(t.kernelSize,e,"kernelSize"),this.strides=kl(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,fa(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,da(this.dataFormat),this.activation=ul(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ci(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=ia(t.biasConstraint),this.biasRegularizer=ml(t.biasRegularizer),this.activityRegularizer=ml(t.activityRegularizer),this.dilationRate=kl(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Tr(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Tr(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Tr(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Fr("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!Xr(e.kernelSize,"number",1,3))throw new Tr(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:ol(this.activation),useBias:this.useBias,biasInitializer:ui(this.biasInitializer),biasRegularizer:dl(this.biasRegularizer),activityRegularizer:dl(this.activityRegularizer),biasConstraint:ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Tl extends Nl{constructor(e,t){super(e,t),this.kernel=null,Tl.verifyArgs(t),this.filters=t.filters,qr(this.filters,"filters"),this.kernelInitializer=ci(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=ia(t.kernelConstraint),this.kernelRegularizer=ml(t.kernelRegularizer)}build(e){e=yi(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Tr(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return(0,r.lub)((()=>{let t;e=bi(e);const n=null==this.bias?null:this.bias.read(),s=Yr(this.activation.getClassName());if(null!=s&&2===this.rank)t=El(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,a="valid",i,o=1){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),da(i),3!==e.shape.length)throw new Tr(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Tr(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Tr(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===i&&(e=r.p4s(e,[0,2,1])),"causal"===a)throw new Rr("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let l=r.PAt(e,t,s,"same"===a?"same":"valid","NWC",o);return null!=n&&(l=Ua(l,n)),l}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=El(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Rr("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],a="valid",i,o){return(0,r.lub)((()=>{if(null==i&&(i="channelsLast"),da(i),4!==e.rank&&5!==e.rank)throw new Tr(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Tr(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let l=Sl(e,i);if("causal"===a)throw new Rr("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return l=r.pdZ(l,t,s,"same"===a?"same":"valid","NDHWC",o),null!=n&&(l=Ua(l,n)),"channelsFirst"===i&&(l=r.p4s(l,[0,4,1,2,3])),l}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=yi(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=Cl(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:ui(this.kernelInitializer),kernelRegularizer:dl(this.kernelRegularizer),kernelConstraint:ra(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Tr(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Rl extends Tl{constructor(e){super(2,e),Rl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xr(e.kernelSize,"number",1,2))throw new Tr(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Rl.className="Conv2D",r.m7h.registerClass(Rl);class Al extends Tl{constructor(e){super(3,e),Al.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Tr(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Al.className="Conv3D",r.m7h.registerClass(Al);class Dl extends Rl{constructor(e){if(super(e),this.inputSpec=[new Ci({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Tr(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=yi(e)).length)throw new Tr("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Tr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ci({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return r.lub((()=>{let t=bi(e);if(4!==t.shape.length)throw new Tr(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,i;"channelsFirst"===this.dataFormat?(a=2,i=3):(a=1,i=2);const o=n[a],l=n[i],u=this.kernelSize[0],c=this.kernelSize[1],h=this.strides[0],p=this.strides[1],d=[s,Il(o,h,u,this.padding),Il(l,p,c,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.p4s(t,[0,2,3,1]));let f=r.bc(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(f=r.p4s(f,[0,3,1,2])),null!=this.bias&&(f=Ua(f,this.bias.read(),this.dataFormat)),null!=this.activation&&(f=this.activation.apply(f)),f}))}computeOutputShape(e){const t=(e=yi(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=Il(t[s],o,a,this.padding),t[r]=Il(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Dl.className="Conv2DTranspose",r.m7h.registerClass(Dl);class Fl extends Al{constructor(e){if(super(e),this.inputSpec=[new Ci({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Tr(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=yi(e)).length)throw new Tr("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Tr("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ci({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return r.lub((()=>{let t=bi(e);if(5!==t.shape.length)throw new Tr(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let a,i,o;"channelsFirst"===this.dataFormat?(o=2,a=3,i=4):(o=1,a=2,i=3);const l=n[o],u=n[a],c=n[i],h=this.kernelSize[0],p=this.kernelSize[1],d=this.kernelSize[2],f=this.strides[0],m=this.strides[1],g=this.strides[2],b=[s,Il(l,f,h,this.padding),Il(u,m,p,this.padding),Il(c,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=r.p4s(t,[0,2,3,4,1]));let y=r.$QV(t,this.kernel.read(),b,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=r.p4s(y,[0,4,1,2,3])),null!==this.bias&&(y=Ua(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=yi(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=Il(t[s],u,i,this.padding),t[r]=Il(t[r],c,o,this.padding),t[a]=Il(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Fl.className="Conv3DTranspose",r.m7h.registerClass(Fl);class _l extends Tl{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Tr("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Tr("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Tr(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ci(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=ml(t.depthwiseRegularizer),this.depthwiseConstraint=ia(t.depthwiseConstraint),this.pointwiseInitializer=ci(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=ml(t.pointwiseRegularizer),this.pointwiseConstraint=ia(t.pointwiseConstraint)}build(e){if((e=yi(e)).length<this.rank+2)throw new Tr(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Tr(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Ci({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return(0,r.lub)((()=>{let t;if(e=bi(e),1===this.rank)throw new Rr("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=r.p4s(e,[0,2,3,1])),t=r.U_I(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Ua(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=r.p4s(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ui(this.depthwiseInitializer),e.pointwiseInitializer=ui(this.pointwiseInitializer),e.depthwiseRegularizer=dl(this.depthwiseRegularizer),e.pointwiseRegularizer=dl(this.pointwiseRegularizer),e.depthwiseConstraint=ra(this.depthwiseConstraint),e.pointwiseConstraint=ra(this.pointwiseConstraint),e}}_l.className="SeparableConv";class Ol extends _l{constructor(e){super(2,e)}}Ol.className="SeparableConv2D",r.m7h.registerClass(Ol);class Ll extends Tl{constructor(e){super(1,e),Ll.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!Xr(e.kernelSize,"number",1,1))throw new Tr(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Ll.className="Conv1D",r.m7h.registerClass(Ll);class zl extends Ni{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return(0,r.lub)((()=>{if(e=bi(e),"channelsLast"===this.dataFormat){const t=Aa(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Aa(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=Aa(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Aa(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}zl.className="Cropping2D",r.m7h.registerClass(zl);class Bl extends Ni{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,da(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,jr(la,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return r.lub((()=>{let t=bi(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=r.p4s(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],a="nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s]);return r.p4s(a,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,s]):t.resizeBilinear([e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Bl.className="UpSampling2D",r.m7h.registerClass(Bl);class Ml extends Nl{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ci(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=ia(e.depthwiseConstraint),this.depthwiseRegularizer=ml(e.depthwiseRegularizer)}build(e){if((e=yi(e)).length<4)throw new Tr(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Tr(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{let t=function(e,t,n=[1,1],s="valid",a,i){return(0,r.lub)((()=>{null==a&&(a="channelsLast"),da(a);let o=$l(e,a);if(4!==e.rank)throw new Tr(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Tr(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return o=r.B10(o,t,n,"same"===s?"same":"valid","NHWC",i),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}(e=bi(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Ua(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=yi(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Cl(t,this.kernelSize[0],this.padding,this.strides[0]),a=Cl(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ui(this.depthwiseInitializer),e.depthwiseRegularizer=dl(this.depthwiseRegularizer),e.depthwiseConstraint=ra(this.depthwiseRegularizer),e}}function Ul(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Tr("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Pl(e,t,n,s=!1,a,i,o=!1,l=!1){return r.lub((()=>{const u=t.shape.length;if(u<3)throw new Tr(`Input should be at least 3D, but is ${u}D.`);const c=[1,0].concat(Sa(2,u));if(t=r.p4s(t,c),null!=i)throw new Rr("The rnn() functoin of the deeplearn.js backend does not support constants yet.");o&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=a.asType("bool").asType("float32")).rank===u-1&&(a=r.dt4(a,-1)),a=r.p4s(a,c)),s&&(t=r.GYS(t,0),null!=a&&(a=r.GYS(a,0)));const h=[];let p,d=n;const f=t.shape[0],m=r.HHK(t);let g,b;null!=a&&(g=r.HHK(a));for(let t=0;t<f;++t){const n=m[t],s=r.lub((()=>e(n,d)));if(null==a)p=s[0],d=s[1];else{const e=r.lub((()=>{const e=g[t],n=r.JpU(e).sub(e);return{output:s[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,r)=>s[1][r].mul(e).add(t.mul(n))))}}));p=e.output,d=e.newStates}l&&h.push(p)}if(l){const e=1;b=r.knu(h,e)}return[p,b,d]}))}Ml.className="DepthwiseConv2D",r.m7h.registerClass(Ml);class Wl extends Ni{constructor(e){let t;if(super(e),null==e.cell)throw new Tr("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Yl({cells:e.cell}):e.cell,null==t.stateSize)throw new Tr("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ci({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Sa(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){mi(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return r.lub((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Rr("Constants support is not implemented in RNN yet.");mi(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ci({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let a;if(this.cell.build(s),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!r.D5U.arraysEqual(this.stateSpec.map((e=>e.shape[e.shape.length-1])),a))throw new Tr(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map((e=>new Ci({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){(0,r.lub)((()=>{if(!this.stateful)throw new Er("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Tr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>r.lls([n,e]))):this.states_=[r.lls([n,this.cell.stateSize])];else if(null==e)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>r.lls([n,e]))):this.states_[0]=r.lls([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Tr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,i=[n,a];if(!r.D5U.arraysEqual(s.shape,i))throw new Tr(`State ${t} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>r.CnY(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ul(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ci({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof Ii){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,r.lub)((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=bi(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Tr(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Pl(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return(0,r.lub)((()=>{let t=r.lls(e.shape);return t=r.Smz(t,[1,2]),t=Na(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?_a(t,[1,e]):t)):this.cell.stateSize>1?[_a(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Wl.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Wi(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Wl.className="RNN",r.m7h.registerClass(Wl);class Vl extends Ni{}class Gl extends Vl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qr(this.units,"units"),this.activation=ul(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ci(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ci(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ci(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ml(e.kernelRegularizer),this.recurrentRegularizer=ml(e.recurrentRegularizer),this.biasRegularizer=ml(e.biasRegularizer),this.kernelConstraint=ia(e.kernelConstraint),this.recurrentConstraint=ia(e.recurrentConstraint),this.biasConstraint=ia(e.biasConstraint),this.dropout=Ia([1,$a([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ia([1,$a([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=yi(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{if(2!==(e=e).length)throw new Tr(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jl({ones:()=>r.JpU(e),rate:this.dropout,training:s})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jl({ones:()=>r.JpU(n),rate:this.recurrentDropout,training:s}));const i=this.dropoutMask,o=this.recurrentDropoutMask;a=La(null!=i?r.dC7(e,i):e,this.kernel.read()),null!=this.bias&&(a=Ua(a,this.bias.read())),null!=o&&(n=r.dC7(n,o));let l=r.IHx(a,La(n,this.recurrentKernel.read()));return null!=this.activation&&(l=this.activation.apply(l)),[l,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ol(this.activation),useBias:this.useBias,kernelInitializer:ui(this.kernelInitializer),recurrentInitializer:ui(this.recurrentInitializer),biasInitializer:ui(this.biasInitializer),kernelRegularizer:dl(this.kernelRegularizer),recurrentRegularizer:dl(this.recurrentRegularizer),biasRegularizer:dl(this.biasRegularizer),activityRegularizer:dl(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Gl.className="SimpleRNNCell",r.m7h.registerClass(Gl);class Hl extends Wl{constructor(e){e.cell=new Gl(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return new e(t)}}Hl.className="SimpleRNN",r.m7h.registerClass(Hl);class jl extends Vl{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Tr("GRUCell does not support reset_after parameter set to true.");this.units=e.units,qr(this.units,"units"),this.activation=ul(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ul(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ci(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ci(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ci(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=ml(e.kernelRegularizer),this.recurrentRegularizer=ml(e.recurrentRegularizer),this.biasRegularizer=ml(e.biasRegularizer),this.kernelConstraint=ia(e.kernelConstraint),this.recurrentConstraint=ia(e.recurrentConstraint),this.biasConstraint=ia(e.biasConstraint),this.dropout=Ia([1,$a([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ia([1,$a([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=yi(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return(0,r.lub)((()=>{if(2!==(e=e).length)throw new Tr(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jl({ones:()=>r.JpU(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jl({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:3}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u;0<this.dropout&&this.dropout<1&&(e=r.dC7(e,a[0]));let c=La(e,this.kernel.read());this.useBias&&(c=Ua(c,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,i[0]));const h=this.recurrentKernel.read(),[p,d]=r.Vl2(h,[2*this.units,this.units],h.rank-1),f=La(s,p),[m,g,b]=r.Vl2(c,3,c.rank-1),[y,x]=r.Vl2(f,2,f.rank-1);o=this.recurrentActivation.apply(r.IHx(m,y)),l=this.recurrentActivation.apply(r.IHx(g,x));const w=La(r.dC7(l,s),d);u=this.activation.apply(r.IHx(b,w));const v=r.IHx(r.dC7(o,s),r.dC7(r.IHx(1,r.W76(o)),u));return[v,v]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ol(this.activation),recurrentActivation:ol(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ui(this.kernelInitializer),recurrentInitializer:ui(this.recurrentInitializer),biasInitializer:ui(this.biasInitializer),kernelRegularizer:dl(this.kernelRegularizer),recurrentRegularizer:dl(this.recurrentRegularizer),biasRegularizer:dl(this.biasRegularizer),activityRegularizer:dl(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}jl.className="GRUCell",r.m7h.registerClass(jl);class Xl extends Wl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new jl(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Xl.className="GRU",r.m7h.registerClass(Xl);class ql extends Vl{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,qr(this.units,"units"),this.activation=ul(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=ul(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ci(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ci(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ci(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=ml(e.kernelRegularizer),this.recurrentRegularizer=ml(e.recurrentRegularizer),this.biasRegularizer=ml(e.biasRegularizer),this.kernelConstraint=ia(e.kernelConstraint),this.recurrentConstraint=ia(e.recurrentConstraint),this.biasConstraint=ia(e.biasConstraint),this.dropout=Ia([1,$a([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Ia([1,$a([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=yi(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends Ha{apply(t,s){const r=e.apply([n]),a=(new Xa).apply([n]),i=e.apply([2*n]);return Fa(Fa(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return(0,r.lub)((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new Tr(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jl({ones:()=>r.JpU(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jl({ones:()=>r.JpU(s),rate:this.recurrentDropout,training:n,count:4}));const i=this.dropoutMask,o=this.recurrentDropoutMask;let l,u,c,h;0<this.dropout&&this.dropout<1&&(e=r.dC7(e,i[0]));let p=La(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=r.dC7(s,o[0])),p=r.IHx(p,La(s,this.recurrentKernel.read())),this.useBias&&(p=Ua(p,this.bias.read()));const[d,f,m,g]=r.Vl2(p,4,p.rank-1);l=this.recurrentActivation.apply(d),u=this.recurrentActivation.apply(f),c=r.IHx(r.dC7(u,a),r.dC7(l,this.activation.apply(m))),h=this.recurrentActivation.apply(g);const b=r.dC7(h,this.activation.apply(c));return[b,b,c]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:ol(this.activation),recurrentActivation:ol(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ui(this.kernelInitializer),recurrentInitializer:ui(this.recurrentInitializer),biasInitializer:ui(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:dl(this.kernelRegularizer),recurrentRegularizer:dl(this.recurrentRegularizer),biasRegularizer:dl(this.biasRegularizer),activityRegularizer:dl(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),recurrentConstraint:ra(this.recurrentConstraint),biasConstraint:ra(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}ql.className="LSTMCell",r.m7h.registerClass(ql);class Kl extends Wl{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new ql(e),super(e)}call(e,t){return(0,r.lub)((()=>{null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Kl.className="LSTM",r.m7h.registerClass(Kl);class Yl extends Vl{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return(0,r.lub)((()=>{let n=(e=e).slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;mi(e)&&(e=e[0]),e=e,this.cells.forEach(((n,s)=>{ba(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Wi(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return vi(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}ki(t)}}function Jl(e){const{ones:t,rate:n,training:s=!1,count:a=1}=e,i=()=>Pa(t(),n),o=()=>Wa(i,t,s);return!a||a<=1?r.CnY(o().clone()):Array(a).fill(void 0).map(o).map((e=>r.CnY(e.clone())))}Yl.className="StackedRNNCells",r.m7h.registerClass(Yl);class Zl extends Wl{constructor(e){if(e.unroll)throw new Rr("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Rr("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ci({ndim:5})]}call(e,t){return r.lub((()=>{if(null!=this.cell.dropoutMask&&(r.B90(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(r.B90(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Tr("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:a})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return r.lub((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)],i=r.lls(a);return Array.isArray(t)?Array(t.length).fill(i):[i]}))}resetStates(e,t=!1){r.lub((()=>{if(!this.stateful)throw new Er("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),a=[s[0],...s.slice(2)];if(null==n[0])throw new Tr("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_=[r.lls(a)];else if(null==e)r.B90(this.states_),null!=this.keptStates&&(r.B90(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>r.lls(a))):this.states_[0]=r.lls(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Tr(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):r.B90(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=a;if(!r.D5U.arraysEqual(n.shape,s))throw new Tr(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>r.CnY(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=Cl(l,s[0],r,a[0],i[0]),h=Cl(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Zl.className="ConvRNN2D";class Ql extends ql{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,qr(this.filters,"filters"),this.kernelSize=kl(n,2,"kernelSize"),this.kernelSize.forEach((e=>qr(e,"kernelSize"))),this.strides=kl(s||1,2,"strides"),this.strides.forEach((e=>qr(e,"strides"))),this.padding=r||"valid",fa(this.padding),this.dataFormat=a||"channelsLast",da(this.dataFormat),this.dilationRate=kl(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>qr(e,"dilationRate")))}build(e){var t;e=yi(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Tr(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],a=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends Ha{apply(e,t){return Da([n.apply([s]),r.iUs([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return r.lub((()=>{if(3!==e.length)throw new Tr(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],a=e[1],i=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Jl({ones:()=>r.JpU(s),rate:this.dropout,training:n,count:4}));const o=this.dropoutMask,l=(e,t,n)=>t&&t[n]?r.dC7(t[n],e):e;let u=l(s,o,0),c=l(s,o,1),h=l(s,o,2),p=l(s,o,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Jl({ones:()=>r.JpU(a),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let f=l(a,d,0),m=l(a,d,1),g=l(a,d,2),b=l(a,d,3);const[y,x,w,v]=r.Vl2(this.kernel.read(),4,3),[k,C,I,$]=this.useBias?r.Vl2(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,x,C,this.padding),h=this.inputConv(h,w,I,this.padding),p=this.inputConv(p,v,$,this.padding);const[S,E,N,T]=r.Vl2(this.recurrentKernel.read(),4,3);f=this.recurrentConv(f,S),m=this.recurrentConv(m,E),g=this.recurrentConv(g,N),b=this.recurrentConv(b,T);const R=this.recurrentActivation.apply(r.IHx(u,f)),A=this.recurrentActivation.apply(r.IHx(c,m)),D=r.IHx(r.dC7(A,i),r.dC7(R,this.activation.apply(r.IHx(h,g)))),F=r.dC7(this.recurrentActivation.apply(r.IHx(p,b)),this.activation.apply(D));return[F,F,D]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const a=r.Tek(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Ua(a,n,this.dataFormat):a}recurrentConv(e,t){return r.Tek(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Ql.className="ConvLSTM2DCell",r.m7h.registerClass(Ql);class eu extends Zl{constructor(e){const t=new Ql(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}eu.className="ConvLSTM2D",r.m7h.registerClass(eu);class tu extends Ni{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return Wa((()=>Pa(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}tu.className="Dropout",r.m7h.registerClass(tu);class nu extends tu{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}nu.className="SpatialDropout1D",r.m7h.registerClass(nu);class su extends Ni{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,qr(this.units,"units"),this.activation=ul(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ci(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ci(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=ia(e.kernelConstraint),this.biasConstraint=ia(e.biasConstraint),this.kernelRegularizer=ml(e.kernelRegularizer),this.biasRegularizer=ml(e.biasRegularizer),this.activityRegularizer=ml(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=yi(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=yi(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e),s=Yr(this.activation.getClassName());let r;return null!=s?r=La(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=La(n,this.kernel.read()),null!=this.bias&&(r=Ua(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:ol(this.activation),useBias:this.useBias,kernelInitializer:ui(this.kernelInitializer),biasInitializer:ui(this.biasInitializer),kernelRegularizer:dl(this.kernelRegularizer),biasRegularizer:dl(this.biasRegularizer),activityRegularizer:dl(this.activityRegularizer),kernelConstraint:ra(this.kernelConstraint),biasConstraint:ra(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}su.className="Dense",r.m7h.registerClass(su);class ru extends Ni{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=yi(e);for(const t of e.slice(1))if(null==t)throw new Tr(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ka(e,1)]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=bi(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new Tr(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ka(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}ru.className="Flatten",r.m7h.registerClass(ru);class au extends Ni{constructor(e){super(e),this.supportsMasking=!0,this.activation=ul(e.activation)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e);return this.activation.apply(n)}))}getConfig(){const e={activation:ol(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}au.className="Activation",r.m7h.registerClass(au);class iu extends Ni{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return(0,r.lub)((()=>{return e=bi(e),t=e,n=this.n,(0,r.lub)((()=>{if(2!==t.shape.length)throw new Tr(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return _a(Na(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}iu.className="RepeatVector",r.m7h.registerClass(iu);class ou extends Ni{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Tr("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=ka(e);if(null!==a){if(0===r||i%r!=0)throw new Tr(n);s[a]=i/r}else if(i!==r)throw new Tr(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return n.reshape(r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}ou.className="Reshape",r.m7h.registerClass(ou);class lu extends Ni{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Sa(1,e.dims.length+1);if(!r.D5U.arraysEqual(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ci({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=yi(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return(0,r.p4s)(bi(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}lu.className="Permute",r.m7h.registerClass(lu);class uu extends Ni{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=bi(e);return(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1)}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e),s=(0,r.YjB)((0,r.Quu)(n,this.maskValue),-1,!0);return n.mul(s.asType(n.dtype))}))}}uu.className="Masking",r.m7h.registerClass(uu);class cu extends Ni{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Lr(e.inputLength))}this.inputDim=e.inputDim,qr(this.inputDim,"inputDim"),this.outputDim=e.outputDim,qr(this.outputDim,"outputDim"),this.embeddingsInitializer=ci(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=ml(e.embeddingsRegularizer),this.activityRegularizer=ml(e.activityRegularizer),this.embeddingsConstraint=ia(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return(0,r.lub)((()=>this.maskZero?(e=bi(e),(0,r.Quu)(e,(0,r.P84)(e))):null))}computeOutputShape(e){if(e=yi(e),null==this.inputLength)return[...e,this.outputDim];const t=Lr(this.inputLength);if(t.length!==e.length-1)throw new Tr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Tr(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);let n=bi(e);return"int32"!==n.dtype&&(n=Ea(n,"int32")),za(this.embeddings.read(),n.as1D()).reshape(yi(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ui(this.embeddingsInitializer),embeddingsRegularizer:dl(this.embeddingsRegularizer),activityRegularizer:dl(this.activityRegularizer),embeddingsConstraint:ra(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}cu.className="Embedding",r.m7h.registerClass(cu);class hu extends Ni{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Rr}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Tr("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[yi(e)]),(e=e).length<2)throw new Tr(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Gr(t),t.length>1)throw new Tr(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===Gr(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return(0,r.lub)((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=$a(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=Na(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,a=e[0],i=e.slice(1).concat([a]);let o=s.reshape([a].concat(ka(e.slice(1))));o=r.p4s(o,[1,0]),o=o.reshape(i),t.push(o),n=!0}else if(e>1){const a=Sa(1,e).concat([0]);t.push(r.p4s(s,a)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const a=s.rank;if(n)if(null==a){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=r.p4s(s.reshape([-1,t]),[1,0]).reshape(n)}else if(a>1){const e=[a-1].concat(Sa(0,a-1));s=r.p4s(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Gr(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return r.lub((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Tr("`mask` should be an Array");if(!Array.isArray(e))throw new Tr("`inputs` should be an Array");if(t.length!==e.length)throw new Tr(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:r.dt4(e,0))))[0];for(let e=1;e<t.length-1;++e)n=r.HvI(n,t[e]);return n}))}}class pu extends hu{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return t}))}}pu.className="Add",r.m7h.registerClass(pu);class du extends hu{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.dC7(t,e[n]);return t}))}}du.className="Multiply",r.m7h.registerClass(du);class fu extends hu{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=r.IHx(t,e[n]);return r.dC7(1/e.length,t)}))}}fu.className="Average",r.m7h.registerClass(fu);class mu extends hu{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.gWQ(t,e[n]);return t}))}}mu.className="Maximum",r.m7h.registerClass(mu);class gu extends hu{constructor(e){super(e)}mergeFunction(e){return(0,r.lub)((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=r.LTh(t,e[n]);return t}))}}gu.className="Minimum",r.m7h.registerClass(gu);class bu extends hu{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Tr("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let a=!1;for(const e of n)if(r.D5U.arraysEqual(e,s)){a=!0;break}a||n.push(s)}if(n.length>1)throw new Tr("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return(0,r.lub)((()=>Da(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Tr("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Tr("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Tr("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Tr(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return r.lub((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(r.JpU(e[n]).asType("bool")):t[n].rank<e[n].rank?s.push(r.dt4(t[n],-1)):s.push(t[n]);const a=r.zoF(s,this.axis);return r.$6P(a,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yu(e,t){for(;e<0;)e+=t;return e}bu.className="Concatenate",r.m7h.registerClass(bu);class xu extends hu{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Rr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Tr(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Tr(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>yu(t,e[n].shape.length))):[yu(this.axes,n.shape.length),yu(this.axes,s.shape.length)],this.normalize&&(n=Vi(n,t[0]),s=Vi(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Rr("batchDot is not implemented for tensors of 4D or higher rank yet");if(r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),r.D5U.assert(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Rr("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,a=t.shape.length;null==n&&(n=[s-1,a-2]);const i=n;return r.lub((()=>{let n,r;if(s>a){n=s-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(a>s){n=a-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)r=i[0]===i[1]?e.mul(t).sum(i[0]):e.transpose([1,0]).mul(t).sum(i[1]);else{const n=i[0]!==e.shape.length-1,s=i[1]===t.shape.length-1;r=e.matMul(t,n,s)}if(n>0){let e;e=s>a?s+a-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);r=r.squeeze(t)}return 1===r.shape.length&&(r=r.expandDims(1)),r}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[yu(this.axes,e.length),yu(this.axes,t.length)],n}computeOutputShape(e){r.D5U.assert(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Rr("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}xu.className="Dot",r.m7h.registerClass(xu);class wu extends Ni{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e);return Wa((()=>Oa(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}wu.className="GaussianNoise",r.m7h.registerClass(wu);class vu extends Ni{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t);const n=bi(e);return this.rate>0&&this.rate<1?Wa((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(Oa(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}vu.className="GaussianDropout",r.m7h.registerClass(vu);class ku extends Ni{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||bi(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return(0,r.lub)((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return Wa((()=>{const t=bi(e),s=-1.7580993408473766;let a=(0,r.brS)((0,r.LGj)(n),this.rate);a=Ea(a,"float32");const i=((1-this.rate)*(1+this.rate*s**2))**-.5,o=-i*s*this.rate;return t.mul(a).add(a.add(-1).mul(s)).mul(i).add(o)}),(()=>bi(e)),t.training||!1)}return e}))}}function Cu(e,t,n,s,a,i=.001){let o;if(2===e.rank)o=r.Dxk(e,t,n,s,a,i);else if(3===e.rank)o=r.JY5(e,t,n,s,a,i);else{if(4!==e.rank)throw new Rr(`batchNormalization is not implemented for array of rank ${e.rank} yet`);o=r.p3b(e,t,n,s,a,i)}return o}ku.className="AlphaDropout",r.m7h.registerClass(ku);class Iu extends Ni{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ci(e.betaInitializer||"zeros"),this.gammaInitializer=ci(e.gammaInitializer||"ones"),this.movingMeanInitializer=ci(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ci(e.movingVarianceInitializer||"ones"),this.betaConstraint=ia(e.betaConstraint),this.gammaConstraint=ia(e.gammaConstraint),this.betaRegularizer=ml(e.betaRegularizer),this.gammaRegularizer=ml(e.gammaRegularizer)}build(e){e=yi(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Tr(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ci({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return(0,r.lub)((()=>{const n=null!=t.training&&t.training,s=bi(e),a=s.shape,i=a.length,o=Sa(0,i),l=this.axis>=0?this.axis:this.axis+i;o.splice(l,1);const u=Dr(1,i);u[l]=a[l];const c=o.slice();c.sort();const h=!r.D5U.arraysEqual(c,Sa(0,i).slice(0,i-1));if(!n)return(()=>{if(h){const e=this.movingMean.read().reshape(u),t=this.movingVariance.read().reshape(u),n=this.center?this.beta.read().reshape(u):null,r=this.scale?this.gamma.read().reshape(u):null;return Cu(s,e,t,n,r,this.epsilon)}return Cu(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[p,d,f]=function(e,t,n,s,a=.001){return r.D5U.arraysEqual(s.slice().sort(),Sa(0,e.rank-1))?function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,l=i.variance;return[Cu(e,o,l,n,t,a),o,l]}))}(e,t,n,s,a):function(e,t,n,s,a=.001){return(0,r.lub)((()=>{const i=r.Gi7(e,s),o=i.mean,l=i.variance,u=[];for(const t of Sa(0,e.rank))-1!==s.indexOf(t)?u.push(1):u.push(e.shape[t]);const c=o.reshape(u),h=l.reshape(u),p=null==t?null:t.reshape(u),d=null==n?null:n.reshape(u);return[Cu(e,c,h,d,p,a),o,l]}))}(e,t,n,s,a)}(s,this.gamma.read(),this.beta.read(),o,this.epsilon),m=(e,t,n)=>{r.lub((()=>{const s=1-n,r=e.read(),a=r.sub(t).mul(s);e.write(r.sub(a))}))};return(()=>{m(this.movingMean,d,this.momentum),m(this.movingVariance,f,this.momentum)})(),p}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ui(this.betaInitializer),gammaInitializer:ui(this.gammaInitializer),movingMeanInitializer:ui(this.movingMeanInitializer),movingVarianceInitializer:ui(this.movingVarianceInitializer),betaRegularizer:dl(this.betaRegularizer),gammaRegularizer:dl(this.gammaRegularizer),betaConstraint:ra(this.betaConstraint),gammaConstraint:ra(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Iu.className="BatchNormalization",r.m7h.registerClass(Iu);class $u extends Ni{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ci(e.betaInitializer||"zeros"),this.gammaInitializer=ci(e.gammaInitializer||"ones"),this.betaRegularizer=ml(e.betaRegularizer),this.gammaRegularizer=ml(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=yi(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Gr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=bi(e),s=n.shape,a=s.length;return(0,r.lub)((()=>{let{mean:e,variance:t}=(0,r.Gi7)(n,this.axis,!0);const i=Dr(1,a);for(const e of this.axis)i[e]=s[e];const o=e=>null!=e&&e.shape.length!==a&&this.axis!==[a-1]?e.reshape(i):e;let l=o(this.gamma.read()),u=o(this.beta.read());const c=[],h=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(c.push(s[e]),h.push(1)):(c.push(1),h.push(s[e]));return e=e.tile(c),t=t.tile(c),l=l.tile(h),u=u.tile(h),Cu(n,e,t,u,l,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ui(this.betaInitializer),gammaInitializer:ui(this.gammaInitializer),betaRegularizer:dl(this.betaRegularizer),gammaRegularizer:dl(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}$u.className="LayerNormalization",r.m7h.registerClass($u);class Su extends Ni{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Tr(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Tr(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Tr(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ci({ndim:4})]}computeOutputShape(e){let t,n;return e=yi(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return(0,r.lub)((()=>{return t=bi(e),n=this.padding,s=this.dataFormat,(0,r.lub)((()=>{if(4!==t.rank)throw new Tr(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Tr("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Tr(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],r.vku(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Eu(e,t,n,s,a,i){return(0,r.lub)((()=>{let o;da(a),ma(i),fa(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=$l(e,a);const l="same"===s?"same":"valid";return o="max"===i?r._sB(e,t,n,l):r.wS1(e,t,n,l),"channelsFirst"===a&&(o=r.p4s(o,[0,3,1,2])),o}))}function Nu(e,t,n,s,a,i){return(0,r.lub)((()=>{let o;da(a),ma(i),fa(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==a&&(a="channelsLast"),null==i&&(i="max"),e=Sl(e,a);const l="same"===s?"same":"valid";return o="max"===i?r.YQQ(e,t,n,l):r.uR5(e,t,n,l),"channelsFirst"===a&&(o=r.p4s(o,[0,4,1,2,3])),o}))}Su.className="ZeroPadding2D",r.m7h.registerClass(Su);class Tu extends Ni{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Tr(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(qr(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Tr(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}qr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,fa(this.padding),this.inputSpec=[new Ci({ndim:3})]}computeOutputShape(e){const t=Cl((e=yi(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return(0,r.lub)((()=>{this.invokeCallHook(e,t),e=Na(bi(e),2);const n=this.poolingFunction(bi(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return r.L9e(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Ru extends Tu{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Eu(e,t,n,s,r,"max")}}Ru.className="MaxPooling1D",r.m7h.registerClass(Ru);class Au extends Tu{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Eu(e,t,n,s,r,"avg")}}Au.className="AveragePooling1D",r.m7h.registerClass(Au);class Du extends Ni{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Tr(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];qr(this.poolSize,"poolSize"),qr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,da(this.dataFormat),fa(this.padding),this.inputSpec=[new Ci({ndim:4})]}computeOutputShape(e){e=yi(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Cl(t,this.poolSize[0],this.padding,this.strides[0]),n=Cl(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(bi(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Fu extends Du{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Eu(e,t,n,s,r,"max")}}Fu.className="MaxPooling2D",r.m7h.registerClass(Fu);class _u extends Du{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Eu(e,t,n,s,r,"avg")}}_u.className="AveragePooling2D",r.m7h.registerClass(_u);class Ou extends Ni{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Tr(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];qr(this.poolSize,"poolSize"),qr(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,da(this.dataFormat),fa(this.padding),this.inputSpec=[new Ci({ndim:5})]}computeOutputShape(e){e=yi(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Cl(t,this.poolSize[0],this.padding,this.strides[0]),n=Cl(n,this.poolSize[1],this.padding,this.strides[1]),s=Cl(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return(0,r.lub)((()=>(this.invokeCallHook(e,t),this.poolingFunction(bi(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Lu extends Ou{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Nu(e,t,n,s,r,"max")}}Lu.className="MaxPooling3D",r.m7h.registerClass(Lu);class zu extends Ou{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return da(r),fa(s),Nu(e,t,n,s,r,"avg")}}zu.className="AveragePooling3D",r.m7h.registerClass(zu);class Bu extends Ni{constructor(e){super(e),this.inputSpec=[new Ci({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Rr}}class Mu extends Bu{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=bi(e);return r.J69(t,1)}))}}Mu.className="GlobalAveragePooling1D",r.m7h.registerClass(Mu);class Uu extends Bu{constructor(e){super(e||{})}call(e,t){return(0,r.lub)((()=>{const t=bi(e);return r.Fp7(t,1)}))}}Uu.className="GlobalMaxPooling1D",r.m7h.registerClass(Uu);class Pu extends Ni{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,da(this.dataFormat),this.inputSpec=[new Ci({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Rr}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Wu extends Pu{call(e,t){return(0,r.lub)((()=>{const t=bi(e);return"channelsLast"===this.dataFormat?r.J69(t,[1,2]):r.J69(t,[2,3])}))}}Wu.className="GlobalAveragePooling2D",r.m7h.registerClass(Wu);class Vu extends Pu{call(e,t){return(0,r.lub)((()=>{const t=bi(e);return"channelsLast"===this.dataFormat?r.Fp7(t,[1,2]):r.Fp7(t,[2,3])}))}}Vu.className="GlobalMaxPooling2D",r.m7h.registerClass(Vu);class Gu extends Ni{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Wi(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Hu extends Gu{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=yi(e)).length<3)throw new Tr(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=yi(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return(0,r.lub)((()=>Pl(((e,n)=>[bi(this.layer.call(e,t)),[]]),e=bi(e),[],!1,null,null,!1,!0)[1]))}}Hu.className="TimeDistributed",r.m7h.registerClass(Hu);class ju extends Gu{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Wi(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Wi(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,jr(ha,"BidirectionalMergeMode",r),e.weights)throw new Rr("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),r=r,this.returnState?(s=r.slice(1),t=r[0]):t=r[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):Or(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ul(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Tr("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new Ci({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Rr("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof Ii;for(const e of a)if(e instanceof Ii!==o)throw new Tr("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return(0,r.lub)((()=>{const n=t.initialState;let s,a,i,o;if(null==n)s=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const r=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:r})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(i=s.slice(1).concat(a.slice(1))),s=s[0],a=a[0]),this.returnSequences&&(a=r.GYS(a,1)),"concat"===this.mergeMode?o=Da([s,a]):"sum"===this.mergeMode?o=r.IHx(s,a):"ave"===this.mergeMode?o=r.dC7(.5,r.IHx(s,a)):"mul"===this.mergeMode?o=r.dC7(s,a):null==this.mergeMode&&(o=[s,a]),this.returnState?null==this.mergeMode?o.concat(i):[o].concat(i):o}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){ba(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),ba(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Wi(t.layer);if(delete t.layer,null!=t.numConstants)throw new Rr("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}ju.className="Bidirectional",r.m7h.registerClass(ju);var Xu=function(e,t){return(Xu=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},qu=function(){return(qu=Object.assign||function(e){for(var t,n=1,s=arguments.length;n<s;n++)for(var r in t=arguments[n])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};function Ku(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))}function Yu(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(r=(r=i.trys).length>0&&r[r.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}function Ju(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],s=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&s>=e.length&&(e=void 0),{value:e&&e[s++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Zu(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var s,r,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(s=a.next()).done;)i.push(s.value)}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return i}function Qu(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(Zu(arguments[t]));return e}function ec(e){return Ku(this,void 0,void 0,(function(){var t,s,r,i,o;return Yu(this,(function(l){switch(l.label){case 0:return t="file://",0!==e.indexOf("http://")&&0!==e.indexOf("https://")?[3,3]:[4,fetch(e)];case 1:return[4,l.sent().json()];case 2:return[2,l.sent()];case 3:return 0!==e.indexOf(t)?[3,5]:(s=n(2723),r=(0,a.promisify)(s.readFile),o=(i=JSON).parse,[4,r(e.slice(t.length),{encoding:"utf-8"})]);case 4:return[2,o.apply(i,[l.sent()])];case 5:throw new Error("Unsupported URL scheme in metadata URL: "+e+". Supported schemes are: http://, https://, and (node.js-only) file://")}}))}))}var tc=null;function nc(e){return null==tc&&(tc=(0,r.y3$)().epsilon()),(0,r.lub)((function(){var t=(0,r.Gi7)(e),n=t.mean,s=t.variance;return(0,r.hiC)((0,r.luU)(e,n),(0,r.IHx)((0,r._b3)(s),tc))}))}function sc(e){return Ku(this,void 0,void 0,(function(){return Yu(this,(function(t){return[2,navigator.mediaDevices.getUserMedia({audio:null==e||e,video:!1})]}))}))}var rc=function(){function e(e){var t=this;if(null==e)throw new Error("Required configuration object is missing for BrowserFftFeatureExtractor constructor");if(null==e.spectrogramCallback)throw new Error("spectrogramCallback cannot be null or undefined");if(!(e.numFramesPerSpectrogram>0))throw new Error("Invalid value in numFramesPerSpectrogram: "+e.numFramesPerSpectrogram);if(e.suppressionTimeMillis<0)throw new Error("Expected suppressionTimeMillis to be >= 0, but got "+e.suppressionTimeMillis);if(this.suppressionTimeMillis=e.suppressionTimeMillis,this.spectrogramCallback=e.spectrogramCallback,this.numFrames=e.numFramesPerSpectrogram,this.sampleRateHz=e.sampleRateHz||44100,this.fftSize=e.fftSize||1024,this.frameDurationMillis=this.fftSize/this.sampleRateHz*1e3,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.overlapFactor=e.overlapFactor,this.includeRawAudio=e.includeRawAudio,r.D5U.assert(this.overlapFactor>=0&&this.overlapFactor<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+t.overlapFactor})),this.columnTruncateLength>this.fftSize)throw new Error("columnTruncateLength "+this.columnTruncateLength+" exceeds fftSize ("+this.fftSize+").");this.audioContextConstructor=window.AudioContext||window.webkitAudioContext}return e.prototype.start=function(e){return Ku(this,void 0,void 0,(function(){var t,n,s;return Yu(this,(function(r){switch(r.label){case 0:if(null!=this.frameIntervalTask)throw new Error("Cannot start already-started BrowserFftFeatureExtractor");return t=this,[4,sc(e)];case 1:return t.stream=r.sent(),this.audioContext=new this.audioContextConstructor({sampleRate:this.sampleRateHz}),n=this.audioContext.createMediaStreamSource(this.stream),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=0,n.connect(this.analyser),this.freqDataQueue=[],this.freqData=new Float32Array(this.fftSize),this.includeRawAudio&&(this.timeDataQueue=[],this.timeData=new Float32Array(this.fftSize)),s=Math.max(1,Math.round(this.numFrames*(1-this.overlapFactor))),this.tracker=new oc(s,Math.round(this.suppressionTimeMillis/this.frameDurationMillis)),this.frameIntervalTask=setInterval(this.onAudioFrame.bind(this),this.fftSize/this.sampleRateHz*1e3),[2]}}))}))},e.prototype.onAudioFrame=function(){return Ku(this,void 0,void 0,(function(){var e,t,n,s;return Yu(this,(function(a){switch(a.label){case 0:return this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0?[2]:(this.freqDataQueue.push(this.freqData.slice(0,this.columnTruncateLength)),this.includeRawAudio&&(this.analyser.getFloatTimeDomainData(this.timeData),this.timeDataQueue.push(this.timeData.slice())),this.freqDataQueue.length>this.numFrames&&this.freqDataQueue.shift(),this.tracker.tick()?(e=ac(this.freqDataQueue),t=ic(e,[1,this.numFrames,this.columnTruncateLength,1]),n=void 0,this.includeRawAudio&&(s=ac(this.timeDataQueue),n=ic(s,[1,this.numFrames*this.fftSize])),[4,this.spectrogramCallback(t,n)]):[3,2]);case 1:a.sent()&&this.tracker.suppress(),(0,r.B90)([t,n]),a.label=2;case 2:return[2]}}))}))},e.prototype.stop=function(){return Ku(this,void 0,void 0,(function(){return Yu(this,(function(e){if(null==this.frameIntervalTask)throw new Error("Cannot stop because there is no ongoing streaming activity.");return clearInterval(this.frameIntervalTask),this.frameIntervalTask=null,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop(),[2]}))}))},e.prototype.setConfig=function(e){throw new Error("setConfig() is not implemented for BrowserFftFeatureExtractor.")},e.prototype.getFeatures=function(){throw new Error("getFeatures() is not implemented for BrowserFftFeatureExtractor. Use the spectrogramCallback field of the constructor config instead.")},e}();function ac(e){var t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((function(e,s){return n.set(e,s*t)})),n}function ic(e,t){var n=new Float32Array(r.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,r.XeE)(n,t)}var oc=function(){function e(e,t){var n=this;this.period=e,this.suppressionTime=null==t?0:t,this.counter=0,r.D5U.assert(this.period>0,(function(){return"Expected period to be positive, but got "+n.period}))}return e.prototype.tick=function(){return this.counter++,this.counter%this.period==0&&(null==this.suppressionOnset||this.counter-this.suppressionOnset>this.suppressionTime)},e.prototype.suppress=function(){this.suppressionOnset=this.counter},e}();function lc(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),s=0;return e.forEach((function(e){n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function uc(e){if(null==e)throw new Error("Received null or undefind string");for(var t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length),s=0;s<t.length;++s)n[s]=t.charCodeAt(s);return n.buffer}function cc(e){if(null==e)throw new Error("Received null or undefind buffer");var t=new Uint8Array(e);return decodeURIComponent(escape(String.fromCharCode.apply(String,Qu(t))))}var hc="TFJSSCDS",pc="_background_noise_",dc=function(){function e(e){if(this.examples={},this.label2Ids={},null!=e)for(var t=function(e){r.D5U.assert(null!=e,(function(){return"Received null or undefined buffer"}));var t=0,n=cc(e.slice(t,hc.length));r.D5U.assert(n===hc,(function(){return"Deserialization error: Invalid descriptor"})),t+=hc.length,t+=4;var s=new Uint32Array(e,t,1),a=t+=4;t=a+s[0];var i=cc(e.slice(a,t));return{manifest:JSON.parse(i),data:e.slice(t)}}(e),n=0,s=0;s<t.manifest.length;++s){var a=t.manifest[s],i=a.spectrogramNumFrames*a.spectrogramFrameSize;null!=a.rawAudioNumSamples&&(i+=a.rawAudioNumSamples),i*=4,this.addExample(mc({spec:a,data:t.data.slice(n,n+i)})),n+=i}}return e.prototype.addExample=function(e){r.D5U.assert(null!=e,(function(){return"Got null or undefined example"})),r.D5U.assert(null!=e.label&&e.label.length>0,(function(){return"Expected label to be a non-empty string, but got "+JSON.stringify(e.label)}));var t=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}();return this.examples[t]=e,e.label in this.label2Ids||(this.label2Ids[e.label]=[]),this.label2Ids[e.label].push(t),t},e.prototype.merge=function(e){var t,n,s,a;r.D5U.assert(e!==this,(function(){return"Cannot merge a dataset into itself"}));var i=e.getVocabulary();try{for(var o=Ju(i),l=o.next();!l.done;l=o.next()){var u=l.value,c=e.getExamples(u);try{for(var h=(s=void 0,Ju(c)),p=h.next();!p.done;p=h.next()){var d=p.value;this.addExample(d.example)}}catch(e){s={error:e}}finally{try{p&&!p.done&&(a=h.return)&&a.call(h)}finally{if(s)throw s.error}}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.getExampleCounts=function(){var e={};for(var t in this.examples){var n=this.examples[t];n.label in e||(e[n.label]=0),e[n.label]++}return e},e.prototype.getExamples=function(e){var t=this;r.D5U.assert(null!=e,(function(){return"Expected label to be a string, but got "+JSON.stringify(e)})),r.D5U.assert(e in this.label2Ids,(function(){return'No example of label "'+e+'" exists in dataset'}));var n=[];return this.label2Ids[e].forEach((function(e){n.push({uid:e,example:t.examples[e]})})),n},e.prototype.getData=function(e,t){var n=this;r.D5U.assert(this.size()>0,(function(){return"Cannot get spectrograms as tensors because the dataset is empty"}));var s=this.getVocabulary();null!=e?r.D5U.assert(-1!==s.indexOf(e),(function(){return"Label "+e+" is not in the vocabulary ("+JSON.stringify(s)+")"})):r.D5U.assert(s.length>1,(function(){return"One-hot encoding of labels requires the vocabulary to have at least two words, but it has only "+s.length+" word."})),null==t&&(t={});var a,i,o=this.getSortedUniqueNumFrames();1===o.length?(a=null==t.numFrames?o[0]:t.numFrames,i=null==t.hopFrames?1:t.hopFrames):(a=t.numFrames,r.D5U.assert(null!=a&&Number.isInteger(a)&&a>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence numFrames is required. But it is not provided."})),r.D5U.assert(a<=o[0],(function(){return"numFrames ("+a+") exceeds the minimum numFrames ("+o[0]+") among the examples of the Dataset."})),i=t.hopFrames,r.D5U.assert(null!=i&&Number.isInteger(i)&&i>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence hopFrames is required. But it is not provided."})));var l=null==t.normalize||t.normalize;return(0,r.lub)((function(){for(var o,u,c,h=[],p=[],d=[],f=0;f<s.length;++f){var m=s[f];if(null==e||m===e){var g=n.label2Ids[m],b=function(s){var o,u,g=n.examples[s].spectrogram,b=g.frameSize;null==c?c=b:r.D5U.assert(b===c,(function(){return"Mismatch in frameSize  ("+b+" vs "+c+")"}));var y=g.data.length/b,x=null;m!==pc&&(x=null==g.keyFrameIndex?bc(g).dataSync()[0]:g.keyFrameIndex);var w=(0,r.wOQ)(g.data,[y,b,1]),v=gc(y,x,a,i),k=function(n){var s=(0,r.lub)((function(){var e=(0,r.tPi)(w,[n[0],0,0],[n[1]-n[0],-1,-1]);return l?nc(e):e}));t.getDataset?p.push(s.dataSync()):h.push(s),null==e&&d.push(f)};try{for(var C=(o=void 0,Ju(v)),I=C.next();!I.done;I=C.next())k(I.value)}catch(e){o={error:e}}finally{try{I&&!I.done&&(u=C.return)&&u.call(C)}finally{if(o)throw o.error}}(0,r.B90)(w)};try{for(var y=(o=void 0,Ju(g)),x=y.next();!x.done;x=y.next())b(x.value)}catch(e){o={error:e}}finally{try{x&&!x.done&&(u=y.return)&&u.call(y)}finally{if(o)throw o.error}}}}null!=t.augmentByMixingNoiseRatio&&n.augmentByMixingNoise(t.getDataset?p:h,d,t.augmentByMixingNoiseRatio);var w=null==t.shuffle||t.shuffle;if(t.getDataset){var v=null==t.datasetBatchSize?32:t.datasetBatchSize,k=null==t.datasetValidationSplit?.15:t.datasetValidationSplit;r.D5U.assert(k>0&&k<1,(function(){return"Invalid dataset validation split: "+k}));var C=p.map((function(e,t){return[e,d[t]]}));r.D5U.shuffle(C),p=C.map((function(e){return e[0]}));var I=C.map((function(e){return e[1]})),$=function(e,t,n){var s,a,i,o,l,u,c,h;r.D5U.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n}));for(var p=!Array.isArray(e[0]),d=t,f=[],m=0;m<d.length;++m){var g=d[m];null==f[g]&&(f[g]=[]),f[g].push(m)}var b=f.length,y=[],x=[];for(f.map((function(e){return r.D5U.shuffle(e)})),m=0;m<b;++m)for(var w=f[m],v=Math.round(w.length*(1-n)),k=0;k<w.length;++k)k<v?y.push(w[k]):x.push(w[k]);if(p){var C=[],I=[],$=[],S=[];try{for(var E=Ju(y),N=E.next();!N.done;N=E.next()){var T=N.value;C.push(e[T]),I.push(t[T])}}catch(e){s={error:e}}finally{try{N&&!N.done&&(a=E.return)&&a.call(E)}finally{if(s)throw s.error}}try{for(var R=Ju(x),A=R.next();!A.done;A=R.next())T=A.value,$.push(e[T]),S.push(t[T])}catch(e){i={error:e}}finally{try{A&&!A.done&&(o=R.return)&&o.call(R)}finally{if(i)throw i.error}}return{trainXs:C,trainYs:I,valXs:$,valYs:S}}C=[],I=[],$=[],S=[];try{for(var D=Ju(y),F=D.next();!F.done;F=D.next())T=F.value,C.push(e[T]),I.push(t[T])}catch(e){l={error:e}}finally{try{F&&!F.done&&(u=D.return)&&u.call(D)}finally{if(l)throw l.error}}try{for(var _=Ju(x),O=_.next();!O.done;O=_.next())T=O.value,$.push(e[T]),S.push(t[T])}catch(e){c={error:e}}finally{try{O&&!O.done&&(h=_.return)&&h.call(_)}finally{if(c)throw c.error}}return{trainXs:C,trainYs:I,valXs:$,valYs:S}}(p,I,k),S=$.trainXs,E=$.trainYs,N=$.valXs,T=$.valYs,R=z({xs:L(S).map((function(e){return(0,r.wOQ)(e,[a,c,1])})),ys:L(E).map((function(e){return(0,r.L9e)((0,r.lfX)([e],s.length),[0])}))});w&&(R=R.shuffle(p.length)),R=R.batch(v).prefetch(4);var A=z({xs:L(N).map((function(e){return(0,r.wOQ)(e,[a,c,1])})),ys:L(T).map((function(e){return(0,r.L9e)((0,r.lfX)([e],s.length),[0])}))});return[R,A=A.batch(v).prefetch(4)]}if(w){var D=[];h.forEach((function(e,t){D.push({x:e,y:d[t]})})),r.D5U.shuffle(D),h=D.map((function(e){return e.x})),d=D.map((function(e){return e.y}))}var F=null==e?(0,r.pju)((0,r.lfX)((0,r.RRF)(d,"int32"),s.length),"float32"):void 0;return{xs:(0,r.knu)(h),ys:F}}))},e.prototype.augmentByMixingNoise=function(e,t,n){var s,a;if(null==e||0===e.length)throw new Error("Cannot perform augmentation because data is null or empty");for(var i=e[0]instanceof Float32Array,o=this.getVocabulary(),l=[],u=[],c=0;c<t.length;++c)o[t[c]]===pc?l.push(c):u.push(c);if(0===l.length)throw new Error("Cannot perform augmentation by mixing with noise when there is no example with label _background_noise_");var h=[],p=[],d=function(s){var a=l[function(e,t){return Math.floor((t-0)*Math.random())+0}(0,l.length)],o=i?(0,r.RRF)(e[s]):e[s],u=i?(0,r.RRF)(e[a]):e[a],c=(0,r.lub)((function(){return nc((0,r.IHx)(o,(0,r.dC7)(u,n)))}));i?h.push(c.dataSync()):h.push(c),p.push(t[s])};try{for(var f=Ju(u),m=f.next();!m.done;m=f.next())d(m.value)}catch(e){s={error:e}}finally{try{m&&!m.done&&(a=f.return)&&a.call(f)}finally{if(s)throw s.error}}console.log("Data augmentation: mixing noise: added "+h.length+" examples"),h.forEach((function(t){return e.push(t)})),t.push.apply(t,Qu(p))},e.prototype.getSortedUniqueNumFrames=function(){for(var e,t,n=new Set,s=this.getVocabulary(),r=0;r<s.length;++r){var a=s[r],i=this.label2Ids[a];try{for(var o=(e=void 0,Ju(i)),l=o.next();!l.done;l=o.next()){var u=l.value,c=this.examples[u].spectrogram,h=c.data.length/c.frameSize;n.add(h)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}}var p=Qu(n);return p.sort(),p},e.prototype.removeExample=function(e){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var t=this.examples[e].label;delete this.examples[e];var n=this.label2Ids[t].indexOf(e);this.label2Ids[t].splice(n,1),0===this.label2Ids[t].length&&delete this.label2Ids[t]},e.prototype.setExampleKeyFrameIndex=function(e,t){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var n=this.examples[e].spectrogram,s=n.data.length/n.frameSize;r.D5U.assert(t>=0&&t<s&&Number.isInteger(t),(function(){return"Invalid keyFrameIndex: "+t+". Must be >= 0, < "+s+", and an integer."})),n.keyFrameIndex=t},e.prototype.size=function(){return Object.keys(this.examples).length},e.prototype.durationMillis=function(){var e=0;for(var t in this.examples){var n=this.examples[t].spectrogram,s=23.22|n.frameDurationMillis;e+=n.data.length/n.frameSize*s}return e},e.prototype.empty=function(){return 0===this.size()},e.prototype.clear=function(){this.examples={}},e.prototype.getVocabulary=function(){var e=new Set;for(var t in this.examples){var n=this.examples[t];e.add(n.label)}var s=Qu(e);return s.sort(),s},e.prototype.serialize=function(e){var t,n,s,a,i=this.getVocabulary();r.D5U.assert(!this.empty(),(function(){return"Cannot serialize empty Dataset"})),null!=e&&(Array.isArray(e)||(e=[e]),e.forEach((function(e){if(-1===i.indexOf(e))throw new Error('Word label "'+e+'" does not exist in the vocabulary of this dataset. The vocabulary is: '+JSON.stringify(i)+".")})));var o=[],l=[];try{for(var u=Ju(i),c=u.next();!c.done;c=u.next()){var h=c.value;if(null==e||-1!==e.indexOf(h)){var p=this.label2Ids[h];try{for(var d=(s=void 0,Ju(p)),f=d.next();!f.done;f=d.next()){var m=f.value,g=fc(this.examples[m]);o.push(g.spec),l.push(g.data)}}catch(e){s={error:e}}finally{try{f&&!f.done&&(a=d.return)&&a.call(d)}finally{if(s)throw s.error}}}}}catch(e){t={error:e}}finally{try{c&&!c.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}return function(e){var t=uc(JSON.stringify(e.manifest)),n=uc(hc),s=new Uint32Array([1]),r=new Uint32Array([t.byteLength]);return lc([lc([n,s.buffer,r.buffer]),t,e.data])}({manifest:o,data:lc(l)})},e}();function fc(e){var t=null!=e.rawAudio,n={label:e.label,spectrogramNumFrames:e.spectrogram.data.length/e.spectrogram.frameSize,spectrogramFrameSize:e.spectrogram.frameSize};null!=e.spectrogram.keyFrameIndex&&(n.spectrogramKeyFrameIndex=e.spectrogram.keyFrameIndex);var s=e.spectrogram.data.buffer.slice(0);return t&&(n.rawAudioNumSamples=e.rawAudio.data.length,n.rawAudioSampleRateHz=e.rawAudio.sampleRateHz,s=lc([s,e.rawAudio.data.buffer])),{spec:n,data:s}}function mc(e){var t={frameSize:e.spec.spectrogramFrameSize,data:new Float32Array(e.data.slice(0,4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))};null!=e.spec.spectrogramKeyFrameIndex&&(t.keyFrameIndex=e.spec.spectrogramKeyFrameIndex);var n={label:e.spec.label,spectrogram:t};return null!=e.spec.rawAudioNumSamples&&(n.rawAudio={sampleRateHz:e.spec.rawAudioSampleRateHz,data:new Float32Array(e.data.slice(4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))}),n}function gc(e,t,n,s){if(r.D5U.assert(Number.isInteger(e)&&e>0,(function(){return"snippetLength must be a positive integer, but got "+e})),null!=t&&r.D5U.assert(Number.isInteger(t)&&t>=0,(function(){return"focusIndex must be a non-negative integer, but got "+t})),r.D5U.assert(Number.isInteger(n)&&n>0,(function(){return"windowLength must be a positive integer, but got "+n})),r.D5U.assert(Number.isInteger(s)&&s>0,(function(){return"windowHop must be a positive integer, but got "+s})),r.D5U.assert(n<=e,(function(){return"windowLength ("+n+") exceeds snippetLength ("+e+")"})),r.D5U.assert(t<e,(function(){return"focusIndex ("+t+") equals or exceeds snippetLength ("+e+")"})),n===e)return[[0,e]];var a=[];if(null==t){for(var i=0;i+n<=e;)a.push([i,i+n]),i+=s;return a}var o=Math.floor(n/2),l=t-o;for(l<0?l=0:l+n>e&&(l=e-n);!(l-s<0||t>=l-s+n);)l-=s;for(;l+n<=e&&!(t<l);)a.push([l,l+n]),l+=s;return a}function bc(e){return(0,r.lub)((function(){return(0,r.NqF)(function(e){return(0,r.lub)((function(){var t=e.data.length/e.frameSize,n=(0,r.odF)(e.data,[t,e.frameSize]);return(0,r.J69)(n,-1)}))}(e))}))}var yc="0.5.4",xc="tfjs-speech-commands-saved-model-metadata",wc={localStorage:"undefined"==typeof window?null:window.localStorage},vc=.25,kc=function(){function e(t,n,s){this.MODEL_URL_PREFIX="https://storage.googleapis.com/tfjs-models/tfjs/speech-commands/v"+function(e){return e.split(".").slice(0,2).join(".")}(yc)+"/browser_fft",this.SAMPLE_RATE_HZ=44100,this.FFT_SIZE=1024,this.DEFAULT_SUPPRESSION_TIME_MILLIS=0,this.streaming=!1,this.transferRecognizers={},r.D5U.assert(null==n&&null==s||null!=n&&null!=s,(function(){return"modelURL and metadataURL must be both provided or both not provided."})),null==n?(null==t?t=e.DEFAULT_VOCABULARY_NAME:r.D5U.assert(-1!==e.VALID_VOCABULARY_NAMES.indexOf(t),(function(){return"Invalid vocabulary name: '"+t+"'"})),this.vocabulary=t,this.modelArtifactsOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/model.json",this.metadataOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/metadata.json"):(r.D5U.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided"})),this.modelArtifactsOrURL=n,this.metadataOrURL=s),this.parameters={sampleRateHz:this.SAMPLE_RATE_HZ,fftSize:this.FFT_SIZE}}return e.prototype.listen=function(e,t){return Ku(this,void 0,void 0,(function(){var n,s,a,i,o,l=this;return Yu(this,(function(u){switch(u.label){case 0:if(this.streaming)throw new Error("Cannot start streaming again when streaming is ongoing.");return[4,this.ensureModelLoaded()];case 1:if(u.sent(),null==t&&(t={}),n=null==t.probabilityThreshold?0:t.probabilityThreshold,t.includeEmbedding&&(n=0),r.D5U.assert(n>=0&&n<=1,(function(){return"Invalid probabilityThreshold value: "+n})),s=null!=t.invokeCallbackOnNoiseAndUnknown&&t.invokeCallbackOnNoiseAndUnknown,t.includeEmbedding&&(s=!0),t.suppressionTimeMillis<0)throw new Error("suppressionTimeMillis is expected to be >= 0, but got "+t.suppressionTimeMillis);return a=null==t.overlapFactor?.5:t.overlapFactor,r.D5U.assert(a>=0&&a<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+a})),i=function(a,i){return Ku(l,void 0,void 0,(function(){var i,o,l,u,c,h,p,d,f,m,g;return Yu(this,(function(b){switch(b.label){case 0:return i=nc(a),t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,2];case 1:return b.sent(),g=Zu(this.modelWithEmbeddingOutput.predict(i),2),o=g[0],l=g[1],[3,3];case 2:o=this.model.predict(i),b.label=3;case 3:return[4,o.data()];case 4:return u=b.sent(),[4,(c=o.argMax(-1)).data()];case 5:return h=b.sent()[0],p=Math.max.apply(Math,Qu(u)),(0,r.B90)([o,c,i]),p<n?[2,!1]:[3,6];case 6:return d=void 0,t.includeSpectrogram?(f={},[4,a.data()]):[3,8];case 7:f.data=b.sent(),f.frameSize=this.nonBatchInputShape[1],d=f,b.label=8;case 8:return m=!0,s||this.words[h]!==pc&&"_unknown_"!==this.words[h]||(m=!1),m&&e({scores:u,spectrogram:d,embedding:l}),[2,m]}}))}))},o=null==t.suppressionTimeMillis?this.DEFAULT_SUPPRESSION_TIME_MILLIS:t.suppressionTimeMillis,this.audioDataExtractor=new rc({sampleRateHz:this.parameters.sampleRateHz,numFramesPerSpectrogram:this.nonBatchInputShape[0],columnTruncateLength:this.nonBatchInputShape[1],suppressionTimeMillis:o,spectrogramCallback:i,overlapFactor:a}),[4,this.audioDataExtractor.start(t.audioTrackConstraints)];case 2:return u.sent(),this.streaming=!0,[2]}}))}))},e.prototype.ensureModelLoaded=function(){return Ku(this,void 0,void 0,(function(){var e,t,n,s,a=this;return Yu(this,(function(i){switch(i.label){case 0:return null!=this.model?[2]:[4,this.ensureMetadataLoaded()];case 1:return i.sent(),"string"!=typeof this.modelArtifactsOrURL?[3,3]:[4,Ho(this.modelArtifactsOrURL)];case 2:return e=i.sent(),[3,5];case 3:return[4,Ho(r.io.fromMemory(this.modelArtifactsOrURL.modelTopology,this.modelArtifactsOrURL.weightSpecs,this.modelArtifactsOrURL.weightData))];case 4:e=i.sent(),i.label=5;case 5:if(1!==e.inputs.length)throw new Error("Expected model to have 1 input, but got a model with "+e.inputs.length+" inputs");if(4!==e.inputs[0].shape.length)throw new Error("Expected model to have an input shape of rank 4, but got an input shape of rank "+e.inputs[0].shape.length);if(1!==e.inputs[0].shape[3])throw new Error("Expected model to have an input shape with 1 as the last dimension, but got input shape"+JSON.stringify(e.inputs[0].shape[3])+"}");if(2!==(t=e.outputShape).length)throw new Error("Expected loaded model to have an output shape of rank 2,but received shape "+JSON.stringify(t));if(t[1]!==this.words.length)throw new Error("Mismatch between the last dimension of model's output shape ("+t[1]+") and number of words ("+this.words.length+").");return this.model=e,this.freezeModel(),this.nonBatchInputShape=e.inputs[0].shape.slice(1),this.elementsPerExample=1,e.inputs[0].shape.slice(1).forEach((function(e){return a.elementsPerExample*=e})),this.warmUpModel(),n=this.parameters.fftSize/this.parameters.sampleRateHz*1e3,s=e.inputs[0].shape[1],this.parameters.spectrogramDurationMillis=s*n,[2]}}))}))},e.prototype.ensureModelWithEmbeddingOutputCreated=function(){return Ku(this,void 0,void 0,(function(){var e,t;return Yu(this,(function(n){switch(n.label){case 0:return null!=this.modelWithEmbeddingOutput?[2]:[4,this.ensureModelLoaded()];case 1:for(n.sent(),t=this.model.layers.length-2;t>=0;--t)if("Dense"===this.model.layers[t].getClassName()){e=this.model.layers[t];break}if(null==e)throw new Error("Failed to find second last dense layer in the original model.");return this.modelWithEmbeddingOutput=Go({inputs:this.model.inputs,outputs:[this.model.outputs[0],e.output]}),[2]}}))}))},e.prototype.warmUpModel=function(){var e=this;(0,r.lub)((function(){for(var t=(0,r.lls)([1].concat(e.nonBatchInputShape)),n=0;n<3;++n)e.model.predict(t)}))},e.prototype.ensureMetadataLoaded=function(){return Ku(this,void 0,void 0,(function(){var e,t,n;return Yu(this,(function(s){switch(s.label){case 0:return null!=this.words?[2]:"string"!=typeof this.metadataOrURL?[3,2]:[4,ec(this.metadataOrURL)];case 1:return t=s.sent(),[3,3];case 2:t=this.metadataOrURL,s.label=3;case 3:if(null==(e=t).wordLabels){if(null==(n=e.words))throw new Error('Cannot find field "words" or "wordLabels" in metadata JSON file');this.words=n}else this.words=e.wordLabels;return[2]}}))}))},e.prototype.stopListening=function(){return Ku(this,void 0,void 0,(function(){return Yu(this,(function(e){switch(e.label){case 0:if(!this.streaming)throw new Error("Cannot stop streaming when streaming is not ongoing.");return[4,this.audioDataExtractor.stop()];case 1:return e.sent(),this.streaming=!1,[2]}}))}))},e.prototype.isListening=function(){return this.streaming},e.prototype.wordLabels=function(){return this.words},e.prototype.params=function(){return this.parameters},e.prototype.modelInputShape=function(){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognize(), or listen().");return this.model.inputs[0].shape},e.prototype.recognize=function(e,t){return Ku(this,void 0,void 0,(function(){var n,s,a,i,o,l,u,c,h,p,d,f,m;return Yu(this,(function(g){switch(g.label){case 0:return null==t&&(t={}),[4,this.ensureModelLoaded()];case 1:return g.sent(),null!=e?[3,3]:[4,this.recognizeOnline()];case 2:n=g.sent(),e=n.data,g.label=3;case 3:if(e instanceof r.esB)this.checkInputTensorShape(e),a=e,s=e.shape[0];else{if(e.length%this.elementsPerExample)throw new Error("The length of the input Float32Array "+e.length+" is not divisible by the number of tensor elements per per example expected by the model "+this.elementsPerExample+".");s=e.length/this.elementsPerExample,a=(0,r.yXz)(e,[s].concat(this.nonBatchInputShape))}return o={scores:null},t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,5];case 4:return g.sent(),l=this.modelWithEmbeddingOutput.predict(a),i=l[0],o.embedding=l[1],[3,6];case 5:i=this.model.predict(a),g.label=6;case 6:return 1!==s?[3,8]:(u=o,[4,i.data()]);case 7:return u.scores=g.sent(),[3,10];case 8:return c=(0,r.HHK)(i),h=c.map((function(e){return e.data()})),p=o,[4,Promise.all(h)];case 9:p.scores=g.sent(),(0,r.B90)(c),g.label=10;case 10:return t.includeSpectrogram?(d=o,f={},e instanceof r.esB?[4,e.data()]:[3,12]):[3,14];case 11:return m=g.sent(),[3,13];case 12:m=e,g.label=13;case 13:d.spectrogram=(f.data=m,f.frameSize=this.nonBatchInputShape[1],f),g.label=14;case 14:return(0,r.B90)(i),[2,o]}}))}))},e.prototype.recognizeOnline=function(){return Ku(this,void 0,void 0,(function(){var e=this;return Yu(this,(function(t){return[2,new Promise((function(t,n){e.audioDataExtractor=new rc({sampleRateHz:e.parameters.sampleRateHz,numFramesPerSpectrogram:e.nonBatchInputShape[0],columnTruncateLength:e.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n){return Ku(e,void 0,void 0,(function(){var e,s,r;return Yu(this,(function(a){switch(a.label){case 0:return e=nc(n),[4,this.audioDataExtractor.stop()];case 1:return a.sent(),s=t,r={},[4,e.data()];case 2:return s.apply(void 0,[(r.data=a.sent(),r.frameSize=this.nonBatchInputShape[1],r)]),e.dispose(),[2,!1]}}))}))},overlapFactor:0}),e.audioDataExtractor.start()}))]}))}))},e.prototype.createTransfer=function(e){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognizer(), or listen().");r.D5U.assert(null!=e&&"string"==typeof e&&e.length>1,(function(){return"Expected the name for a transfer-learning recognized to be a non-empty string, but got "+JSON.stringify(e)})),r.D5U.assert(null==this.transferRecognizers[e],(function(){return"There is already a transfer-learning model named '"+e+"'"}));var t=new Cc(e,this.parameters,this.model);return this.transferRecognizers[e]=t,t},e.prototype.freezeModel=function(){var e,t;try{for(var n=Ju(this.model.layers),s=n.next();!s.done;s=n.next())s.value.trainable=!1}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}},e.prototype.checkInputTensorShape=function(e){var t=this.model.inputs[0].shape.length;if(e.shape.length!==t)throw new Error("Expected input Tensor to have rank "+t+", but got rank "+e.shape.length+" that differs ");var n=e.shape.slice(1),s=this.model.inputs[0].shape.slice(1);if(!r.D5U.arraysEqual(n,s))throw new Error("Expected input to have shape [null,"+s+"], but got shape [null,"+n+"]")},e.VALID_VOCABULARY_NAMES=["18w","directional4w"],e.DEFAULT_VOCABULARY_NAME="18w",e}(),Cc=function(e){function t(t,n,s){var a=e.call(this)||this;return a.name=t,a.parameters=n,a.baseModel=s,r.D5U.assert(null!=t&&"string"==typeof t&&t.length>0,(function(){return"The name of a transfer model must be a non-empty string, but got "+JSON.stringify(t)})),a.nonBatchInputShape=a.baseModel.inputs[0].shape.slice(1),a.words=null,a.dataset=new dc,a}return function(e,t){function n(){this.constructor=e}Xu(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.prototype.collectExample=function(e,t){return Ku(this,void 0,void 0,(function(){var n,s,a,i,o=this;return Yu(this,(function(l){if(r.D5U.assert(!this.streaming,(function(){return"Cannot start collection of transfer-learning example because a streaming recognition or transfer-learning example collection is ongoing"})),r.D5U.assert(null!=e&&"string"==typeof e&&e.length>0,(function(){return"Must provide a non-empty string when collecting transfer-learning example"})),null==t&&(t={}),null!=t.durationMultiplier&&null!=t.durationSec)throw new Error("durationMultiplier and durationSec are mutually exclusive, but are both specified.");return null!=t.durationSec?(r.D5U.assert(t.durationSec>0,(function(){return"Expected durationSec to be > 0, but got "+t.durationSec})),s=this.parameters.fftSize/this.parameters.sampleRateHz,n=Math.ceil(t.durationSec/s)):null!=t.durationMultiplier?(r.D5U.assert(t.durationMultiplier>=1,(function(){return"Expected duration multiplier to be >= 1, but got "+t.durationMultiplier})),n=Math.round(this.nonBatchInputShape[0]*t.durationMultiplier)):n=this.nonBatchInputShape[0],null!=t.snippetDurationSec&&(r.D5U.assert(t.snippetDurationSec>0,(function(){return"snippetDurationSec is expected to be > 0, but got "+t.snippetDurationSec})),r.D5U.assert(null!=t.onSnippet,(function(){return"onSnippet must be provided if snippetDurationSec is provided."}))),null!=t.onSnippet&&r.D5U.assert(null!=t.snippetDurationSec,(function(){return"snippetDurationSec must be provided if onSnippet is provided."})),a=this.parameters.fftSize/this.parameters.sampleRateHz,i=a*n,this.streaming=!0,[2,new Promise((function(s){var a=null==t.snippetDurationSec?1:t.snippetDurationSec/i,l=1-a,u=Math.round(1/a),c=0,h=-1,p=[];o.audioDataExtractor=new rc({sampleRateHz:o.parameters.sampleRateHz,numFramesPerSpectrogram:n,columnTruncateLength:o.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n,a){return Ku(o,void 0,void 0,(function(){var i,o,l,d,f,m,g,b,y,x,w,v,k,C,I,$,S,E,N,T;return Yu(this,(function(R){switch(R.label){case 0:return null!=t.onSnippet?[3,7]:(i=nc(n),l=(o=this.dataset).addExample,d={label:e},f={},[4,i.data()]);case 1:return d.spectrogram=(f.data=R.sent(),f.frameSize=this.nonBatchInputShape[1],f),t.includeRawAudio?(g={},[4,a.data()]):[3,3];case 2:return g.data=R.sent(),g.sampleRateHz=this.audioDataExtractor.sampleRateHz,m=g,[3,4];case 3:m=void 0,R.label=4;case 4:return l.apply(o,[(d.rawAudio=m,d)]),i.dispose(),[4,this.audioDataExtractor.stop()];case 5:return R.sent(),this.streaming=!1,this.collateTransferWords(),b=s,y={},[4,n.data()];case 6:return b.apply(void 0,[(y.data=R.sent(),y.frameSize=this.nonBatchInputShape[1],y)]),[3,13];case 7:return[4,n.data()];case 8:for(x=R.sent(),-1===h&&(h=x.length),w=h-1;0!==x[w]&&w>=0;)w--;return v=h-w-1,h=w+1,k=x.slice(x.length-v,x.length),p.push(k),null!=t.onSnippet&&t.onSnippet({data:k,frameSize:this.nonBatchInputShape[1]}),c++!==u?[3,13]:[4,this.audioDataExtractor.stop()];case 9:return R.sent(),this.streaming=!1,this.collateTransferWords(),C=function(e){if(e.length<2)throw new Error("Cannot normalize a Float32Array with fewer than 2 elements.");return null==tc&&(tc=(0,r.y3$)().epsilon()),(0,r.lub)((function(){var t=(0,r.Gi7)((0,r.RRF)(e)),n=t.mean,s=t.variance,a=n.arraySync(),i=Math.sqrt(s.arraySync()),o=Array.from(e).map((function(e){return(e-a)/(i+tc)}));return new Float32Array(o)}))}(function(e){var t=0;e.forEach((function(e){return t+=e.length}));var n=new Float32Array(t),s=0;return e.forEach((function(e){n.set(e,s),s+=e.length})),n}(p)),I={data:C,frameSize:this.nonBatchInputShape[1]},S=($=this.dataset).addExample,E={label:e,spectrogram:I},t.includeRawAudio?(T={},[4,a.data()]):[3,11];case 10:return T.data=R.sent(),T.sampleRateHz=this.audioDataExtractor.sampleRateHz,N=T,[3,12];case 11:N=void 0,R.label=12;case 12:S.apply($,[(E.rawAudio=N,E)]),s(I),R.label=13;case 13:return[2,!1]}}))}))},overlapFactor:l,includeRawAudio:t.includeRawAudio}),o.audioDataExtractor.start(t.audioTrackConstraints)}))]}))}))},t.prototype.clearExamples=function(){var e=this;r.D5U.assert(null!=this.words&&this.words.length>0&&!this.dataset.empty(),(function(){return"No transfer learning examples exist for model name "+e.name})),this.dataset.clear(),this.words=null},t.prototype.countExamples=function(){if(this.dataset.empty())throw new Error("No examples have been collected for transfer-learning model named '"+this.name+"' yet.");return this.dataset.getExampleCounts()},t.prototype.getExamples=function(e){return this.dataset.getExamples(e)},t.prototype.setExampleKeyFrameIndex=function(e,t){this.dataset.setExampleKeyFrameIndex(e,t)},t.prototype.removeExample=function(e){this.dataset.removeExample(e),this.collateTransferWords()},t.prototype.isDatasetEmpty=function(){return this.dataset.empty()},t.prototype.loadExamples=function(e,t){var n,s,r,a;void 0===t&&(t=!1);var i=new dc(e);t&&this.clearExamples();var o=i.getVocabulary();try{for(var l=Ju(o),u=l.next();!u.done;u=l.next()){var c=u.value,h=i.getExamples(c);try{for(var p=(r=void 0,Ju(h)),d=p.next();!d.done;d=p.next()){var f=d.value;this.dataset.addExample(f.example)}}catch(e){r={error:e}}finally{try{d&&!d.done&&(a=p.return)&&a.call(p)}finally{if(r)throw r.error}}}}catch(e){n={error:e}}finally{try{u&&!u.done&&(s=l.return)&&s.call(l)}finally{if(n)throw n.error}}this.collateTransferWords()},t.prototype.serializeExamples=function(e){return this.dataset.serialize(e)},t.prototype.collateTransferWords=function(){this.words=this.dataset.getVocabulary()},t.prototype.collectTransferDataAsTensors=function(e,t){var n=this.nonBatchInputShape[0];e=e||vc;var s=Math.round(e*n),r=this.dataset.getData(null,qu({numFrames:n,hopFrames:s},t));return{xs:r.xs,ys:r.ys}},t.prototype.collectTransferDataAsTfDataset=function(e,t,n,s){void 0===t&&(t=.15),void 0===n&&(n=32);var r=this.nonBatchInputShape[0];e=e||vc;var a=Math.round(e*r);return this.dataset.getData(null,qu({numFrames:r,hopFrames:a,getDataset:!0,datasetBatchSize:n,datasetValidationSplit:t},s))},t.prototype.train=function(e){return Ku(this,void 0,void 0,(function(){var t,n=this;return Yu(this,(function(s){return r.D5U.assert(null!=this.words&&this.words.length>0,(function(){return"Cannot train transfer-learning model '"+n.name+"' because no transfer learning example has been collected."})),r.D5U.assert(this.words.length>1,(function(){return"Cannot train transfer-learning model '"+n.name+"' because only 1 word label ('"+JSON.stringify(n.words)+"') has been collected for transfer learning. Requires at least 2."})),null!=e.fineTuningEpochs&&r.D5U.assert(e.fineTuningEpochs>=0&&Number.isInteger(e.fineTuningEpochs),(function(){return"If specified, fineTuningEpochs must be a non-negative integer, but received "+e.fineTuningEpochs})),null==e&&(e={}),null==this.model&&this.createTransferModelFromBaseModel(),this.secondLastBaseDenseLayer.trainable=!1,this.model.compile({loss:"categoricalCrossentropy",optimizer:e.optimizer||"sgd",metrics:["acc"]}),t=null==e.fitDatasetDurationMillisThreshold?6e4:e.fitDatasetDurationMillisThreshold,this.dataset.durationMillis()>t?(console.log("Detected large dataset: total duration = "+this.dataset.durationMillis()+" ms > "+t+" ms. Training transfer model using fitDataset() instead of fit()"),[2,this.trainOnDataset(e)]):[2,this.trainOnTensors(e)]}))}))},t.prototype.trainOnDataset=function(e){return Ku(this,void 0,void 0,(function(){var t,n,s,a,i,o,l,u,c;return Yu(this,(function(h){switch(h.label){case 0:return r.D5U.assert(e.epochs>0,(function(){return"Invalid config.epochs"})),t=null==e.batchSize?32:e.batchSize,n=e.windowHopRatio||vc,s=Zu(this.collectTransferDataAsTfDataset(n,e.validationSplit,t,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),2),a=s[0],i=s[1],o=r.D5U.now(),[4,this.model.fitDataset(a,{epochs:e.epochs,validationData:e.validationSplit>0?i:null,callbacks:null==e.callback?null:[e.callback]})];case 1:return l=h.sent(),console.log("fitDataset() took "+(r.D5U.now()-o).toFixed(2)+" ms"),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?(u=r.D5U.now(),[4,this.fineTuningUsingTfDatasets(e,a,i)]):[3,3];case 2:return c=h.sent(),console.log("fitDataset() (fine-tuning) took "+(r.D5U.now()-u).toFixed(2)+" ms"),[2,[l,c]];case 3:return[2,l]}}))}))},t.prototype.trainOnTensors=function(e){return Ku(this,void 0,void 0,(function(){var t,n,s,a,i,o,l,u,c,h;return Yu(this,(function(p){switch(p.label){case 0:t=e.windowHopRatio||vc,n=this.collectTransferDataAsTensors(t,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),s=n.xs,a=n.ys,console.log("Training data: xs.shape = "+s.shape+", ys.shape = "+a.shape),p.label=1;case 1:return p.trys.push([1,,6,7]),null!=e.validationSplit?(u=function(e,t,n){return r.D5U.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n})),(0,r.lub)((function(){for(var s=(0,r.NqF)(t,-1).dataSync(),a=[],i=0;i<s.length;++i){var o=s[i];null==a[o]&&(a[o]=[]),a[o].push(i)}var l=a.length,u=[],c=[];for(a.map((function(e){return r.D5U.shuffle(e)})),i=0;i<l;++i)for(var h=a[i],p=Math.round(h.length*(1-n)),d=0;d<h.length;++d)d<p?u.push(h[d]):c.push(h[d]);return{trainXs:(0,r.Iqj)(e,u),trainYs:(0,r.Iqj)(t,u),valXs:(0,r.Iqj)(e,c),valYs:(0,r.Iqj)(t,c)}}))}(s,a,e.validationSplit),i=u.trainXs,o=u.trainYs,l=[u.valXs,u.valYs]):(i=s,o=a),[4,this.model.fit(i,o,{epochs:null==e.epochs?20:e.epochs,validationData:l,batchSize:e.batchSize,callbacks:null==e.callback?null:[e.callback]})];case 2:return c=p.sent(),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?[4,this.fineTuningUsingTensors(e,i,o,l)]:[3,4];case 3:return h=p.sent(),[2,[c,h]];case 4:return[2,c];case 5:return[3,7];case 6:return(0,r.B90)([s,a,i,o,l]),[7];case 7:return[2]}}))}))},t.prototype.fineTuningUsingTfDatasets=function(e,t,n){return Ku(this,void 0,void 0,(function(){var s,r,a;return Yu(this,(function(i){switch(i.label){case 0:return s=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,r=null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:r,metrics:["acc"]}),[4,this.model.fitDataset(t,{epochs:e.fineTuningEpochs,validationData:n,callbacks:null==e.callback?null:[e.callback]})];case 1:return a=i.sent(),this.secondLastBaseDenseLayer.trainable=s,[2,a]}}))}))},t.prototype.fineTuningUsingTensors=function(e,t,n,s){return Ku(this,void 0,void 0,(function(){var r,a,i;return Yu(this,(function(o){switch(o.label){case 0:return r=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,a=null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:a,metrics:["acc"]}),[4,this.model.fit(t,n,{epochs:e.fineTuningEpochs,validationData:s,batchSize:e.batchSize,callbacks:null==e.fineTuningCallback?null:[e.fineTuningCallback]})];case 1:return i=o.sent(),this.secondLastBaseDenseLayer.trainable=r,[2,i]}}))}))},t.prototype.evaluate=function(e){return Ku(this,void 0,void 0,(function(){var t=this;return Yu(this,(function(n){return r.D5U.assert(null!=e.wordProbThresholds&&e.wordProbThresholds.length>0,(function(){return"Received null or empty wordProbThresholds"})),r.D5U.assert(this.words[0]===pc,(function(){return"Cannot perform evaluation when the first tag is not _background_noise_"})),[2,(0,r.lub)((function(){for(var n=[],s=0,a=t.collectTransferDataAsTensors(e.windowHopRatio),i=a.xs,o=a.ys.argMax(-1).dataSync(),l=t.model.predict(i),u=(0,r.Fp7)((0,r.tPi)(l,[0,1],[l.shape[0],l.shape[1]-1]),-1),c=l.shape[0],h=0;h<e.wordProbThresholds.length;++h){for(var p=e.wordProbThresholds[h],d=u.greater((0,r.iD$)(p)).dataSync(),f=0,m=0,g=0,b=0,y=0;y<c;++y)0===o[y]?(f++,d[y]&&g++):(m++,d[y]&&b++);var x=g/f,w=b/m;n.push({probThreshold:p,fpr:x,tpr:w}),console.log("ROC thresh="+p+": fpr="+x.toFixed(4)+", tpr="+w.toFixed(4)),h>0&&(s+=Math.abs(n[h-1].fpr-n[h].fpr)*(n[h-1].tpr+n[h].tpr)/2)}return{rocCurve:n,auc:s}}))]}))}))},t.prototype.createTransferModelFromBaseModel=function(){var e=this;r.D5U.assert(null!=this.words,(function(){return"No word example is available for tranfer-learning model of name "+e.name}));for(var t=this.baseModel.layers,n=t.length-2;n>=0&&"dense"!==t[n].getClassName().toLowerCase();)n--;if(n<0)throw new Error("Cannot find a hidden dense layer in the base model.");this.secondLastBaseDenseLayer=t[n];var s,a=this.secondLastBaseDenseLayer.output;this.transferHead=new Vo(undefined),this.transferHead.add((s={units:this.words.length,activation:"softmax",inputShape:a.shape.slice(1),name:"NewHeadDense"},new su(s)));var i=this.transferHead.apply(a);this.model=Go({inputs:this.baseModel.inputs,outputs:i})},t.prototype.modelInputShape=function(){return this.baseModel.inputs[0].shape},t.prototype.getMetadata=function(){return{tfjsSpeechCommandsVersion:yc,modelName:this.name,timeStamp:(new Date).toISOString(),wordLabels:this.wordLabels()}},t.prototype.save=function(e){return Ku(this,void 0,void 0,(function(){var t,n,s;return Yu(this,(function(r){return t=null!=e,e=e||Ic(this.name),t||(n=wc.localStorage.getItem(xc),(s=null==n?{}:JSON.parse(n))[this.name]=this.getMetadata(),wc.localStorage.setItem(xc,JSON.stringify(s))),console.log("Saving model to "+e),[2,this.model.save(e)]}))}))},t.prototype.load=function(e){return Ku(this,void 0,void 0,(function(){var t,n,s;return Yu(this,(function(r){switch(r.label){case 0:if(t=null!=e,e=e||Ic(this.name),!t){if(null==(n=JSON.parse(wc.localStorage.getItem(xc)))||null==n[this.name])throw new Error("Cannot find metadata for transfer model named "+this.name+'"');this.words=n[this.name].wordLabels,console.log("Loaded word list for model named "+this.name+": "+this.words)}return s=this,[4,Ho(e)];case 1:return s.model=r.sent(),console.log("Loaded model from "+e+":"),this.model.summary(),[2]}}))}))},t.prototype.createTransfer=function(e){throw new Error("Creating transfer-learned recognizer from a transfer-learned recognizer is not supported.")},t}(kc);function Ic(e){return"indexeddb://tfjs-speech-commands-model/"+e}function $c(e,t,n,s){if(r.D5U.assert(null==n&&null==s||null!=n&&null!=s,(function(){return"customModelURL and customMetadataURL must be both provided or both not provided."})),null!=n&&r.D5U.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided."})),"BROWSER_FFT"===e)return new kc(t,n,s);throw"SOFT_FFT"===e?new Error("SOFT_FFT SpeechCommandRecognizer has not been implemented yet."):new Error("Invalid fftType: '"+e+"'")}},6327:(e,t,n)=>{"use strict";var s={};n.r(s),n.d(s,{addImpl:()=>Ie,bincountImpl:()=>Se,bincountReduceImpl:()=>Ee,ceilImpl:()=>Re,concatImpl:()=>Ae,expImpl:()=>De,expm1Impl:()=>Fe,floorImpl:()=>_e,gatherV2Impl:()=>Oe,greaterImpl:()=>Le,lessImpl:()=>ze,linSpaceImpl:()=>Be,logImpl:()=>Me,maxImpl:()=>Ue,maximumImpl:()=>Pe,minimumImpl:()=>We,multiplyImpl:()=>Ve,negImpl:()=>He,notEqualImpl:()=>je,prodImpl:()=>qe,rangeImpl:()=>Ke,rsqrtImpl:()=>Ye,simpleAbsImpl:()=>ge,sliceImpl:()=>Je,sparseFillEmptyRowsImpl:()=>Ze,sparseReshapeImpl:()=>Qe,squaredDifferenceImpl:()=>et,stridedSliceImpl:()=>tt,subImpl:()=>nt,tileImpl:()=>rt,topKImpl:()=>at,transposeImpl:()=>Xe,uniqueImpl:()=>it});var r=n(2079);const a={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o(e){if(!(e in a)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete a[e]}),!1),1===e?t.getContext("webgl",i)||t.getContext("experimental-webgl",i):t.getContext("webgl2",i)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;a[e]=t}const t=a[e];return t.isContextLost()?(delete a[e],o(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),a[e])}var l,u,c;function h(e,t){return[t,e]}function p(e){const t=r.D5U.sizeFromShape(e),n=Math.ceil(t/4);return r.D5U.sizeToSquarishShape(n)}function d(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let s,a,i,o,l,u,c,h,p,d;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(s=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT):(s=e.RGBA,a=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,h=4,p=null!=t?t.HALF_FLOAT_OES:null,d=e.FLOAT),u=e.RGBA,{internalFormatFloat:s,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function m(e,t){const n=t();return(0,r.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function g(e){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return $(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(l||(l={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const y=/ERROR: [0-9]+:([0-9]+):/g;function x(e,t){if(m(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function w(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),m(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),m(e,(()=>e.enableVertexAttribArray(o))),!0)}function v(e,t,n,s){m(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),m(e,(()=>e.activeTexture(e.TEXTURE0+n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),m(e,(()=>e.uniform1i(n,s)))}function k(e,t,n){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function C(e,t){m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),m(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function I(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,n){const s=m(e,(()=>t()));if(null==s)throw new Error(n);return s}function S(e,t=2){return r.D5U.sizeFromShape(e.slice(0,e.length-t))}function E(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function N(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[S(e),...E(e)]),t}function T(e){return e%2==0}function R(e,t){if(e=e.slice(-2),t=t.slice(-2),r.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(T(n)&&T(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&T(e[0])&&T(t[0])}let A,D;function F(e,t){return null!=e.getExtension(t)}function _(e){try{if(null!=o(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function O(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function L(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const z=(0,r.OBj)();function B(){let e,t,n,s,a,i,o,l,u,c;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",a="texture",i="outputColor",o="out vec4 outputColor;",l="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",a="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function M(e,t,n="index"){const s=r.D5U.computeStrides(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function U(e){const t=r.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}z.registerFlag("HAS_WEBGL",(()=>z.getNumber("WEBGL_VERSION")>0)),z.registerFlag("WEBGL_VERSION",(()=>_(2)?2:_(1)?1:0)),z.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),z.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===z.get("WEBGL_VERSION"))),z.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),z.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),z.registerFlag("WEBGL_PACK",(()=>z.getBool("HAS_WEBGL"))),z.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_CLIP",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_PACK_REDUCE",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_LAZILY_UNPACK",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_CONV_IM2COL",(()=>z.getBool("WEBGL_PACK"))),z.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==A){const t=o(e);A=t.getParameter(t.MAX_TEXTURE_SIZE)}return A}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==D){const t=o(e);D=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,D)}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=z.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=o(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),z.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>z.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.isMobile())),z.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=o(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return O(t)}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!z.getBool("WEBGL_FORCE_F16_TEXTURES")&&z.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),z.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=o(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return O(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!F(t,"OES_texture_float")&&!!F(t,"WEBGL_color_buffer_float")&&O(t)}(z.getNumber("WEBGL_VERSION")))),z.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=z.getNumber("WEBGL_VERSION"))&&null!=o(e).fenceSync;var e})),z.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>z.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),z.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),z.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>r.C2$.isMobile()&&z.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const P="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class W{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=l.DENSE;const t=p(e),n=B();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${M(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class V{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=l.DENSE;const t=p(e),n=B();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${M(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class G{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=B();this.outputShape=e,this.userCode=`\n      ${P}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class H{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=B();this.outputShape=e,this.userCode=`\n      ${P}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class j{constructor(e,t,n=!1){this.variableNames=["A"];const s=B(),[r,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${U(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n        vec4 values = ${s.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${s.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class X{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const s=B(),[r,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${r}.0);\n              values = ${s.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${U(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${s.output} = ${o};\n      }\n    `}}function q(e,t,n,s,a,i){!function(e,t){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return $(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),l=e.TEXTURE_2D;return m(e,(()=>e.bindTexture(l,o))),m(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),m(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),m(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),m(e,(()=>e.texImage2D(l,0,s,t,n,0,a,i,null))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function K(e){return e.internalFormatFloat}function Y(e){return e.internalFormatHalfFloat}function J(e){return e.downloadTextureFormat}function Z(e){return e.internalFormatPackedFloat}function Q(e){return e.internalFormatPackedHalfFloat}class ee{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=o(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,s))this.colorBufferHalfFloatExtension=b(this.gl,s);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),m(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return $(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;m(e,(()=>e.finish())),m(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),m(e,(()=>e.deleteFramebuffer(this.framebuffer))),m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),m(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),m(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return q(e,r,a,K(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return q(e,r,a,Y(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=h(t,n);return q(e,r,a,J(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;m(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),m(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),m(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=d(t,n);return q(e,r,a,Q(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=d(t,n);return q(e,r,a,Z(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(C(this.gl,this.framebuffer),this.outputTexture=null),m(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=h(t,n),i=new Uint8Array(t*n*4);return m(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=d(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return m(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),m(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return m(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=y.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>r.D5U.rightPad((t+1).toString(),i)+e));let l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);const u=o.slice(0,s-1),c=o.slice(s-1,s),h=o.slice(s);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${r.D5U.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=B();return function(e,t){const n=$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(m(e,(()=>e.shaderSource(n,t))),m(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const s=function(e){return $(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return m(t,(()=>t.attachShader(s,this.vertexShader))),m(t,(()=>t.attachShader(s,n))),function(e,t){if(m(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,s),this.debug&&x(t,s),this.vertexAttrsAreBound||(this.setProgram(s),this.vertexAttrsAreBound=function(e,t,n){return m(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),w(e,t,"clipSpacePos",n,3,20,0)&&w(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),s}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&m(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&x(this.gl,this.program),m(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return $(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),m(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),v(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=d(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&x(this.gl,this.program),I(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),m(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),m(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await r.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||r.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&I(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&I(this.gl)):C(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;k(s,e,this.framebuffer),this.debug&&I(s),this.outputTexture=e,m(s,(()=>s.viewport(0,0,t,n))),m(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),m(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:te}=r.Wap;function ne(e,t,n,s){const a=[];e.forEach((e=>{const t=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const i=a.join("\n"),o=e.map((e=>function(e,t,n=!1){let s="";s+=n?re(e):se(e);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=te(e.shapeInfo.logicalShape,t.logicalShape),u=he(o),c=o-i;let h;const p=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${p[e+c]} = 0;`)).join("\n");let d="";d=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${p[t+c]}`)).join(", ");let f="return outputValue;";const m=1===r.D5U.sizeFromShape(e.shapeInfo.logicalShape),g=1===r.D5U.sizeFromShape(t.logicalShape);if(1!==i||m||g){if(m&&!g)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${s}(${d});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),a="get"+s+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&r.D5U.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=he(u),h=te(e.shapeInfo.logicalShape,t.logicalShape),p=u-l;let d;const f=["x","y","z","w","u","v"];d=0===l?"":u<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+p]} = 0;`)).join("\n");let m="";return m=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+p]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${d}\n      return get${s}(${m});\n    }\n  `}(e,t)),s}(e,t,s))).join("\n"),l=t.texShape,u=B(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let h,p,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ae}\n    ${ie}\n    ${oe}\n  `}(u);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(r.D5U.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),r=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),r=s*Math.ceil(e[e.length-2]/2);let a=r,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${r};\n      index -= b * ${r};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,l),p=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return r.D5U.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=M(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=M(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=M(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=M(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,l),p=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),s&&(d+=le),[d,c,p,i,h,o,n].join("\n")}function se(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[s,r]=e.shapeInfo.texShape;if(1===s&&1===r)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${ue(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ce(e)}\n      }\n    `;const s=e.shapeInfo.texShape,r=s[0],a=s[1];if(1===a&&1===r)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=ue(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===r?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&r.D5U.arraysEqual(t,a)){const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=r.D5U.squeezeShape(t),l=i;if(l.length<t.length){const t=["row","col"];return`\n      ${se(pe(e,l))}\n      float ${s}(int row, int col) {\n        return ${s}(${de(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${ce(e)}\n      }\n    `;const u=a[0],c=a[1],h=ue(n);return 1===c?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],{newShape:o,keptDims:l}=r.D5U.squeezeShape(t),u=o;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${se(pe(e,u))}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${de(t,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${ce(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===i&&null==d)return`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${ue(n)};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=r.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${se(pe(e,l))}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${de(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${ce(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===a&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${ue(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=r.D5U.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${se(pe(e,u))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${de(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${ce(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===l&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${ue(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=r.D5U.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${se(pe(e,a))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${de(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ce(e)}\n      }\n    `;const p=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===o&&null==p)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${ue(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function re(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${B().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),s=e.shapeInfo.texShape,r=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)],a=B();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${r[0]}, ${r[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=B();if(null!=a&&r.D5U.arraysEqual(t,a))return`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(1===t[0]){const n=[1,2],r=["b","row","col"];return`\n        ${re(pe(e,t.slice(1)))}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${de(r,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${B().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",p=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],p=`b${e} * ${c} + `+p;return`\n    vec4 ${r}(${h}) {\n      int index = ${p};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${B().texture2D}(${s}, uv);\n    }\n  `}(e)}}const ae="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ie="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oe="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",le="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ue(e){return`offset${e}`}function ce(e){const t=e.name,n=r.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function he(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function pe(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function de(e,t){return t.map((t=>e[t])).join(", ")}function fe(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,a=t[n],i=a.shape;if(!r.D5U.arraysEqual(s,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!r.D5U.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function me(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&r.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function ge(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function be(e){return(t,n,s,a,i)=>{const o=r.Wap.assertAndGetBroadcastShape(t,n),l=o.length,u=r.D5U.computeStrides(o),c=r.D5U.sizeFromShape(o),h=r.D5U.getTypedArrayFromDType(i,c),p=t.length,d=n.length,f=r.D5U.computeStrides(t),m=r.D5U.computeStrides(n),g=r.Wap.getBroadcastDims(t,o),b=r.Wap.getBroadcastDims(n,o);if(g.length+b.length===0)for(let t=0;t<h.length;++t)h[t]=e(s[t%s.length],a[t%a.length]);else for(let t=0;t<h.length;++t){const n=r.D5U.indexToLoc(t,l,u),i=n.slice(-p);g.forEach((e=>i[e]=0));const o=r.D5U.locToIndex(i,p,f),c=n.slice(-d);b.forEach((e=>c[e]=0));const y=r.D5U.locToIndex(c,d,m);h[t]=e(s[o],a[y])}return[h,o]}}function ye(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}function xe(e,t,n="float32"){if("complex64"===n)return ye({inputs:{real:xe(e,t,"float32"),imag:xe(e,t,"float32")},backend:e});const s=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,s)}function we(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}function ve(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return we({inputs:{x:a},backend:n});const e=xe(n,a.shape,a.dtype),t=ve({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),s=ye({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===a.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}({inputs:{input:a},backend:n}),t=ve({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!r.D5U.hasEncodingLoss(a.dtype,i)){const e=we({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=r.D5U.toTypedArray([0],a.dtype),[s,i]=be(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",s)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}function ke(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;me([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=s||a.dtype,[h,p]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(p,c,h)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=ve({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=ve({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,b,y]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(y,"float32",g),w=o.makeTensorInfo(y,"float32",b),v=ye({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function Ce(e){return(t,n,s,a,i,o)=>{const l=r.Wap.assertAndGetBroadcastShape(t,n),u=r.D5U.sizeFromShape(l),c=l.length,h=r.D5U.computeStrides(l),p=r.D5U.getTypedArrayFromDType("float32",u),d=r.D5U.getTypedArrayFromDType("float32",u),f=r.Wap.getBroadcastDims(t,l),m=r.Wap.getBroadcastDims(n,l),g=r.Wap.mergeRealAndImagArrays(s,a),b=r.Wap.mergeRealAndImagArrays(i,o),y=t.length,x=r.D5U.computeStrides(t),w=n.length,v=r.D5U.computeStrides(n);if(f.length+m.length===0)for(let t=0;t<p.length;t++){const n=t%g.length,s=t%b.length,r=e(g[2*n],g[2*n+1],b[2*s],b[2*s+1]);p[t]=r.real,d[t]=r.imag}else for(let t=0;t<p.length;t++){const n=r.D5U.indexToLoc(t,c,h),s=n.slice(-y);f.forEach((e=>s[e]=0));const a=r.D5U.locToIndex(s,y,x),i=n.slice(-w);m.forEach((e=>i[e]=0));const o=r.D5U.locToIndex(i,w,v),l=e(g[2*a],g[2*a+1],b[2*o],b[2*o+1]);p[t]=l.real,d[t]=l.imag}return[p,d,l]}}r.SYM,r.Zz9,r.iJz,r.xJR,r.RFZ;const Ie=be(((e,t)=>e+t)),$e=Ce(((e,t,n,s)=>({real:e+n,imag:t+s})));function Se(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=r.D5U.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=a||(o[s]+=i>0?t[n]:1)}return o}function Ee(e,t,n,s=!1){const a=e.shape[0],i=e.shape[1],o=(0,r.f3b)([a,n],t.dtype);for(let r=0;r<a;r++)for(let a=0;a<i;a++){const i=e.get(r,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(s?o.set(1,r,i):t.size>0?o.set(o.get(r,i)+t.get(r,a),r,i):o.set(o.get(r,i)+1,r,i))}return o}function Ne(e){return(t,n,s)=>{const a=r.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],s);return a}}function Te(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(me(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}ke(r.mm_,Ie,$e),r.mm_;const Re=Ne((e=>Math.ceil(e)));function Ae(e,t,n,s){const a=r.D5U.getArrayFromDType(n,r.D5U.sizeFromShape(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=r.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const i="string"===n?r.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const r=n*t[1]+s;for(let t=0;t<e.shape[1];++t)a[r+t]=i[o++]}s+=e.shape[1]}))}return a}Te(r.gJX,Re),r.gJX;const De=Ne((e=>Math.exp(e))),Fe=(Te(r.NEP,De),r.NEP,Ne((e=>Math.expm1(e)))),_e=(Te(r.Y0y,Fe),r.Y0y,Ne((e=>Math.floor(e))));function Oe(e,t,n){const s=(0,r.f3b)(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);s.values[n]=e.values[l]}return s}Te(r.OR,_e),r.OR;const Le=be(((e,t)=>e>t?1:0)),ze=(ke(r.iZT,Le,null,"bool"),r.iZT,be(((e,t)=>e<t?1:0)));function Be(e,t,n){const s=(t-e)/(n-1),a=r.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+s;return a}ke(r.vtC,ze,null,"bool"),r.vtC;const Me=Ne((e=>Math.log(e)));function Ue(e,t,n,s){const a=r.D5U.getTypedArrayFromDType(s,r.D5U.sizeFromShape(n));for(let n=0;n<a.length;++n){const s=n*t;let r=e[s];for(let n=0;n<t;++n){const t=e[s+n];t>r&&(r=t)}a[n]=r}return a}Te(r.ZbH,Me),r.ZbH;const Pe=be(((e,t)=>Math.max(e,t))),We=(ke(r.BMI,Pe),r.BMI,be(((e,t)=>Math.min(e,t)))),Ve=(ke(r.q8u,We),r.q8u,be(((e,t)=>e*t))),Ge=Ce(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n})));function He(e,t,n){const s=r.D5U.createScalarValue(-1,n);return Ve([],t,s,e,n)}ke(r.wYn,Ve,Ge),r.wYn,r.kuV;const je=be(((e,t)=>e!==t?1:0));function Xe(e,t,n,s,a){const i=t.length,o=r.D5U.sizeFromShape(t),l=r.D5U.computeStrides(t),u=r.D5U.computeStrides(a),c=r.D5U.getTypedArrayFromDType(n,r.D5U.sizeFromShape(a));for(let t=0;t<o;++t){const n=r.D5U.indexToLoc(t,i,l),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[s[e]];c[r.D5U.locToIndex(a,i,u)]=e[t]}return c}function qe(e,t,n,s){const[a,i]=r.Wap.computeOutAndReduceShapes(e,s),o=(0,r.x8V)(t,"int32"),l=r.D5U.makeZerosTypedArray(r.D5U.sizeFromShape(a),o),u=r.D5U.sizeFromShape(i);for(let e=0;e<l.length;++e){const t=e*u;let s=1;for(let e=0;e<u;++e)s*=n[t+e];l[e]=s}return{outVals:l,outShape:a,outDtype:o}}function Ke(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return r.D5U.makeZerosTypedArray(0,s);const a=Math.abs(Math.ceil((t-e)/n)),i=r.D5U.makeZerosTypedArray(a,s);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}ke(r.yQU,je,null,"bool"),r.yQU,r.G3Y,r.DlI;const Ye=Ne((e=>1/Math.sqrt(e)));function Je(e,t,n,s,a){const i=r.kuN.isSliceContinous(s,t,n),o=r.D5U.sizeFromShape(n),l=r.D5U.computeStrides(s);if(i){const n=r.kuN.computeFlatOffset(t,l);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===a?r.Wap.fromUint8ToStringArray(e):e,c=(0,r.f3b)(s,a,u),h=(0,r.f3b)(n,a);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));h.set(c.get(...s),...n)}return"string"===a?r.Wap.fromStringArrayToUint8(h.values):h.values}function Ze(e,t,n,s,a,i,o){const l=t[0],u=i[0],c=new Array(u),h=new Array(l),p=t[1];if(0===u){if(0!==l)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${l}`);return[r.D5U.getArrayFromDType(n,0),[0,p],r.D5U.getArrayFromDType(a,0),c,h]}let d=!0,f=0;const m=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*p];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++m[n],d=d&&n>=f,f=n}let g=!0;for(let e=0;e<u;++e){const t=0===m[e];c[e]=t,g=g&&!t,m[e]=Math.max(m[e],1),e>0&&(m[e]+=m[e-1])}if(g&&d){const t=e,n=s;for(let e=0;e<l;++e)h[e]=e;return[t,[l,p],n,c,h]}{const t=m[u-1],i=r.D5U.getArrayFromDType(n,t*p),d=r.D5U.getArrayFromDType(a,t),f=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*p],r=f[n],a=(0===n?0:m[n-1])+r;f[n]++;for(let n=0;n<p;++n)i[a*p+n]=e[t*p+n];d[a]=s[t],h[t]=a}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:m[e-1];i[t*p+0]=e;for(let e=1;e<p;++e)i[t*p+e]=0;d[t]=o}return[i,[l,p],d,c,h]}}function Qe(e,t,n,s,a){const i=r.D5U.sizeFromShape(s),o=t[0],l=a.length,u=[];let c=1,h=-1;for(let e=0;e<l;++e){const t=a[e];if(-1===t){if(-1!==h)throw new Error(`only one output dimension may be -1, not both ${h} and ${e}`);h=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,u.push(t)}}if(-1!==h){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${s} outputShape= ${u}`);u[h]=e}const p=r.D5U.sizeFromShape(u);if(p!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${p}. inputShape=${s} outputShape=${u}`);const d=s.length,f=[];if(d>0){f[d-1]=1;for(let e=d-2;e>=0;--e)f[e]=f[e+1]*s[e+1]}const m=[];if(l>0){m[l-1]=1;for(let e=l-2;e>=0;--e)m[e]=m[e+1]*u[e+1]}const g=r.D5U.getArrayFromDType(n,o*l);for(let t=0;t<o;++t){let n=0;for(let s=0;s<d;++s)n+=e[t*d+s]*f[s];for(let e=0;e<l;++e)g[t*l+e]=Math.trunc(n/m[e]),n%=m[e]}return[g,[o,l],u]}Te(r.bV0,Ye),r.bV0,r.p2w;const et=be(((e,t)=>{const n=e-t;return n*n}));function tt(e,t,n,s){const a=(0,r.f3b)(e,t.dtype);for(let e=0;e<a.size;e++){const r=a.indexToLoc(e),i=new Array(r.length);for(let e=0;e<i.length;e++)i[e]=r[e]*n[e]+s[e];a.set(t.get(...i),...r)}return a}ke(r._tC,et),r._tC;const nt=be(((e,t)=>e-t)),st=Ce(((e,t,n,s)=>({real:e-n,imag:t-s})));function rt(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=(0,r.f3b)(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}function at(e,t,n,s,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=r.D5U.getTypedArrayFromDType(n,o*s),c=r.D5U.getTypedArrayFromDType("int32",o*s);for(let t=0;t<o;t++){const n=t*l,r=e.subarray(n,n+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*s,o=u.subarray(i,i+s),h=c.subarray(i,i+s);for(let e=0;e<s;e++)o[e]=a[e].value,h[e]=a[e].index}const h=t.slice();return h[h.length-1]=s,[(0,r.f3b)(h,n,u),(0,r.f3b)(h,"int32",c)]}function it(e,t,n,s){const a=r.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const o={},l=new Int32Array(n[a]),u=new r.YDk(i,s,e),c=[],h=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)e.push(u.get(n,t,s));n=e.join(",")}if(void 0!==o[n])l[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,l[t]=e,c.push(t)}}const p=i.slice();p[1]=Object.keys(o).length;const d=new r.YDk(p,s);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let s=0;s<i[2];s++)d.set(u.get(n,e,s),n,t,s)}));const f=n.slice();return f[a]=p[1],{outputValues:d.values,outputShape:f,indices:l}}ke(r.Tr8,nt,st),r.Tr8;const{addImpl:ot,bincountImpl:lt,bincountReduceImpl:ut,ceilImpl:ct,concatImpl:ht,expImpl:pt,expm1Impl:dt,floorImpl:ft,gatherV2Impl:mt,greaterImpl:gt,lessImpl:bt,linSpaceImpl:yt,logImpl:xt,maxImpl:wt,maximumImpl:vt,minimumImpl:kt,multiplyImpl:Ct,negImpl:It,prodImpl:$t,rangeImpl:St,rsqrtImpl:Et,simpleAbsImpl:Nt,sliceImpl:Tt,sparseFillEmptyRowsImpl:Rt,sparseReshapeImpl:At,stridedSliceImpl:Dt,subImpl:Ft,tileImpl:_t,topKImpl:Ot,transposeImpl:Lt,uniqueImpl:zt}=s;function Bt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Mt(e,t){return 1===t?[e]:Bt(e,t)}class Ut{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Mt("rc",t),s=he(t),r=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let s="";for(let r=e-2;r<e;r++)s+=`${n[r]} >= ${t[r]}`,r<e-1&&(s+="||");return s}(t,e,n),a=function(e,t,n,s){if(1===e)return"";const r=s.slice(-2);return`\n    int r = ${r[0]};\n    int c = ${r[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,s=function(e,t){const n=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let a=`${0===s?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${s[0]}),\n          cEdge ? 0. : getA(${s[1]}),\n          rEdge ? 0. : getA(${s[2]}),\n          rEdge || cEdge ? 0. : getA(${s[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${s} rc = getOutputCoords();\n\n          if(${r}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Pt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s;this.userCode=`\n      ${s=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${M(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${U(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Wt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=Gt(t,n),r=Ht(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=Vt(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===c.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===c.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===c.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===c.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===c.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const a=Gt(n,s),i=Ht(t,a,s);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Vt(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,s),l=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Vt(e,t,n,s,r){const a=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return Z(t);case c.PACKED_2X2_FLOAT16:return Q(t);case c.UNPACKED_FLOAT32:return K(t);case c.UNPACKED_FLOAT16:return Y(t);case c.PACKED_4X1_UNSIGNED_BYTE:return J(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=d(e[0],e[1]);i=t*n}else{const[t,n]=h(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function Gt(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function Ht(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class jt{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Xt="return abs(x);",qt="return x;";class Kt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Yt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Mt("rc",t),s=he(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Jt=r.GDt.ZA,Zt={};class Qt extends r.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=o((0,r.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,r.OBj)().getNumber("WEBGL_VERSION"))in Zt||(Zt[t]={}),Zt[t]),this.gpgpu=new ee(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Wt(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}nextDataId(){return Qt.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,a){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:u.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new Kt(o,qt):new jt(o,qt);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=r.D5U.now()),"complex64"===s){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=r.Wap.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=r.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new Kt(s,qt):new jt(s,qt);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:i}],i),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...p(s))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=r.Wap.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=r.D5U.sizeFromShape(s);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const d=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(d))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,r.SRH)().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>r.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,r.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!g(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),a=r.D5U.sizeFromShape(t);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),r=this.gpgpu.downloadMatrixFromPackedTexture(s.texture,...p(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),r}const i=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===s,o=i?N(t):t,l=i?new H(o):new G(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=r.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=r.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=r.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.now(),endMs:null}}endTimer(e){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=r.D5U.now(),e)}async getQueryTime(e){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&r.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){r.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Jt(e.shape,t)}packedUnaryOp(e,t,n){const s=new Kt(e.shape,t),a=this.compileAndRun(s,[e],n);return(0,r.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Nt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Xt,e.dtype);const t=new jt(e.shape,Xt),n=this.compileAndRun(t,[e]);return(0,r.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&r.D5U.isString(n[0])){const a=n.map((e=>r.D5U.encodeString(e)));s=this.write(a,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return(0,r.SRH)().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new Yt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Ut(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[S(e.shape),...E(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[S(t),...E(t)],a=new Pt(r,n),i=this.runWebGLProgram(a,[s],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:s,dtype:r}=t,a=N(s);let i;return i=n?new V(a):new W(a),{dtype:r,shape:s,dataId:this.runWebGLProgram(i,[{shape:a,dtype:r,dataId:e}],r,null,!0).dataId}}runWebGLProgram(e,t,n,s,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===l.DENSE){const t=p(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===r.D5U.sizeFromShape(i.shape))return o.values=r.D5U.getTypedArrayFromDType(i.dtype,0),i;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&r.D5U.sizeFromShape(t.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!R(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),u.push(t),n=this.texData.get(t.dataId),e.shape=s}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:o,isUniform:!1},d=function(e,t,n){let s="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;s+=`${e.shape}_${n}_${t}`}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r,a}(e,c,h),f=this.getAndSaveBinary(d,(()=>function(e,t,n,s){const a=t.userCode,i=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),o=i.map((e=>e.shapeInfo)),l={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},u=ne(i,l,a,t.packedInputs),c=e.createProgram(u);let h=null;const p=e.getUniformLocation(c,"NAN",!1);1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));const d={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n],r=!1;d[s]=e.getUniformLocation(c,s,r),d[`offset${s}`]=e.getUniformLocation(c,`offset${s}`,r)}return{program:t,source:u,webGLProgram:c,uniformLocations:d,inShapeInfos:o,outShapeInfo:l,infLoc:h,nanLoc:p}}(this.gpgpu,e,c,h))),m=null!=this.activeTimers;let g;m&&(g=this.startTimer()),function(e,t,n,s,a){fe(t.inShapeInfos,n),fe([t.outShapeInfo],[s]);const i=s.texData.texture,o=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const a=t.program.variableNames[s],i=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`];if(null!=i)if(n.isUniform)if(r.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,s)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,c,h,s),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),m&&(g=this.endTimer(g),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(g)}));const b=(0,r.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=r.D5U.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,r.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const t=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=r.D5U.now());let p=t.texShape;if(null==p&&(p=function(e,t=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?r.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=r.D5U.squeezeShape(e);e=t.newShape}let s=r.D5U.sizeFromShape(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=S(e);let n=2,a=2;return e.length&&([n,a]=E(e)),s=t*(n/2)*(a/2),r.D5U.sizeToSquarishShape(s).map((e=>2*e))}return r.D5U.sizeToSquarishShape(s)}(n,l),t.texShape=p),null!=a){const e=N(n);let i,o=p[1],f=p[0];const m=a instanceof Uint8Array;l?([o,f]=d(p[0],p[1]),i=new X(e,[f,o],m)):i=new j(e,[f,o],m);const g=this.makeTensorInfo([f,o],s);this.texData.get(g.dataId).usage=m?u.PIXELS:u.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),o,f,a);const b=!0,y=this.runWebGLProgram(i,[g],s,null,b),x=this.texData.get(y.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(y.dataId),t.values=null,c&&(this.uploadWaitMs+=r.D5U.now()-h)}else{const e=this.acquireTexture(p,o,s,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*r.D5U.bytesPerElement(t)}}Qt.nextDataId=0,r.C2$.isBrowser()&&(0,r.jqO)("webgl",(()=>new Qt),2);class en{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class tn{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let i="";if(s)if(0===a||1===r.D5U.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${he(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Mt("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function nn(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const sn={kernelName:r.iJz,backendName:"webgl",kernelFunc:nn};function rn(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=nn({inputs:{x:s},backend:n}),l=nn({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const an={kernelName:r.Zz9,backendName:"webgl",kernelFunc:rn},on="return (a < 0.) ? b * a : a;",ln="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",un={kernelName:r.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{alpha:i}=s,o=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(i,"float32")),l=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(ln,a.shape,o.shape):new en(on,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),u}},cn="return (a < 0.) ? b * a : a;",hn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",pn={kernelName:r.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(hn,s.shape,a.shape):new en(cn,s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}};function dn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:a,backend:i})=>{const{x:o}=a,l=i,u=s||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){const e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Kt(o.shape,t):new jt(o.shape,e),l.runWebGLProgram(c,[o],u)}}function fn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:l})=>{const{a:u,b:c}=o,h=l;if(s&&"complex64"===u.dtype){const t=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[s,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:s.dataId,dtype:s.dtype,shape:c.shape},o=new en(e,u.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,r.x8V)(n.dtype,s.dtype))})),i=rn({inputs:{real:s,imag:a},backend:h});return h.disposeIntermediateTensorInfo(s),h.disposeIntermediateTensorInfo(a),i}const p=i||(0,r.x8V)(u.dtype,c.dtype);if(h.shouldExecuteOnCPU([u,c])&&null!=a){const e=h.texData.get(u.dataId),t=h.texData.get(c.dataId),[n,s]=a(u.shape,c.shape,e.values,t.values,p),r=h.makeTensorInfo(s,p);return h.texData.get(r.dataId).values=n,r}let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new tn(t,u.shape,c.shape,n):new en(e,u.shape,c.shape),h.runWebGLProgram(d,[u,c],p)}}function mn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?hn:cn;if("leakyrelu"===e)return t?ln:on;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class gn{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",x="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class bn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const yn="return a * b;";function xn(e){const{inputs:t,backend:n}=e,{a:s,b:a}=t,i=r.Wap.upcastType(s.dtype,a.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),r=new bn("return areal * breal - aimag * bimag;",s.shape,a.shape),i=new bn("return areal * bimag + aimag * breal;",s.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(r,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=rn({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,a])){const e=n.texData.get(s.dataId),t=n.texData.get(a.dataId),[r,o]=Ct(s.shape,a.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=r,l}let o;return o=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(yn,s.shape,a.shape):new en(yn,s.shape,a.shape),n.runWebGLProgram(o,[s,a],i)}const wn={kernelName:r.wYn,backendName:"webgl",kernelFunc:xn};function vn(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{shape:i}=s,o=n,l=r.D5U.sizeFromShape(a.shape),u=r.D5U.inferFromImplicitShape(i,l),c=r.D5U.sizeFromShape(u);r.D5U.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||R(a.shape,u)||null!==h.texture&&R(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const s=[S(e.shape),...E(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[S(t),...E(t)],i=new Pt(a,s),o=n.runWebGLProgram(i,[r],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,o)}const kn={kernelName:r.HZH,backendName:"webgl",kernelFunc:vn};class Cn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:a,outSize:i}=e;this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${r.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class In{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function $n(e,t,n,s){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=r.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let i=e;for(let r=0;r<a.length;r++){const{inSize:o,windowSize:l,outSize:u}=a[r];let c,h;c="mean"===n?0===r?new Cn({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new Cn({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new In({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=s.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return i}class Sn{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=he(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class En{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=he(this.rank),r=Bt("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Nn(e,t,n){const s=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new En(e.shape,t):new Sn(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function Tn(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s;return function(e,t,n,s){const a=t,i=e.shape.length,o=r.D5U.parseAxisParam(a,e.shape);let l=o;const u=r.Wap.getAxesPermutation(l,i),c=null!=u;let h=e;c&&(h=Nn(e,u,s),l=r.Wap.getInnerMostAxes(l.length,i)),r.Wap.assertAxesAreInnerMostDims("sum",l,i);const[p,d]=r.Wap.computeOutAndReduceShapes(h.shape,l);let f=p;n&&(f=r.Wap.expandShapeToKeepDim(p,o));const m=r.D5U.sizeFromShape(d),g=vn({inputs:{x:h},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/m,m]},backend:s}),b=$n(g,(0,r.z4k)(e.dtype),"sum",s),y=vn({inputs:{x:b},attrs:{shape:f},backend:s});return s.disposeIntermediateTensorInfo(g),s.disposeIntermediateTensorInfo(b),c&&s.disposeIntermediateTensorInfo(h),y}(a,i,o,n)}const Rn={kernelName:r.GBy,backendName:"webgl",kernelFunc:Tn};function An(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=Lt(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=Nn(r,a,i);return u}const Dn={kernelName:r.G3Y,backendName:"webgl",kernelFunc:An};function Fn({a:e,b:t,transposeA:n,transposeB:s,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,h=t.shape.length,p=n?e.shape[c-2]:e.shape[c-1],d=s?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],m=s?t.shape[h-2]:t.shape[h-1],g=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=r.D5U.sizeFromShape(g),x=r.D5U.sizeFromShape(b),w=y===x||1===y||1===x;r.D5U.assert(c>=2&&h>=2&&w,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${g}) and (${b}).`));const v=(y>x?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,m]);r.D5U.assert(p===d,(()=>`Error in matMul: inner shapes (${p}) and (${d}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const k=n?[y,p,f]:[y,f,p],C=s?[x,m,d]:[x,d,m],I=vn({inputs:{x:e},backend:a,attrs:{shape:k}}),$=vn({inputs:{x:t},backend:a,attrs:{shape:C}}),S=[I,$],E=Math.max(y,x),N=n?I.shape[1]:I.shape[2],T=null!=i,R=null!=o,A="leakyrelu"===u,D=null!=u?mn(u,!0):null;let F;if((1===f||1===m)&&N>1e3&&!1===(T||R||A||null!=D)){let e=I,t=$;n&&(e=An({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),s&&(t=An({inputs:{x:$},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const r=1===m;let i=e;1!==m&&(i=vn({inputs:{x:e},backend:a,attrs:{shape:[E,N,1]}}),S.push(i));const o=1===m?2:1;let l=t;r&&(l=vn({inputs:{x:t},backend:a,attrs:{shape:[E,1,N]}}),S.push(l));const u=xn({inputs:{a:i,b:l},backend:a});F=Tn({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(u)}else{const u=(0,r.x8V)(e.dtype,t.dtype),c=new gn(k,C,[E,f,m],n,s,T,D,R,A),h=[I,$];if(null!=i&&h.push(i),R&&h.push(o),A){const e=a.makeTensorInfo([],"float32",r.D5U.createScalarValue(l,"float32"));h.push(e),S.push(e)}F=a.runWebGLProgram(c,h,u)}const _=vn({inputs:{x:F},backend:a,attrs:{shape:v}});S.push(F);for(const e of S)a.disposeIntermediateTensorInfo(e);return _}const _n={kernelName:r.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return Fn({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},On="return abs(x);",Ln={kernelName:r.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=Nt(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Kt(s.shape,On):new jt(s.shape,On),n.runWebGLProgram(a,[s],s.dtype)}},zn=dn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),Bn={kernelName:r.VGw,backendName:"webgl",kernelFunc:zn},Mn=dn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Un={kernelName:r.SpW,backendName:"webgl",kernelFunc:Mn},Pn="return a + b;",Wn=fn({opSnippet:Pn,packedOpSnippet:Pn,supportsComplex:!0,cpuKernelImpl:ot}),Vn={kernelName:r.mm_,backendName:"webgl",kernelFunc:Wn};class Gn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class Hn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const jn={kernelName:r.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,a=n;if(1===a.length)return nn({inputs:{x:a[0]},backend:s});if(a.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:s}),r=e({inputs:a.slice(t),backend:s});return e({inputs:[n,r],backend:s})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,r.x8V)(e,t))),o=a.map((e=>e.shape)),l=(0,r.OBj)().getBool("WEBGL_PACK")?new Hn(a[0].shape,o):new Gn(a[0].shape,o);return s.runWebGLProgram(l,a,i)}},Xn={kernelName:r.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l);let p=a;null!=h&&(p=An({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,l)),r.Wap.assertAxesAreInnerMostDims("all",c,l);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=vn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$n(m,m.dtype,"all",n);let b;return b=vn(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),b}},qn={kernelName:r.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l);let p=a;null!=h&&(p=An({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,l)),r.Wap.assertAxesAreInnerMostDims("any",c,l);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=vn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$n(m,m.dtype,"any",n);let b;return b=vn(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),b}};class Kn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Yn{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),s||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=he(l),c=Mt("coords",l);let h,p;if(1===i){p=l+1;const e=he(p);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else p=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((e=>"int "+e)),g=Mt("sourceLocR",p-1).concat("inIdx.r"),b=Mt("sourceLocG",p-1).concat("inIdx.g"),y=Mt("sourceLocB",p-1).concat("inIdx.b"),x=Mt("sourceLocA",p-1).concat("inIdx.a"),w="max"===n?"greaterThan":"lessThan",v=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,k=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,C=s?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${C}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Jn(e,t,n,s=null){let a=t.shape[0],i=t.shape[1];null!=s&&(a=s.shape[0],i=s.shape[1]);const o=r.Wap.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},u=new Kn(l,n,null==s),c=[t];null!=s&&c.push(s);const h=e.runWebGLProgram(u,c,"int32");if(1===h.shape[1])return h;const p=Jn(e,t,n,h);return e.disposeIntermediateTensorInfo(h),p}function Zn(e,t,n,s=null){const a=null!=s?s.shape:t.shape,i=a[a.length-1],o=r.Wap.computeOptimalWindowSize(i),l=new Yn(a,o,n,null==s),u=null==s?[t]:[t,s],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const s=Zn(e,t,n,c);return e.disposeIntermediateTensorInfo(c),s}return c}function Qn(e,t,n,s){const a=[n];if(r.Wap.assertAxesAreInnerMostDims("arg"+s.charAt(0).toUpperCase()+s.slice(1),a,t.shape.length),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=r.Wap.computeOutAndReduceShapes(t.shape,a),l=r.D5U.sizeFromShape(o),u=vn({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});n.push(u);const c=Jn(e,u,s);n.push(c);const h=vn({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Zn(e,t,s)}const es={kernelName:r.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const l=r.Wap.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=An({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=r.Wap.getInnerMostAxes(o.length,u.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const h=Qn(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ts={kernelName:r.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i}=s;let o=r.D5U.parseAxisParam(i,a.shape);const l=r.Wap.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=An({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=r.Wap.getInnerMostAxes(o.length,u.shape.length)),r.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const h=Qn(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},ns=dn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),ss={kernelName:r.M2y,backendName:"webgl",kernelFunc:ns},rs=dn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),as={kernelName:r.qw7,backendName:"webgl",kernelFunc:rs},is=dn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),os={kernelName:r.jMg,backendName:"webgl",kernelFunc:is},ls=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),us={kernelName:r.QCc,backendName:"webgl",kernelFunc:ls},cs=dn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),hs={kernelName:r.Oyi,backendName:"webgl",kernelFunc:cs};class ps{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class ds{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let x="0.0";if(y||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,C=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${b});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${C}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${C}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${C}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const fs={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;L(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return nn({inputs:{x:a},backend:n});const h=new ps(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},ms={kernelName:r._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],l,u,c),p=new ds(h,"avg",!1);return n.runWebGLProgram(p,[a],"float32")}};class gs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class bs{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ys={kernelName:r.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=r.Wap.computePool3DInfo(o.shape,l,u,[1,1,1],c,h),d=new bs(p);return n.runWebGLProgram(d,[a],o.dtype)}},xs={kernelName:r.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i;L([a,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=s,h=r.Wap.computePool2DInfo(o.shape,l,u,1,c),p=new gs(h);return n.runWebGLProgram(p,[a],o.dtype)}},ws={kernelName:r.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return Fn({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class vs{constructor(e,t,n,s,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ks{constructor(e,t,n,s,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(e,t),r.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=s&&(r.Wap.assertAndGetBroadcastShape(e,s),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(r.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Cs={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:a,variance:i,offset:o,scale:l}=e;r.D5U.assert(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.assert(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[s,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let p=null;null!=l&&(p=l.shape,c.push(l));const d=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new ks(s.shape,a.shape,i.shape,h,p,u):new vs(s.shape,a.shape,i.shape,h,p,u);return t.runWebGLProgram(d,c,c[0].dtype)}};class Is{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=he(this.rank),n=`uniform int start[${this.rank}];`,s=function(e){if(1===e)return"sourceLoc";if(e<=6)return $s.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${$s[t]} = start[${t}] + coords.${$s[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${r}\n        setOutput(getSource(${s}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const $s=["x","y","z","w","u","v"];class Ss{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=he(this.rank),n=Mt("coords",this.rank),s=Mt("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function Es(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,size:o}=s,[l,u]=r.kuN.parseSliceParams(a,i,o);if(r.kuN.assertParamsValid(a,l,u),0===r.D5U.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Tt(e.values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=r.kuN.isSliceContinous(a.shape,l,u);if(c||!h){const e=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Ss(u):new Is(u),t=e.getCustomSetupFunc(l);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,s){const a=s.texData.get(e.dataId),i=s.makeTensorInfo(n,e.dtype),o=s.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=r.kuN.computeFlatOffset(t,r.D5U.computeStrides(e.shape));a.slice&&(l+=a.slice.flatOffset),o.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=s.dataRefCount.get(o.slice.origDataId)||1;return s.dataRefCount.set(o.slice.origDataId,u+1),i}(a,l,u,n)}const Ns={kernelName:r.p2w,backendName:"webgl",kernelFunc:Es},Ts={kernelName:r.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,crops:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=r.Wap.getReshaped(a.shape,i,l),c=r.Wap.getPermuted(u.length,i.length),h=r.Wap.getReshapedPermuted(a.shape,i,l),p=r.Wap.getSliceBeginCoords(o,i.length),d=r.Wap.getSliceSize(h,o,i.length),f=[],m=vn({inputs:{x:a},backend:n,attrs:{shape:u}}),g=An({inputs:{x:m},backend:n,attrs:{perm:c}}),b=vn({inputs:{x:g},backend:n,attrs:{shape:h}}),y=Es({inputs:{x:b},backend:n,attrs:{begin:p,size:d}});return f.push(m),f.push(g),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Rs={kernelName:r.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=lt(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},As=fn({opSnippet:"return float(a != b);",dtype:"bool"}),Ds={kernelName:r.yQU,backendName:"webgl",kernelFunc:As};function Fs(e){const{inputs:t,backend:n}=e,{input:s}=t;return nn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const _s={kernelName:r.xJR,backendName:"webgl",kernelFunc:Fs},Os={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return nn({inputs:{x:i},backend:s});const t=r.lls(i.shape),n=e({inputs:{x:i},backend:s,attrs:{dtype:"float32"}}),a=rn({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Fs({inputs:{input:i},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:o}});return s.disposeIntermediateTensorInfo(t),n}if(!r.D5U.hasEncodingLoss(i.dtype,o)){const e=nn({inputs:{x:i},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new jt(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(i,s);if("bool"===o){const e=s.makeTensorInfo([],"bool",r.D5U.getTypedArrayFromDType("bool",1)),t=As({inputs:{a:i,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Ls="return ceil(x);",zs=dn({opSnippet:Ls,packedOpSnippet:Ls,cpuKernelImpl:ct}),Bs={kernelName:r.gJX,backendName:"webgl",kernelFunc:zs};class Ms{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class Us{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,s)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(s,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(s,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const Ps={kernelName:r.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=s;let l;l=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new Us(a.shape):new Ms(a.shape);const u=l.getCustomSetupFunc(i,o);return n.runWebGLProgram(l,[a],a.dtype,u)}};class Ws{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Vs(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Gs={kernelName:r.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new Ws(s.shape),i=[Vs(s,r.complexTensorInfos.real),Vs(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class Hs{constructor(e){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,a=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class js{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(e,t);const n=this.outputShape,s=n.length,a=he(s),i=Mt("coords",s),o=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let n=1;n<l.length;n++)l[n]=l[n-1]+e[n][t];const u=o[t],c=o.slice(-2),h=o.join();let p=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let e=1;e<l.length;e++){const t=l[e-1];p+=`\n        if (${u} < ${l[e]}  && ${u} >= ${l[e-1]}) {\n          return getChannel(\n            getT${e}(${Xs(o,u,t)}),\n            vec2(${Xs(c,u,t)}));\n        }`}const d=l.length,f=l[l.length-1];p+=`\n        return getChannel(\n          getT${d}(${Xs(o,u,f)}),\n          vec2(${Xs(c,u,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${p}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[s-1]} = ${i[s-1]} + 1;\n        if (${i[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[s-2]} = ${i[s-2]} + 1;\n        if (${i[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[s-1]} = ${i[s-1]} - 1;\n        if (${i[s-2]} < ${n[s-2]} &&\n            ${i[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Xs(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function qs(e){const{inputs:t,backend:n}=e,{input:s}=t;return nn({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const Ks={kernelName:r.J_u,backendName:"webgl",kernelFunc:qs};function Ys(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>Fs({inputs:{input:e},backend:n}))),r=e.map((e=>qs({inputs:{input:e},backend:n}))),a=Ys(s,t,n),i=Ys(r,t,n),o=rn({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===s&&(a=!0),a){const a=e.map((e=>{const s=r.D5U.sizeFromShape(e.shape.slice(t));return vn({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=r.Wap.computeOutShape(a.map((e=>e.shape)),1),l=1===a[0].shape[0],u=ht(i,o,s,l),c=r.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,s,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=Ys(e.slice(0,s),t,n),a=Ys(e.slice(s),t,n),i=Ys([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new js(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:i,outShape:o}=function(e,t,n){const s=r.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>vn({inputs:{x:e},attrs:{shape:[-1,r.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),l=new Hs(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,s);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=vn({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Js(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s,i=r.D5U.parseAxisParam(a,t[0].shape)[0],o=r.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===r.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>r.D5U.sizeFromShape(e.shape)>0));if(1===l.length)return nn({inputs:{x:l[0]},backend:n});const u=l.map((e=>e.shape));return r.Wap.assertParamsConsistent(u,i),Ys(l,i,n)}const Zs={kernelName:r.Eh3,backendName:"webgl",kernelFunc:Js};class Qs{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,b=m?2:3,y=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class er{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class tr{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:s,inChannels:r,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:p,top:d}=o,f=r*s,m=B(),g="channelsLast"===h,b=g?0:1,y=g?1:2;let x="";for(let n=0;n<=1;n++)for(let s=0;s<=1;s++)x+=`\n          blockIndex = rc.y + ${s};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${d};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${p}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${r}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${r}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+s}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+s}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}function nr({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=s.texData.get(e.dataId),h=n.inChannels,p=u[0]*u[1]*u[2],d=n.outChannels,f="channelsLast"===n.dataFormat;let m;const g=[],b=(1===p||1===d)&&h>1e3,y=u[2]%2!=0&&!!c.isPacked;if(!b&&(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const h=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),p={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},d=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,r.D5U.assert(R(c.shape,p.shape),(()=>`packed reshape ${c.shape} to ${p.shape} isn't free`));const b=vn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});g.push(b);const y=Fn({a:p,b,backend:s,transposeA:!1,transposeB:!1,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),x=s.texData.get(y.dataId);r.D5U.assert(x.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=d,x.shape=n.outShape,m=nn({inputs:{x:y},backend:s}),m.shape=n.outShape,g.push(y)}else{const r=vn({inputs:{x:e},backend:s,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=vn({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Fn({a:r,b:c,transposeA:!1,transposeB:!1,backend:s,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});m=vn({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),g.push(r),g.push(c),g.push(h)}for(const e of g)s.disposeIntermediateTensorInfo(e);return m}function sr({x:e,filter:t,convInfo:n,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:p,outHeight:d,dataFormat:f}=n,m="channelsLast"===f,g=u*c*h,b=d*p,y=[g,b],x=[],w=vn({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),v=vn({inputs:{x:t},backend:s,attrs:{shape:[1,g,r.D5U.sizeFromShape(t.shape)/g]}});x.push(w),x.push(v);const k=new tr(y,w.shape,n),C=s.runWebGLProgram(k,[w],"float32"),I=vn({inputs:{x:C},backend:s,attrs:{shape:[1,y[0],y[1]]}});x.push(C),x.push(I);const $=null!=a,S=null!=i,E="leakyrelu"===l,N=l?mn(l,!0):null,T=new gn(I.shape,v.shape,[1,b,n.outChannels],!0,!1,$,N,S,E),R=[I,v];if(a&&R.push(a),S&&R.push(i),E){const e=s.makeTensorInfo([],"float32",r.D5U.createScalarValue(o,"float32"));R.push(e),x.push(e)}const A=s.runWebGLProgram(T,R,"float32"),D=vn({inputs:{x:A},backend:s,attrs:{shape:m?[1,d,p,n.outChannels]:[1,n.outChannels,d,p]}});x.push(A);for(const e of x)s.disposeIntermediateTensorInfo(e);return D}const rr={kernelName:r.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=s,p=r.Wap.convertConv2DDataFormat(u),d=r.Wap.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,p);let f;if(1!==d.filterHeight||1!==d.filterWidth||1!==d.dilationHeight||1!==d.dilationWidth||1!==d.strideHeight||1!==d.strideWidth||"SAME"!==d.padInfo.type&&"VALID"!==d.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=sr({x:a,filter:i,convInfo:d,backend:n});else{const e=new Qs(d);f=n.runWebGLProgram(e,[a,i],"float32")}else f=nr({x:a,filter:i,convInfo:d,backend:n});const m=vn({inputs:{x:f},backend:n,attrs:{shape:d.outShape}});return n.disposeIntermediateTensorInfo(f),m}};class ar{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ir{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class or{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class lr{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ur={kernelName:r.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:h}=s,p=r.Wap.convertConv2DDataFormat(u),d=r.Wap.computeConv2DInfo(a.shape,h,o,1,l,c,!1,p),f=new ar(d);return n.runWebGLProgram(f,[a,i],"float32")}},cr={kernelName:r.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=s,p=r.Wap.convertConv2DDataFormat(c),d=r.Wap.computeConv2DInfo(o,i.shape,l,1,u,h,!1,p),f=new ir(d);return n.runWebGLProgram(f,[a,i],"float32")}},hr={kernelName:r.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=s,c=r.Wap.computeConv3DInfo(a.shape,i.shape,o,u,l),h=new er(c);return n.runWebGLProgram(h,[a,i],"float32")}},pr={kernelName:r.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=s,c=r.Wap.computeConv3DInfo(a.shape,u,o,1,l),h=new or(c);return n.runWebGLProgram(h,[a,i],"float32")}},dr={kernelName:r.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=s,c=r.Wap.computeConv3DInfo(u,i.shape,l,1,o),h=new lr(c);return n.runWebGLProgram(h,[a,i],"float32")}},fr=dn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),mr={kernelName:r.mc4,backendName:"webgl",kernelFunc:fr},gr=dn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),br={kernelName:r.TR1,backendName:"webgl",kernelFunc:gr};class yr{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[y,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const xr={kernelName:r.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new yr(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class wr{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${vr(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${he(s)} coords = getOutputCoords();\n        int end = ${kr(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${kr(s,"coords")} = idx;\n          val += getX(${vr(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function vr(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function kr(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Cr={kernelName:r.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=s,u=a.shape.length,c=r.Wap.getAxesPermutation([i],u);let h=a;null!=c&&(h=An({inputs:{x:a},backend:n,attrs:{perm:c}}));const p=r.Wap.getInnerMostAxes(1,u)[0];if(p!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${i}`);const d=h.shape[p];let f=nn({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(d))-1;e++){const t=new wr(h.shape,!1,l),s=t.getCustomSetupFunc(e),r=f;f=n.runWebGLProgram(t,[f],f.dtype,s),n.disposeIntermediateTensorInfo(r)}if(o){const e=new wr(h.shape,o,l),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=An({inputs:{x:f},backend:n,attrs:{perm:r.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},Ir={kernelName:r.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=lt(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=ut(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class $r{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Sr={kernelName:r.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockSize:i,dataFormat:o}=s;r.D5U.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const l=a.shape[0],u="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],h="NHWC"===o?a.shape[3]:a.shape[1],p=u*i,d=c*i,f=h/(i*i),m=new $r("NHWC"===o?[l,p,d,f]:[l,f,p,d],i,o);return n.runWebGLProgram(m,[a],a.dtype)}};class Er{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,p=e.dilationWidth,d=e.filterHeight,f=e.filterWidth,m=e.outChannels/e.inChannels;let g="",b="";n&&(g=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${g}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${m};\n        int q = d2 - d1 * ${m};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${p};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Nr{constructor(e,t=!1,n=null,s=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.outChannels/e.inChannels,o=e.inHeight,l=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,h=e.strideHeight,p=e.strideWidth,d=e.dilationHeight,f=e.dilationWidth,m=e.filterHeight,g=e.filterWidth,b=g;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<g;e++)y+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<m;e++){for(let e=0;e<g;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${e*d};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let t=0;t<(b+1)/2;t++){const n=2*t,s=n*f;if(y+=`\n          xC = xCCorner + ${s};\n          `,1===p){if(n<g&&(c%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${s}Ready == 0) {\n                  xTexelC${s} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${s}.zw = vec2(0.0);\n                  }\n                  xTexelC${s}Ready = 1;\n                }\n              `,y+=1===f&&s>0?`\n                xC${n} = vec4(xTexelC${s-2}.zw, xTexelC${s}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${l}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${s}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${s}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${l} && xTexelC${s}Ready == 0) {\n                  xTexelC${s} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${s}.zw = vec2(0.0);\n                  }\n                  xTexelC${s}Ready = 1;\n                }\n\n                xC${n} = xTexelC${s};\n                `,s+1<g)){const e=c%2==0?r.D5U.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(y+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${s+2}Ready == 0) {\n                    xTexelC${s+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      xTexelC${s+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${s+2}Ready = 1;\n                  }\n                  `,f>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${s}Ready == 0) {\n                      xTexelC${s} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${s}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${n+1} = vec4(xTexelC${s}.zw, xTexelC${s+2}.xy);\n                  `):y+=1===e?`\n                    xC${n+1} = xTexelC${s};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${s+2}Ready == 0) {\n                      xTexelC${s+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${l}) {\n                        xTexelC${s+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${s+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${s+2};\n                    `}}else s<g&&(c%2==1?(y+=`\n                xCOffset = xC + 1 - ${p};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${s}Ready == 0) {\n                  xTexelC${s} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${s}.zw = vec2(0.0);\n                  }\n                  xTexelC${s}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${l} && xTexelC${s+2}Ready == 0) {\n                  xTexelC${s+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${l}) {\n                    xTexelC${s+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${s+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${s}.zw, xTexelC${s+2}.zw);\n              `,s+1<g&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${p};\n                  if(xCOffset >= 0 && xCOffset < ${l}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${s+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${l} && xTexelC${s}Ready == 0) {\n                  xTexelC${s} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${s}.zw = vec2(0.0);\n                  }\n                  xTexelC${s}Ready = 1;\n                }\n\n                xCOffset = xC + ${p};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${s+2}Ready == 0) {\n                  xTexelC${s+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${s+2}.zw = vec2(0.);\n                  }\n                  xTexelC${s+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${s}.xy, xTexelC${s+2}.xy);\n              `,s+1<g&&(y+=`\n                  xC${n+1} = vec4(xTexelC${s}.zw, xTexelC${s+2}.zw);\n                `)));n<g&&(y+=`\n            wTexel = getW(${e}, ${s}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,s+1<g&&(y+=`\n              wTexel = getW(${e}, ${s+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let x="",w="";n&&(x=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${h}, ${p});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}const Tr={kernelName:r.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=s;let h=u;null==h&&(h=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const p=r.Wap.computeConv2DInfo(a.shape,i.shape,o,h,l,c,!0);let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&p.strideWidth<=2&&p.outChannels/p.inChannels==1?new Nr(p):new Er(p),n.runWebGLProgram(d,[a,i],"float32")}};class Rr{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ar{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Dr={kernelName:r.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:h}=s,p=r.Wap.computeConv2DInfo(a.shape,h,o,l,u,c,!0),d=new Rr(p);return n.runWebGLProgram(d,[a,i],"float32")}},Fr={kernelName:r.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=s,p=r.Wap.computeConv2DInfo(h,i.shape,o,l,u,c,!0),d=new Ar(p);return n.runWebGLProgram(d,[a,i],"float32")}};class _r{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Or={kernelName:r.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,a=[...s.shape,...s.shape],i=r.D5U.sizeFromShape(s.shape),o=vn({inputs:{x:s},backend:n,attrs:{shape:[i]}}),l=new _r(i),u=n.runWebGLProgram(l,[o],o.dtype),c=vn({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class Lr{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const zr={kernelName:r.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=s,c=r.Wap.computeDilation2DInfo(a.shape,i.shape,o,l,"NHWC",u);let h;const p=new Lr(c);h=n.runWebGLProgram(p,[a,i],"float32");const d=vn({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),d}},Br={kernelName:r.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:a}=s,i=t,{allDims:o,summedDims:l,idDims:u}=r.Wap.decodeEinsumEquation(a,i.length);r.Wap.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:h}=r.Wap.getEinsumComputePath(l,u),p=h.length;let d=null,f=o.length;const m=[];for(let e=0;e<p;++e){for(const t of h[e]){const{permutationIndices:e,expandDims:s}=r.Wap.getEinsumPermutation(f,u[t]);let a;r.Wap.isIdentityPermutation(e)?a=i[t]:(a=An({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),m.push(a));const o=a.shape.slice();for(let e=0;e<s.length;++e)o.splice(s[e],0,1);r.D5U.arraysEqual(a.shape,o)||(a=vn({inputs:{x:a},backend:n,attrs:{shape:o}}),m.push(a)),null===d?d=a:(d=xn({inputs:{a,b:d},backend:n}),m.push(d))}e<p-1&&(c[e]>=0&&(d=Tn({inputs:{x:d},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),m.push(d)),f--)}for(const e of m)e!==d&&n.disposeIntermediateTensorInfo(e);return d}},Mr=dn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ur={kernelName:r.SX0,backendName:"webgl",kernelFunc:Mr},Pr={kernelName:r.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:a}=t,i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,a.shape):new en("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,a.shape);return n.runWebGLProgram(i,[s,a],s.dtype)}},Wr=fn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Vr={kernelName:r.hdR,backendName:"webgl",kernelFunc:Wr},Gr=dn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),Hr={kernelName:r.Omj,backendName:"webgl",kernelFunc:Gr},jr="return exp(x);",Xr=dn({opSnippet:jr,packedOpSnippet:jr,cpuKernelImpl:pt}),qr={kernelName:r.NEP,backendName:"webgl",kernelFunc:Xr};function Kr(e){const{inputs:t,attrs:n,backend:s}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(r.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),l.splice(u,0,1),vn({inputs:{x:i},backend:s,attrs:{shape:l}})}const Yr={kernelName:r.YFo,backendName:"webgl",kernelFunc:Kr},Jr="return exp(x) - 1.0;",Zr=dn({opSnippet:Jr,packedOpSnippet:Jr,cpuKernelImpl:dt}),Qr={kernelName:r.Y0y,backendName:"webgl",kernelFunc:Zr};class ea{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ta(e,t,n){const s=n.texData.get(e.dataId),a=r.D5U.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=vn({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new ea("real",l,t),c=new ea("imag",l,t),h=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:l},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:l}],p=n.runWebGLProgram(u,h,"float32"),d=n.runWebGLProgram(c,h,"float32"),f=rn({inputs:{real:p,imag:d},backend:n});n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d);const m=vn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),m}const na={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return ta(s,!1,n)}};class sa{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function ra(e){const{backend:t,attrs:n}=e,{shape:s,value:a}=n;let{dtype:i}=n;if(i=i||r.D5U.inferDtype(a),"string"===i){const e=r.D5U.getArrayFromDType(i,r.D5U.sizeFromShape(s));return e.fill(a),t.makeTensorInfo(s,i,e)}{const e=new sa(s,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],i,n)}}const aa={kernelName:r.deh,backendName:"webgl",kernelFunc:ra};class ia{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oa={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new ia(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},la="return floor(x);",ua=dn({opSnippet:la,packedOpSnippet:la,cpuKernelImpl:ft}),ca={kernelName:r.OR,backendName:"webgl",kernelFunc:ua},ha=fn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),pa={kernelName:r.jeX,backendName:"webgl",kernelFunc:ha};class da{constructor(e){this.variableNames=["A"];const t=B(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class fa{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=B(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const ma={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:a}=t;const{numChannels:i}=s,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,h]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],p=[h,c],d=[h,c,i];(l||o)&&(null==ga&&(ga=document.createElement("canvas").getContext("2d")),ga.canvas.width=c,ga.canvas.height=h,ga.drawImage(a,0,0,c,h),a=ga.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const m=(0,r.OBj)().getBool("WEBGL_PACK")?new fa(d):new da(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let ga;const ba={kernelName:r._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:h,dilations:p,dimRoundingMode:d,activation:f,leakyreluAlpha:m}=s,g=r.Wap.convertConv2DDataFormat(h),b=r.Wap.computeConv2DInfo(a.shape,i.shape,u,p,c,d,!1,g);let y;const x=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=sr({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});else{const e=null!=o,t=null!=l,s="leakyrelu"===f,u=f?mn(f,!1):null,c=new Qs(b,e,u,t,s),h=[a,i];if(o&&h.push(o),l&&h.push(l),s){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(m,"float32"));h.push(e),x.push(e)}y=n.runWebGLProgram(c,h,"float32")}else y=nr({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:m});const w=vn({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return x.push(y),x.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},ya={kernelName:r.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=[];let g=h;null==g&&(g=[1,1]),r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(u,g),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${g}'`));const b=r.Wap.computeConv2DInfo(a.shape,i.shape,u,g,c,p,!0),y=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,x=d?mn(d,y):null,w=[a,i],v=null!=o,k=null!=l,C="leakyrelu"===d;if(v&&w.push(o),k&&w.push(l),C){const e=n.makeTensorInfo([],"float32",r.D5U.createScalarValue(f,"float32"));w.push(e),m.push(e)}let I;I=y?new Nr(b,v,x,k,C):new Er(b,v,x,k,C);const $=n.runWebGLProgram(I,w,"float32");return m.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class xa{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=he(t.length),r=he(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const wa={kernelName:r.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:a}=t,i=a.shape,o=i[i.length-1],[l,u,c,h]=r.Wap.prepareAndValidate(s,a),p=vn({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),d=vn({inputs:{x:s},backend:n,attrs:{shape:[r.D5U.sizeFromShape(s.shape)/c,c]}}),f=new xa(o,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=vn({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class va{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=he(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("int(getIndices(resRC.x, resRC.z))"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}const ka={kernelName:r.qi_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=s,u=r.D5U.parseAxisParam(o,a.shape)[0],c=r.Wap.segment_util.collectGatherOpShapeInfo(a,i,u,l),h=r.D5U.sizeFromShape(i.shape),p=[],d=vn({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=vn({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});p.push(d),p.push(f);const m=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(d),s=mt(t,e,m);return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,s.dtype,s.values)}const g=new va(d.shape,m),b=n.runWebGLProgram(g,[d,f],d.dtype);p.push(b);const y=vn({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return p.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Ca=fn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:gt,dtype:"bool"}),Ia={kernelName:r.iZT,backendName:"webgl",kernelFunc:Ca},$a=fn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Sa={kernelName:r.Acj,backendName:"webgl",kernelFunc:$a},Ea={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return ta(s,!0,n)}},Na=dn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ta={kernelName:r.avt,backendName:"webgl",kernelFunc:Na},Ra=dn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Aa={kernelName:r.iWB,backendName:"webgl",kernelFunc:Ra},Da=dn({opSnippet:"return float(isnan(x));",dtype:"bool"}),Fa={kernelName:r.r7n,backendName:"webgl",kernelFunc:Da},_a=fn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bt,dtype:"bool"}),Oa={kernelName:r.vtC,backendName:"webgl",kernelFunc:_a},La=fn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),za={kernelName:r.CAk,backendName:"webgl",kernelFunc:La},Ba={kernelName:r.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=yt(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},Ma=dn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:xt}),Ua={kernelName:r.ZbH,backendName:"webgl",kernelFunc:Ma},Pa=dn({opSnippet:"return log(1.0 + x);"}),Wa={kernelName:r.kU,backendName:"webgl",kernelFunc:Pa},Va=fn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ga={kernelName:r.PYm,backendName:"webgl",kernelFunc:Va},Ha=dn({opSnippet:"return float(!(x >= 1.0));"}),ja={kernelName:r.VfG,backendName:"webgl",kernelFunc:Ha},Xa=fn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qa={kernelName:r.MZg,backendName:"webgl",kernelFunc:Xa};class Ka{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ya{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ja={kernelName:r.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=s,c=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ya(a.shape,i,o,l,u):new Ka(a.shape,i,o,l,u);return n.runWebGLProgram(c,[a],a.dtype)}};class Za{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Qa={kernelName:r.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new Za(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function ei(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=s,l=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l),p=null!=h,d=n.shouldExecuteOnCPU([a]);let f=a;if(p){if(d){const e=n.texData.get(f.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const s=Lt(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=s}else f=Nn(a,h,n);c=r.Wap.getInnerMostAxes(c.length,l)}r.Wap.assertAxesAreInnerMostDims("max",c,l);const[m,g]=r.Wap.computeOutAndReduceShapes(f.shape,c);let b,y=m;if(o&&(y=r.Wap.expandShapeToKeepDim(m,u)),d){const e=n.texData.get(f.dataId).values,t=wt(e,r.D5U.sizeFromShape(g),y,a.dtype);b=n.makeTensorInfo(y,a.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=vn({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=$n(i,e.dtype,"max",s),l=vn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(f,g,y,n);return p&&n.disposeIntermediateTensorInfo(f),b}const ti={kernelName:r.YoZ,backendName:"webgl",kernelFunc:ei},ni=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:vt}),si={kernelName:r.BMI,backendName:"webgl",kernelFunc:ni},ri={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t;L(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=r.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&r.D5U.arraysEqual(c.inShape,c.outShape))return nn({inputs:{x:a},backend:n});const h=new ps(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},ai={kernelName:r.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=r.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],l,c,u),p=new ds(h,"max",!1);return n.runWebGLProgram(p,[a],a.dtype)}};class ii{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const li={kernelName:r.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=r.Wap.computePool3DInfo(o.shape,l,u,[1,1,1],c,h),d=new ds(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new oi(p),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},ui={kernelName:r.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:a,input:i,output:o}=t,l=i;L([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:h,dimRoundingMode:p}=s,d=r.Wap.computePool2DInfo(l.shape,u,c,1,h,p),f=new ps(d,"max",!0),m=n.runWebGLProgram(f,[l],l.dtype),g=new ii(d),b=n.runWebGLProgram(g,[a,m],l.dtype);return n.disposeIntermediateTensorInfo(m),b}},ci={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;r.D5U.assert(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const c=[1,1];r.D5U.assert(r.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=r.Wap.computePool2DInfo(s.shape,a,i,c,o),[p,d]=function(e,t,n,s){let r=new ps(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new ps(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,l,h,u);return[p,d]}},hi={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:a,axis:i}=t,o=n,l=s.shape.length,u=r.D5U.parseAxisParam(i,s.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l),p=null!=h,d=o.shouldExecuteOnCPU([s]),f=[];let m=s;if(p){if(d){const e=o.texData.get(m.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=s.shape[h[e]];const n=Lt(e,s.shape,s.dtype,h,t);m=o.makeTensorInfo(t,s.dtype),o.texData.get(m.dataId).values=n}else m=Nn(s,h,o);f.push(m),c=r.Wap.getInnerMostAxes(c.length,l)}r.Wap.assertAxesAreInnerMostDims("sum",c,l);const[g,b]=r.Wap.computeOutAndReduceShapes(m.shape,c);let y=g;a&&(y=r.Wap.expandShapeToKeepDim(g,u));const x=function(e,t,n,s){const a=r.D5U.sizeFromShape(t),i=vn({inputs:{x:e},attrs:{shape:[r.D5U.sizeFromShape(e.shape)/a,a]},backend:s}),o=$n(i,"float32","mean",s),l=vn({inputs:{x:o},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(o),l}(m,b,y,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return x}},pi={kernelName:r.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=r.D5U.parseAxisParam(i,a.shape);let c=u;const h=r.Wap.getAxesPermutation(c,l);let p=a;null!=h&&(p=An({inputs:{x:a},backend:n,attrs:{perm:h}}),c=r.Wap.getInnerMostAxes(c.length,a.shape.length)),r.Wap.assertAxesAreInnerMostDims("min",c,l);const[d,f]=r.Wap.computeOutAndReduceShapes(p.shape,c),m=vn({inputs:{x:p},backend:n,attrs:{shape:[-1,r.D5U.sizeFromShape(f)]}}),g=$n(m,m.dtype,"min",n);let b;return b=vn(o?{inputs:{x:g},backend:n,attrs:{shape:r.Wap.expandShapeToKeepDim(d,u)}}:{inputs:{x:g},backend:n,attrs:{shape:d}}),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(g),null!=h&&n.disposeIntermediateTensorInfo(p),b}},di=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kt}),fi={kernelName:r.q8u,backendName:"webgl",kernelFunc:di};class mi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=he(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class gi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=he(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Mt("rc",s),l=Mt("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const bi={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:a,mode:i}=n,o=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new gi(s.shape,a,i):new mi(s.shape,a,i);return t.runWebGLProgram(o,[s],s.dtype)}},yi=fn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),xi={kernelName:r.Vbg,backendName:"webgl",kernelFunc:yi};class wi{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const vi=fn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ki={kernelName:r.oHH,backendName:"webgl",kernelFunc:vi},Ci="return a - b;",Ii=fn({opSnippet:Ci,packedOpSnippet:Ci,supportsComplex:!0,cpuKernelImpl:Ft}),$i={kernelName:r.Tr8,backendName:"webgl",kernelFunc:Ii};function Si(e){const{inputs:t,backend:n,attrs:s}=e,{logits:a}=t,{dim:i}=s,o=r.D5U.parseAxisParam([i],a.shape),l=ei({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=r.Wap.expandShapeToKeepDim(l.shape,o),c=vn({inputs:{x:l},backend:n,attrs:{shape:u}}),h=Ii({inputs:{a,b:c},backend:n}),p=Xr({inputs:{x:h},backend:n}),d=Tn({inputs:{x:p},backend:n,attrs:{axis:o,keepDims:!1}}),f=vn({inputs:{x:d},backend:n,attrs:{shape:u}}),m=vi({inputs:{a:p,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}const Ei={kernelName:r.Gcp,backendName:"webgl",kernelFunc:Si},Ni={kernelName:r.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:Si({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new wi(u,c,a),p=h.getCustomSetupFunc(i),d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},Ti="return -x;",Ri={kernelName:r.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=It(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Kt(s.shape,Ti):new jt(s.shape,Ti),n.runWebGLProgram(a,[s],s.dtype)}},Ai=r.GDt.GP,Di={kernelName:r.uv1,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=s,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:p}=Ai(c,h,o,l,u);return n.makeTensorInfo([p.length],"int32",new Int32Array(p))}},Fi=r.GDt.qP,_i={kernelName:r.cye,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),{selectedIndices:d,validOutputs:f}=Fi(h,p,o,l,u,c);return[n.makeTensorInfo([d.length],"int32",new Int32Array(d)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Oi=r.GDt.pA,Li={kernelName:r.W0H,backendName:"webgl",kernelFunc:function(e){r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=s,h=n.readSync(a.dataId),p=n.readSync(i.dataId),d=o,f=l,m=u,g=c,{selectedIndices:b,selectedScores:y}=Oi(h,p,d,f,m,g);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class zi{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const Bi={kernelName:r.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=s,u=r.D5U.sizeFromShape(a.shape),c=new zi(u,i,o,l),h=vn({inputs:{x:a},backend:n,attrs:{shape:[u]}}),p=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const d=vn({inputs:{x:p},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(p),d}};function Mi(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=Fs({inputs:{input:s},backend:n}),t=Mi({inputs:{x:e},backend:n}),r=qs({inputs:{input:s},backend:n}),a=Mi({inputs:{x:r},backend:n}),i=rn({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return ra({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const Ui={kernelName:r.RuY,backendName:"webgl",kernelFunc:Mi},Pi={kernelName:r.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=Fs({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=qs({inputs:{input:r},backend:s}),i=Mi({inputs:{x:a},backend:s}),o=rn({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return ra({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},Wi={kernelName:r.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:a}=s;if(1===t.length)return Kr({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{r.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),r.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=Js({inputs:t.map((e=>{const t=Kr({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t})),backend:n,attrs:{axis:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Vi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=he(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Gi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=he(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Mt("rc",s),l=Mt("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n      uniform float value;\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const Hi=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{paddings:i,constantValue:o}=s,l=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gi(a.shape,i,o):new Vi(a.shape,i,o),u=l.getCustomSetupFunc(o);return n.runWebGLProgram(l,[a],a.dtype,u)},ji={kernelName:r.lyA,backendName:"webgl",kernelFunc:Hi},Xi=fn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qi={kernelName:r.pe_,backendName:"webgl",kernelFunc:Xi},Ki={kernelName:r.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{axis:i,keepDims:o}=s,l=a.shape.length,u=[],c=r.D5U.parseAxisParam(i,a.shape);let h=c;const p=r.Wap.getAxesPermutation(h,l);let d,f=a;if(null!=p&&(f=An({inputs:{x:a},backend:n,attrs:{perm:p}}),h=r.Wap.getInnerMostAxes(h.length,l),u.push(f)),r.Wap.assertAxesAreInnerMostDims("prod",h,l),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:s,outDtype:r}=$t(f.shape,f.dtype,e,h);d=n.makeTensorInfo(s,r,t)}else{const[e,t]=r.Wap.computeOutAndReduceShapes(f.shape,h),s=r.D5U.sizeFromShape(t),i=vn({inputs:{x:f},backend:n,attrs:{shape:[-1,s]}}),o=$n(i,(0,r.z4k)(a.dtype),"prod",n);d=vn({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(d);const e=r.Wap.expandShapeToKeepDim(d.shape,c);d=vn({inputs:{x:d},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},Yi=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=St(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},Ji={kernelName:r.e6w,backendName:"webgl",kernelFunc:Yi},Zi=dn({opSnippet:"return 1.0 / x;"}),Qi={kernelName:r.$HU,backendName:"webgl",kernelFunc:Zi},eo=dn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),to={kernelName:r.qkr,backendName:"webgl",kernelFunc:eo},no=dn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),so={kernelName:r.SbG,backendName:"webgl",kernelFunc:no};class ro{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class ao{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const io={kernelName:r._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s,[u,c]=l,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ao(a.shape,u,c,i,o):new ro(a.shape,u,c,i,o);return n.runWebGLProgram(h,[a],"float32")}};class oo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const lo={kernelName:r.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new oo(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class uo{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class co{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const ho={kernelName:r.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=s,[u,c]=l,h=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new co(a.shape,u,c,i,o):new uo(a.shape,u,c,i,o);return n.runWebGLProgram(h,[a],a.dtype)}};class po{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fo={kernelName:r.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new po(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class mo{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=he(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class go{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=Mt("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=he(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const bo={kernelName:r.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{dims:i}=s,o=a.shape.length,l=r.D5U.parseAxisParam(i,a.shape);if(0===o)return nn({inputs:{x:a},backend:n});const u=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new go(a.shape,l):new mo(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class yo{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,s){return(r,a)=>{null==this.paramsLoc&&(this.paramsLoc=r.getUniformLocationNoThrow(a,"params")),r.gl.uniform4f(this.paramsLoc,e,t,n,s)}}}const xo={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:a,fillValue:i,center:o}=t,l=n,u=new yo(s.shape,i),[c,h]=r.Wap.getImageCenter(o,s.shape[1],s.shape[2]),p=u.getCustomSetupFunc(c,h,Math.sin(a),Math.cos(a));return l.runWebGLProgram(u,[s],s.dtype,p)}},wo=dn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),vo={kernelName:r.e07,backendName:"webgl",kernelFunc:wo},ko=dn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Et}),Co={kernelName:r.bV0,backendName:"webgl",kernelFunc:ko};class Io{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=he(r.length),l=he(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const $o={kernelName:r.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:a,updates:i}=t,{shape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=r.Wap.calculateShapes(i,a,o),d=[p/c,c];if(0===p)return n.makeTensorInfo(o,a.dtype);const f=vn({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=vn({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),g=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new Io(u,l,f.shape.length,m.shape.length,h,d),y=n.runWebGLProgram(b,[m,f,g],m.dtype),x=vn({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(g),x}};class So{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=he(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const Eo={kernelName:r.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:a,e:i}=t,o=new So(s.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[s,a,i],(0,r.x8V)(a.dtype,i.dtype))}},No=dn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),To={kernelName:r.oFR,backendName:"webgl",kernelFunc:No},Ro=dn({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Ao={kernelName:r.a5O,backendName:"webgl",kernelFunc:Ro},Do=dn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Fo={kernelName:r.i5y,backendName:"webgl",kernelFunc:Do},_o=dn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Oo={kernelName:r.RQH,backendName:"webgl",kernelFunc:_o},Lo=dn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),zo={kernelName:r.wYB,backendName:"webgl",kernelFunc:Lo},Bo=dn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Mo={kernelName:r.MRv,backendName:"webgl",kernelFunc:Bo},Uo={kernelName:r.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{blockShape:i,paddings:o}=s;r.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const c=[],h=Hi({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),p=r.Wap.getReshaped(h.shape,i,l,!1),d=r.Wap.getPermuted(p.length,i.length,!1),f=r.Wap.getReshapedPermuted(h.shape,i,l,!1),m=vn({inputs:{x:h},backend:n,attrs:{shape:p}}),g=An({inputs:{x:m},backend:n,attrs:{perm:d}}),b=vn({inputs:{x:g},backend:n,attrs:{shape:f}});return c.push(h),c.push(m),c.push(g),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Po={kernelName:r.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=Rt(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},Wo={kernelName:r.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=At(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Vo={kernelName:r.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:l}=s,{sliceRank:u,numUpdates:c,strides:h,outputSize:p}=r.Wap.calculateShapes(i,a,l),d=new Io(c,u,a.shape.length,i.shape.length,h,[p,1],!1),f=n.runWebGLProgram(d,[i,a,o],i.dtype),m=vn({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(f),m}},Go={kernelName:r.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=s,l=r.D5U.parseAxisParam(o,a.shape)[0],u=r.Wap.prepareSplitSize(a,i,l),c=a.shape.length,h=new Array(c).fill(0),p=a.shape.slice();return u.map((e=>{const t=[...p];t[l]=e;const s=Es({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[l]+=e,s}))}},Ho=dn({opSnippet:"return sqrt(x);"}),jo={kernelName:r.FKq,backendName:"webgl",kernelFunc:Ho},Xo=dn({opSnippet:"return x * x;"}),qo={kernelName:r.bK0,backendName:"webgl",kernelFunc:Xo},Ko="return (a - b) * (a - b);",Yo=fn({opSnippet:Ko,packedOpSnippet:Ko}),Jo={kernelName:r._tC,backendName:"webgl",kernelFunc:Yo},Zo={kernelName:r.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new jt(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class Qo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=he(n.length),a=he(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const el={kernelName:r.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:p,shrinkAxisMask:d}=s,{nonStrided:f,$begin:m,$strides:g,size:b,newShape:y,outShape:x}=r.kuN.sliceInfo(a.shape,i,o,l,u,c,h,p,d),w=vn({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(f){const e=Es({inputs:{x:w},backend:n,attrs:{begin:m,size:b}});v=vn({inputs:{x:e},backend:n,attrs:{shape:x}}),n.disposeIntermediateTensorInfo(e)}else if(x.some((e=>0===e)))v=n.makeTensorInfo(x,a.dtype,[]);else if(n.shouldExecuteOnCPU([w])){const e=n.texData.get(w.dataId).values,t=(0,r.f3b)(w.shape,w.dtype,e),s=Dt(x,t,g,m);v=n.makeTensorInfo(x,w.dtype,s.values)}else{const e=new Qo(m,g,x);v=n.runWebGLProgram(e,[w],w.dtype)}const k=vn({inputs:{x:v},backend:n,attrs:{shape:x}});return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),k}},tl=dn({opSnippet:"return tan(x);"}),nl={kernelName:r.sEM,backendName:"webgl",kernelFunc:tl},sl=dn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),rl={kernelName:r.MIZ,backendName:"webgl",kernelFunc:sl};class al{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=he(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function il(e){const{inputs:t,backend:n,attrs:s}=e,{x:a}=t,{reps:i}=s;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>r.D5U.decodeString(e))):e,s=(0,r.f3b)(a.shape,a.dtype,t),o=_t(s,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new al(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const ol={kernelName:r.n9L,backendName:"webgl",kernelFunc:il},ll={kernelName:r.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=n.readSync(r.dataId),[l,u]=Ot(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class ul{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const cl={kernelName:r.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new ul(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},hl={kernelName:r.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;L(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=zt(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},pl={kernelName:r.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=Es({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=vn({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class dl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const fl=[Ja,Qa,_n,Ln,Bn,Un,Vn,jn,Xn,qn,es,ts,ss,as,us,os,hs,ms,fs,ys,xs,ws,Cs,Ts,Rs,Os,Bs,Ps,Gs,an,Zs,ur,cr,rr,pr,dr,hr,mr,br,xr,Cr,Ir,Sr,Dr,Fr,Tr,Or,zr,Br,Ur,Pr,Vr,Hr,qr,Yr,Qr,na,aa,oa,ca,pa,ma,ba,ya,wa,ka,Ia,Sa,sn,Ea,Ks,Ta,Aa,Fa,un,Oa,za,Ba,Wa,Ua,Ga,ja,qa,ti,ai,ri,li,ui,ci,si,hi,pi,fi,bi,xi,Ni,wn,Ri,Di,_i,Li,Ds,Bi,Pi,Wi,ji,qi,pn,Ki,Ji,_s,ki,Qi,so,to,kn,io,lo,ho,fo,bo,xo,vo,Co,$o,Eo,To,Ao,Fo,Oo,zo,Ns,Ei,Mo,Uo,Po,Wo,Vo,Go,jo,qo,Jo,Zo,el,$i,Rn,nl,rl,ol,ll,cl,Dn,hl,pl,{kernelName:r.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:a,segmentIds:i}=t,{numSegments:o}=s,l=a.shape.length,u=[];let c=0;const h=r.Wap.getAxesPermutation([c],l);let p=a;null!=h&&(p=An({inputs:{x:a},backend:n,attrs:{perm:h}}),u.push(p),c=r.Wap.getInnerMostAxes(1,l)[0]);const d=r.Wap.segment_util.computeOutShape(p.shape,c,o),f=r.D5U.sizeFromShape([p.shape[c]]),m=vn({inputs:{x:p},backend:n,attrs:{shape:[-1,f]}});u.push(m);const g=(0,r.z4k)(a.dtype),b=(e,t,s,a,i)=>{const o=e.shape[0],l=e.shape[1],c=r.Wap.segment_util.segOpComputeOptimalWindowSize(l,i),h=new dl({windowSize:c,inSize:l,batchSize:o,numSegments:i},t),p=n.compileAndRun(h,[e,s],a);if(u.push(p),p.shape[1]===i)return p;const d=Yi({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=il({inputs:{x:d},backend:n,attrs:{reps:[l/c]}});return u.push(d),u.push(f),b(p,t,f,a,i)},y=vn({inputs:{x:b(m,"unsortedSegmentSum",i,g,o)},backend:n,attrs:{shape:d}});let x=y;if(null!=h){u.push(y);const e=r.Wap.getUndoAxesPermutation(h);x=An({inputs:{x},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},Ui];for(const e of fl)(0,r.wCN)(e)},9941:(e,t,n)=>{"use strict";n.d(t,{JL:()=>s,Zu:()=>r});class s{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class r{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,s,r){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},3421:(e,t,n)=>{"use strict";n.d(t,{BV:()=>x,wv:()=>y});var s=n(9941),r=n(3535),a=n(7944),i=n(5202),o=n(8307),l=n(4959),u=n(9740);class c{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new p)}profileKernel(e,t,n){let s;const a=()=>{s=n()};let i;const o=l.now();if(this.backendTimer.timerAvailable())i=this.backendTimer.time(a);else{a();for(const e of s)e.dataSync();i=Promise.resolve({kernelMs:l.now()-o})}if((0,r.OB)().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{h(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:i.then((e=>e.kernelMs)),extraInfo:i.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function h(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class p{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?u.oj(`${s}ms`,9):s.error,o=u.oj(e,25),l=t.rank,c=t.size,h=u.oj(t.shape.toString(),14);let p="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;p+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${h}\t%c${c}\t%c${p}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var d=n(1313),f=n(9201);function m(e){return null!=e.kernelName}class g{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class b{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new g}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,o.tr)(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){(0,o.tr)(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof s.Zu||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return b.nextTensorId++}nextVariableId(){return b.nextVariableId++}clone(e){const t=x.runKernel(i.iJ,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return x.runKernel(i.RF,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==(0,o.pI)(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const c=m(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(m(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const c=(0,o.pI)(t,this.backendName);u.hu(null!=c,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();l=c.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(c,e,n),n}}const{inputs:h,attrs:p}=e,d=m(e)?null:e.backwardsFunc;let f;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(f=this.profiler.profileKernel(c,h,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(f),t=f.outputs):t=i()})),s&&this.addTapeNode(c,h,t,d,n,p),this.state.profiling&&this.state.activeProfile.kernels.push({name:c,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(h).map((e=>null!=h[e]?h[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:f.timeMs,extraInfo:f.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const s=(0,o.uk)(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(u.hu(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&u.HD(e[0])&&(r=e.map((e=>l.encodeString(e))));const a=s.write(r,t,n),i=new d.es(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=(0,u.Ub)(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){n=n||"float32";const r=new d.es(t,n,e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new d._w(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*u.bT(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof d._w||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*u.bT(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},l=(0,o.uk)(e);null!=l&&(s=l.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=u.wT(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=(0,f.getTensorsInContainer)(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(u.hu(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));u.hu(r instanceof d.es,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=(0,u.p8)((0,u.NA)(e),"float32");return x.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!u.cO(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),w);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return u.hu(u.mf(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;u.hu(t.every((e=>e instanceof d.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),u.hu(n.value instanceof d.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];u.hu(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(a.every((e=>e instanceof d.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=(0,l.now)(),n=await this.backend.time(e);return n.wallMs=(0,l.now)()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new g;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const e=(0,a.D)();if(null==e._tfengine){const t=new r.qA(e);e._tfengine=new b(t)}return(0,r.iG)(e._tfengine.ENV),(0,d.Vi)((()=>e._tfengine)),e._tfengine}b.nextTensorId=0,b.nextVariableId=0;const x=y();function w(e,t){const n={a:e,b:t};return x.runKernel(i.mm,n)}},3535:(e,t,n)=>{"use strict";n.d(t,{qA:()=>r,OB:()=>i,iG:()=>l});var s=n(9740);class r{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=a,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if((0,s.tI)(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function a(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function i(){return o}let o=null;function l(e){o=e}},7944:(e,t,n)=>{"use strict";let s;function r(){if(null==s){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}s=e}return s}function a(e,t){const n=function(){const e=r();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}n.d(t,{D:()=>r,R:()=>a})},3184:(e,t,n)=>{"use strict";n.d(t,{cb:()=>o,pn:()=>i});var s=n(3421),r=n(1313),a=n(9740);function i(e,t){a.hu(a.mf(e),(()=>"The f passed in variableGrads(f) must be a function")),a.hu(null==t||Array.isArray(t)&&t.every((e=>e instanceof r._w)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in s.BV.registeredVariables)t.push(s.BV.registeredVariables[e])}const i=n?t.filter((e=>!e.trainable)):null,o=t.length;t=t.filter((e=>e.trainable)),a.hu(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`));const{value:l,grads:u}=s.BV.gradients(e,t,null,!0);a.hu(u.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),a.hu(0===l.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${l.rank} tensor`));const c={};return t.forEach(((e,t)=>{null!=u[t]&&(c[e.name]=u[t])})),null!=i&&i.forEach((e=>c[e.name]=null)),{value:l,grads:c}}function o(e){return s.BV.customGrad(e)}},2079:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>nt.SY,VGw:()=>nt.VG,SpW:()=>nt.Sp,mm_:()=>nt.mm,Xze:()=>nt.Xz,oT6:()=>nt.oT,IKK:()=>nt.IK,sJF:()=>nt.sJ,aJk:()=>nt.aJ,M2y:()=>nt.M2,qw7:()=>nt.qw,jMg:()=>nt.jM,QCc:()=>nt.QC,Oyi:()=>nt.Oy,JhU:()=>nt.Jh,_k9:()=>nt._k,IMb:()=>nt.IM,ROF:()=>nt.RO,XLW:()=>nt.XL,zws:()=>nt.zw,zvY:()=>nt.zv,RFZ:()=>nt.RF,gJX:()=>nt.gJ,xnO:()=>nt.xn,Zz9:()=>nt.Zz,yj2:()=>nt.yj,Eh3:()=>nt.Eh,mhS:()=>nt.mh,wUP:()=>nt.wU,wm:()=>nt.wm,x12:()=>nt.x1,o2y:()=>nt.o2,ik2:()=>nt.ik,mc4:()=>nt.mc,TR1:()=>nt.TR,VcC:()=>nt.Vc,iHb:()=>nt.iH,JLz:()=>Ur.JL,QRR:()=>nt.QR,T0n:()=>nt.T0,cie:()=>nt.ci,sL$:()=>nt.sL,y7R:()=>nt.y7,$w:()=>nt.$w,p4S:()=>nt.p4,$g6:()=>nt.$g,SX0:()=>nt.SX,HEU:()=>nt.HE,hdR:()=>nt.hd,Omj:()=>nt.Om,NEP:()=>nt.NE,YFo:()=>nt.YF,Y0y:()=>nt.Y0,vwp:()=>nt.vw,deh:()=>nt.de,Uyb:()=>nt.Uy,OR:()=>nt.OR,jeX:()=>nt.je,eBW:()=>nt.eB,sHE:()=>nt.sH,_V0:()=>nt._V,luS:()=>nt.lu,q1x:()=>nt.q1,qi_:()=>nt.qi,iZT:()=>nt.iZ,Acj:()=>nt.Ac,Qg5:()=>nt.Qg,iJz:()=>nt.iJ,J_u:()=>nt.J_,avt:()=>nt.av,iWB:()=>nt.iW,r7n:()=>nt.r7,Zuw:()=>Ur.Zu,eZ0:()=>nt.eZ,Hhh:()=>nt.Hh,J$2:()=>nt.J$,vtC:()=>nt.vt,CAk:()=>nt.CA,e7N:()=>nt.e7,ZbH:()=>nt.Zb,kU:()=>nt.kU,PYm:()=>nt.PY,VfG:()=>nt.Vf,MZg:()=>nt.MZ,YoZ:()=>nt.Yo,mTV:()=>nt.mT,OAf:()=>nt.OA,OU7:()=>nt.OU,OV7:()=>nt.OV,vFR:()=>nt.vF,BMI:()=>nt.BM,q2K:()=>nt.q2,c17:()=>nt.c1,q8u:()=>nt.q8,jQs:()=>nt.jQ,Vbg:()=>nt.Vb,NZg:()=>nt.NZ,wYn:()=>nt.wY,kuV:()=>nt.ku,uv1:()=>nt.uv,cye:()=>nt.cy,W0H:()=>nt.W0,yQU:()=>nt.yQ,we_:()=>nt.we,qWM:()=>nt.qW,gaJ:()=>qe,QiL:()=>nt.Qi,lyA:()=>nt.ly,pe_:()=>nt.pe,o0g:()=>nt.o0,DlI:()=>nt.Dl,e6w:()=>nt.e6,xJR:()=>nt.xJ,oHH:()=>nt.oH,$HU:()=>nt.$H,qkr:()=>nt.qk,SbG:()=>nt.Sb,HZH:()=>nt.HZ,_Yw:()=>nt._Y,zbQ:()=>nt.zb,dpD:()=>nt.dp,Hmb:()=>nt.Hm,mKl:()=>nt.mK,b9H:()=>nt.b9,e07:()=>nt.e0,bV0:()=>nt.bV,xQA:()=>nt.xQ,PhF:()=>nt.Ph,oFR:()=>nt.oF,a5O:()=>nt.a5,i5y:()=>nt.i5,RQH:()=>nt.RQ,wYB:()=>nt.w3,p2w:()=>nt.p2,Gcp:()=>nt.Gc,MRv:()=>nt.MR,TQc:()=>nt.TQ,O3z:()=>nt.O3,nhH:()=>nt.nh,D2d:()=>nt.D2,L8s:()=>nt.L8,FKq:()=>nt.FK,bK0:()=>nt.bK,_tC:()=>nt._t,h8e:()=>nt.h8,jQk:()=>nt.m2,Tr8:()=>nt.Tr,GBy:()=>nt.GB,sEM:()=>nt.sE,MIZ:()=>nt.MI,esB:()=>he.es,YDk:()=>he.YD,n9L:()=>nt.n9,cWu:()=>nt.cW,wx7:()=>nt.wx,G3Y:()=>nt.G3,kpP:()=>nt.kp,ToN:()=>nt.To,Qvg:()=>nt.Qv,RuY:()=>nt.Ru,usg:()=>nt.us,WnP:()=>Ye.W,IHx:()=>Je.I,$6P:()=>Ze.$,YjB:()=>Qe.Y,NqF:()=>et.N,wS1:()=>tt.w,uR5:()=>at,y3$:()=>He,Wap:()=>l,Dxk:()=>ot,JY5:()=>lt,p3b:()=>ut,f3b:()=>pe,pju:()=>de.p,iUl:()=>ct.i,zoF:()=>ht.z,gME:()=>pt,Izb:()=>dt,MNy:()=>ft,ZaL:()=>mt,PAt:()=>gt.P,Tek:()=>bt.T,bc:()=>yt.b,pdZ:()=>wt,$QV:()=>kt,B10:()=>Ct.B,C2$:()=>s,B90:()=>We,hiC:()=>It.h,rvX:()=>Mn,pyx:()=>$t.p,SRH:()=>Me,OBj:()=>d.OB,DgJ:()=>St.D,dt4:()=>Et.d,iyy:()=>Tt,hlL:()=>Rt,GWj:()=>At.G,imm:()=>i,Iqj:()=>Dt.I,pjt:()=>Ft.p,brS:()=>_t.b,io:()=>r,CnY:()=>Ve,GDt:()=>u,hi7:()=>Ot.h,$r2:()=>Os,cM7:()=>Lt.c,CmS:()=>zt.C,HvI:()=>Bt.H,Fp7:()=>Mt.F,_sB:()=>Ut._,YQQ:()=>Pt,gWQ:()=>Wt.g,J69:()=>Vt.J,sq6:()=>Ue,VV$:()=>Gt.V,LTh:()=>Ht.L,Gi7:()=>Kt,dC7:()=>Yt.d,W76:()=>Jt.W,glt:()=>qs,Quu:()=>Zt.Q,lfX:()=>Qt.l,iUs:()=>en.i,JpU:()=>tn.J,vku:()=>nn.v,AL3:()=>sn.A,nGf:()=>ln,LGj:()=>un,jqO:()=>Ge,wCN:()=>js.wC,UYe:()=>cn.U,GYS:()=>hn.G,iD$:()=>Xe.i,U8D:()=>pn.U,U_I:()=>dn.U,m7h:()=>a,XD2:()=>fn.X,tPi:()=>mn.t,jZU:()=>gn,SmN:()=>bn,CnO:()=>yn,p0P:()=>xn,kuN:()=>Fe,XAC:()=>wn.X,Wvh:()=>vn.W,Vl2:()=>kn.V,_b3:()=>Cn._,L9e:()=>In.L,knu:()=>$n.k,luU:()=>qt.l,Smz:()=>Sn.S,z4k:()=>Ke.z4,AEp:()=>En.A,XeE:()=>y,RRF:()=>Nn,odF:()=>Tn,wOQ:()=>Rn,yXz:()=>An,piX:()=>ze,lub:()=>Pe,Gg6:()=>Nt.G,p_j:()=>Hs,p4s:()=>Bn.p,Xu6:()=>Dn,HHK:()=>Fn.H,x8V:()=>Ke.x8,D5U:()=>Be,VD$:()=>_n,arb:()=>On.a,lls:()=>Ln.l,P84:()=>zn.P});var s={};n.r(s),n.d(s,{isBrowser:()=>p,isMobile:()=>h});var r={};n.r(r),n.d(r,{browserFiles:()=>xe,browserHTTPRequest:()=>Ne,concatenateArrayBuffers:()=>S,copyModel:()=>oe,decodeWeights:()=>k,encodeWeights:()=>v,fromMemory:()=>Ae,getLoadHandlers:()=>_,getModelArtifactsInfoForJSON:()=>N,getSaveHandlers:()=>F,http:()=>Ee,isHTTPScheme:()=>$e,listModels:()=>ae,loadWeights:()=>ke,moveModel:()=>le,registerLoadRouter:()=>D,registerSaveRouter:()=>A,removeModel:()=>ie,weightsLoaderFactory:()=>Ce,withSaveHandler:()=>De});var a={};n.r(a),n.d(a,{Serializable:()=>_e,SerializationMap:()=>Oe,registerClass:()=>Le});var i={};n.r(i),n.d(i,{conv2d:()=>Qn,depthwiseConv2d:()=>ns,matMul:()=>rs});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:()=>Lr,computeOutShape:()=>Or,segOpComputeOptimalWindowSize:()=>_r});var l={};n.r(l),n.d(l,{ERF_A1:()=>hr,ERF_A2:()=>pr,ERF_A3:()=>dr,ERF_A4:()=>fr,ERF_A5:()=>mr,ERF_P:()=>cr,PARALLELIZE_THRESHOLD:()=>Js,SELU_SCALE:()=>ur.$,SELU_SCALEALPHA:()=>ur.y,applyActivation:()=>Jn,assertAndGetBroadcastShape:()=>Gn.$N,assertAxesAreInnerMostDims:()=>jt.lB,assertParamsConsistent:()=>Ks,assignToTypedArray:()=>Cr,axesAreInnerMostDims:()=>jt.YB,calculateShapes:()=>lr,checkEinsumDimSizes:()=>Tr,combineLocations:()=>jt.Vh,complexWithEvenIndex:()=>wr,complexWithOddIndex:()=>vr,computeConv2DInfo:()=>xt.Ix,computeConv3DInfo:()=>xt.jw,computeDefaultPad:()=>xt.aO,computeDilation2DInfo:()=>xt.Rf,computeOptimalWindowSize:()=>Zs,computeOutAndReduceShapes:()=>jt.kz,computeOutShape:()=>Ys,computePool2DInfo:()=>xt.Xw,computePool3DInfo:()=>xt.pl,convertConv2DDataFormat:()=>xt.sl,decodeEinsumEquation:()=>Er,eitherStridesOrDilationsAreOne:()=>xt.jT,expandShapeToKeepDim:()=>jt.rv,exponent:()=>$r,exponents:()=>Ir,fromStringArrayToUint8:()=>Br,fromUint8ToStringArray:()=>zr,getAxesPermutation:()=>jt.Q3,getBroadcastDims:()=>Gn.XF,getComplexWithIndex:()=>kr,getEinsumComputePath:()=>Rr,getEinsumPermutation:()=>Nr,getFusedBiasGradient:()=>Yn,getFusedDyActivation:()=>Kn,getImageCenter:()=>Qs,getInnerMostAxes:()=>jt.sY,getPermuted:()=>tr,getReductionAxes:()=>Gn.RR,getReshaped:()=>er,getReshapedPermuted:()=>nr,getSliceBeginCoords:()=>sr,getSliceSize:()=>rr,getUndoAxesPermutation:()=>jt.LJ,isIdentityPermutation:()=>Ar,log:()=>br,mergeRealAndImagArrays:()=>yr,prepareAndValidate:()=>ar,prepareSplitSize:()=>Fr,segment_util:()=>o,shouldFuse:()=>Zn,slice_util:()=>Fe,splitRealAndImagArrays:()=>xr,tupleValuesAreOne:()=>xt.I0,upcastType:()=>Ke.x8,validateInput:()=>or,validateUpdateShape:()=>ir,warn:()=>gr});var u={};n.r(u),n.d(u,{GP:()=>hs,qP:()=>ps,pA:()=>ds,ZA:()=>Mr});var c=n(3421);function h(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function p(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var d=n(3535);const f=(0,d.OB)();f.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),f.registerFlag("IS_BROWSER",(()=>p())),f.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),f.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),f.registerFlag("PROD",(()=>!1)),f.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>f.getBool("DEBUG"))),f.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),f.registerFlag("IS_TEST",(()=>!1)),f.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),f.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));var m=n(6609),g=n(8516),b=n(213);function y(e,t,n){const s=(0,g.C)(e,n);return(0,b.H)(e,t,s,n)}var x=n(9740);const w={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function v(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:C(await Promise.all(s)),specs:n}}function k(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=(0,x.NA)(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=w[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=T()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=(0,x.NA)(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=w[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=y(e,o,"float32"),i=y(s,o,"float32");n[t]=(0,m.P)(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=y(u,o,i))}return n}function C(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const I="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function $(e){return I?Buffer.byteLength(e):new Blob([e]).size}function S(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function E(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function N(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:$(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:$(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function T(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class R{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==R.instance&&(R.instance=new R),R.instance}static registerSaveRouter(e){R.getInstance().saveRouters.push(e)}static registerLoadRouter(e){R.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return R.getHandlers(e,"save")}static getLoadHandlers(e,t){return R.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?R.getInstance().loadRouters:R.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const A=e=>R.registerSaveRouter(e),D=e=>R.registerLoadRouter(e),F=e=>R.getSaveHandlers(e),_=(e,t)=>R.getLoadHandlers(e,t),O="tensorflowjs",L="models_store",z="model_info_store";function B(){if(!(0,d.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function M(e){const t=e.result;t.createObjectStore(L,{keyPath:"modelPath"}),t.createObjectStore(z,{keyPath:"modelPath"})}class U{constructor(e){if(this.indexedDB=B(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(O,1);s.onupgradeneeded=()=>M(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(L,"readonly"),s=t.objectStore(L).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=N(t),a=r.transaction(z,"readwrite");let i=a.objectStore(z);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(L,"readwrite");const o=l.objectStore(L).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(z);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}U.URL_SCHEME="indexeddb://";const P=e=>{return(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(U.URL_SCHEME)?(t=e.slice(U.URL_SCHEME.length),new U(t)):null;var t};R.registerSaveRouter(P),R.registerLoadRouter(P);class W{constructor(){this.indexedDB=B()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(O,1);n.onupgradeneeded=()=>M(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(z,"readonly"),a=r.objectStore(z).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(U.URL_SCHEME)?t.slice(U.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(O,1);s.onupgradeneeded=()=>M(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(z,"readwrite"),i=a.objectStore(z),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(L,"readwrite");const s=l.objectStore(L).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const V="/",G="tensorflowjs_models",H="info",j="model_topology",X="weight_specs",q="weight_data",K="model_metadata";function Y(e){return{info:[G,e,H].join(V),topology:[G,e,j].join(V),weightSpecs:[G,e,X].join(V),weightData:[G,e,q].join(V),modelMetadata:[G,e,K].join(V)}}function J(e){const t=e.split(V);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(V)}class Z{constructor(e){if(!(0,d.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Y(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=N(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(I)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(I){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Z.URL_SCHEME="localstorage://";const Q=e=>{return(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Z.URL_SCHEME)?(t=e.slice(Z.URL_SCHEME.length),new Z(t)):null;var t};R.registerSaveRouter(Q),R.registerLoadRouter(Q);class ee{constructor(){(0,x.hu)((0,d.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,x.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=G+V,n=V+H;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[J(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=Y(e=(t=e).startsWith(Z.URL_SCHEME)?t.slice(Z.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),s}}const te="://";class ne{constructor(){this.managers={}}static getInstance(){return null==ne.instance&&(ne.instance=new ne),ne.instance}static registerManager(e,t){(0,x.hu)(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(te)&&(e=e.slice(0,e.indexOf(te))),(0,x.hu)(e.length>0,(()=>"scheme must not be an empty string."));const n=ne.getInstance();(0,x.hu)(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function se(e){if(-1===e.indexOf(te))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${ne.getSchemes().join(",")}`);return{scheme:e.split(te)[0],path:e.split(te)[1]}}async function re(e,t,n=!1){(0,x.hu)(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=R.getLoadHandlers(e);(0,x.hu)(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),(0,x.hu)(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=R.getSaveHandlers(t);(0,x.hu)(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),(0,x.hu)(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=se(e).scheme,l=se(e).path,u=o===se(e).scheme,c=await r.load();n&&u&&await ne.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await ne.getManager(o).removeModel(l),h.modelArtifactsInfo}async function ae(){const e=ne.getSchemes(),t={};for(const n of e){const e=await ne.getManager(n).listModels();for(const s in e)t[n+te+s]=e[s]}return t}async function ie(e){const t=se(e);return ne.getManager(t.scheme).removeModel(t.path)}async function oe(e,t){return re(e,t,!1)}async function le(e,t){return re(e,t,!0)}class ue{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if((0,d.OB)().get("IS_BROWSER")){(0,d.OB)().setPlatform("browser",new ue);try{ne.registerManager(Z.URL_SCHEME,new ee)}catch(e){}try{ne.registerManager(U.URL_SCHEME,new W)}catch(e){}}let ce;(0,d.OB)().get("IS_NODE")&&(0,d.OB)().setPlatform("node",new class{constructor(){this.util=n(6843),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=(0,d.OB)().global.fetch?(0,d.OB)().global.fetch(e,t):(null==ce&&(ce=n(327)),ce(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});var he=n(1313);function pe(e,t="float32",n){return t=t||"float32",x.Mu(e),new he.YD(e,t,n)}var de=n(5875),fe=n(1107);(0,c.wv)();const me={buffer:pe,cast:de.p,clone:fe.d,print:function(e,t=!1){console.log(e.toString(t))}};function ge(e){return new Promise((e=>setTimeout(e))).then(e)}(0,he.Vp)(me);class be{constructor(e){if(!(0,d.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(be.URL_SCHEME)&&(e=e.slice(be.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer);const r=window.URL.createObjectURL(new Blob([JSON.stringify(s)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=r,await ge((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await ge((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:N(e)}}}}be.URL_SCHEME="downloads://";class ye{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,s)=>{const r=new FileReader;r.onload=r=>{const a=JSON.parse(r.target.result),i=a.modelTopology;if(null==i)return void s(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void s(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(e){return void s(e)}const u=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),u.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const s=t.target.result,r=c.indexOf(e);if(h[r]=s,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:u,weightData:S(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(l[e])}))}))},r.onerror=t=>s(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),r.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],s=t.map((e=>E(e.name))),r={};for(const a of e)a.paths.forEach((e=>{const a=E(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===s.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=t[s.indexOf(a)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return r}}function xe(e){return new ye(e)}function we(e,t,n,s){!function(e){(0,x.hu)(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){(0,x.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),(0,x.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),(0,x.hu)(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function ve(e,t){null==t&&(t={});const n=null==t.fetchFunc?(0,d.OB)().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await we(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await we(r,t.onProgress,.5,1)}async function ke(e,t="",n,s){return Ce((e=>ve(e,{requestInit:s})))(e,t,n)}function Ce(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=w[l]*x.NA(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=k(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}R.registerSaveRouter((e=>(0,d.OB)().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(be.URL_SCHEME)?function(e="model"){return new be(e)}(e.slice(be.URL_SCHEME.length)):null));class Ie{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?((0,x.hu)("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=(0,d.OB)().platform.fetch,(0,x.hu)(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&(0,x.hu)(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],s={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(s)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:N(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest,r=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=s){const e=await this.loadWeights(s);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:r,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const p=t.modelInitializer;return p&&(h.modelInitializer=p),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,S(await ve(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function $e(e){return null!=e.match(Ie.URL_SCHEME_REGEX)}Ie.URL_SCHEME_REGEX=/^https?:\/\//;const Se=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>$e(e))):$e(e),n)return Ee(e,t)}return null};function Ee(e,t){return new Ie(e,t)}function Ne(e,t){return Ee(e,t)}R.registerSaveRouter(Se),R.registerLoadRouter(Se);class Te{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Re{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Ae(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Te(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Te({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Te({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function De(e){return new Re(e)}var Fe=n(1269);class _e{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Oe{constructor(){this.classNameMap={}}static getMap(){return null==Oe.instance&&(Oe.instance=new Oe),Oe.instance}static register(e){Oe.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Le(e){(0,x.hu)(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),(0,x.hu)("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),(0,x.hu)(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Oe.register(e)}var ze=n(9201),Be=n(4959);function Me(){return c.BV}function Ue(){return c.BV.memory()}function Pe(e,t){return c.BV.tidy(e,t)}function We(e){(0,ze.getTensorsInContainer)(e).forEach((e=>e.dispose()))}function Ve(e){return c.BV.keep(e)}function Ge(e,t,n=1){return c.BV.registerBackend(e,t,n)}function He(){return c.BV.backend}(0,he.FZ)((function(e){(0,d.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}));var je=n(3184),Xe=n(2502);class qe extends _e{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return We(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return(0,je.pn)(e,t)}dispose(){null!=this.iterations_&&We(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:(0,Xe.i)(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qe,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});var Ke=n(7139),Ye=n(6720),Je=n(7571),Ze=n(7590),Qe=n(6298),et=n(1523),tt=n(9385),nt=n(5202),st=n(128),rt=n(2673);const at=(0,st.op)({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=(0,g._1)(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=(0,rt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x.hu(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),x.hu("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&x.hu(x.GN(s),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let p=c.BV.runKernel(nt._k,u,h);return p=(0,de.p)(p,o.dtype),l?(0,rt.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var it=n(8325);const ot=(0,st.op)({batchNorm2d_:function(e,t,n,s,r,a){const i=(0,g._1)(e,"x","batchNorm"),o=(0,g._1)(t,"mean","batchNorm"),l=(0,g._1)(n,"variance","batchNorm");let u,c;return null!=r&&(u=(0,g._1)(r,"scale","batchNorm")),null!=s&&(c=(0,g._1)(s,"offset","batchNorm")),x.hu(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),x.hu(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),x.hu(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&x.hu(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&x.hu(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),(0,it.t)(i,o,l,c,u,a)}}),lt=(0,st.op)({batchNorm3d_:function(e,t,n,s,r,a){const i=(0,g._1)(e,"x","batchNorm"),o=(0,g._1)(t,"mean","batchNorm"),l=(0,g._1)(n,"variance","batchNorm");let u,c;return null!=r&&(u=(0,g._1)(r,"scale","batchNorm")),null!=s&&(c=(0,g._1)(s,"offset","batchNorm")),x.hu(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),x.hu(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),x.hu(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&x.hu(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&x.hu(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),(0,it.t)(i,o,l,c,u,a)}}),ut=(0,st.op)({batchNorm4d_:function(e,t,n,s,r,a){const i=(0,g._1)(e,"x","batchNorm"),o=(0,g._1)(t,"mean","batchNorm"),l=(0,g._1)(n,"variance","batchNorm");let u,c;return null!=r&&(u=(0,g._1)(r,"scale","batchNorm")),null!=s&&(c=(0,g._1)(s,"offset","batchNorm")),x.hu(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),x.hu(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),x.hu(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&x.hu(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&x.hu(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),(0,it.t)(i,o,l,c,u,a)}});var ct=n(3092),ht=n(9134);const pt=(0,st.op)({concat1d_:function(e){return(0,ht.z)(e,0)}}),dt=(0,st.op)({concat2d_:function(e,t){return(0,ht.z)(e,t)}}),ft=(0,st.op)({concat3d_:function(e,t){return(0,ht.z)(e,t)}}),mt=(0,st.op)({concat4d_:function(e,t){return(0,ht.z)(e,t)}});var gt=n(6409),bt=n(9399),yt=n(7905),xt=n(1129);const wt=(0,st.op)({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=(0,g._1)(e,"x","conv3d"),o=(0,g._1)(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=(0,rt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x.hu(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),x.hu(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),x.hu(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),x.hu((0,xt.jT)(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),x.hu("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const h={x:l,filter:o},p={strides:n,pad:s,dataFormat:r,dilations:a},d=c.BV.runKernel(nt.x1,h,p);return u?(0,rt.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}});var vt=n(2833);const kt=(0,st.op)({conv3dTranspose_:function(e,t,n,s,r){const a=(0,g._1)(e,"x","conv3dTranspose"),i=(0,g._1)(t,"filter","conv3dTranspose");return(0,vt._)(n,a,i,s,r)}});var Ct=n(6581),It=n(2639),$t=n(9673),St=n(1966),Et=n(1064),Nt=n(3239);const Tt=(0,st.op)({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=pe([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=(0,rt.X)(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return(0,Nt.G)((0,Et.d)(i,0),[n[0],1,1]);if(2===n.length)return(0,Nt.G)((0,Et.d)((0,Et.d)(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,Nt.G)((0,Et.d)((0,Et.d)((0,Et.d)(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Rt(e,t,n){const s={shape:e,value:t,dtype:n};return c.BV.runKernel(nt.de,{},s)}var At=n(7184),Dt=n(5262),Ft=n(1694),_t=n(6731),Ot=n(7397),Lt=n(3102),zt=n(2929),Bt=n(495),Mt=n(4991),Ut=n(4433);const Pt=(0,st.op)({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=(0,g._1)(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=(0,rt.X)(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),x.hu(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),x.hu("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=r&&x.hu(x.GN(s),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${r} but got pad ${s}.`));const u={x:o},h={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},p=c.BV.runKernel(nt.OA,u,h);return l?(0,rt.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Wt=n(3171),Vt=n(4854),Gt=n(6038),Ht=n(7511),jt=n(7704),Xt=n(6966),qt=n(6885);const Kt=(0,st.op)({moments_:function(e,t=null,n=!1){e=(0,g._1)(e,"x","moments");const s=(0,x.EC)(t,e.shape),r=(0,Vt.J)(e,s,n);let a=r.shape;n||(a=(0,jt.rv)(r.shape,s));const i=(0,Xt.h)((0,qt.l)((0,de.p)(e,"float32"),(0,rt.X)(r,a)));return{mean:r,variance:(0,Vt.J)(i,s,n)}}});var Yt=n(2805),Jt=n(7211),Zt=n(1576),Qt=n(7910),en=n(8074),tn=n(9622),nn=n(7039),sn=n(1224),rn=n(521);class an{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=rn.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class on{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=rn.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const ln=(0,st.op)({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new an(t,n,s,!1,r),i=pe(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),un=(0,st.op)({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=pe(e,s),i=new on(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});var cn=n(8536),hn=n(4330),pn=n(2899),dn=n(1438),fn=n(5808),mn=n(2565);const gn=(0,st.op)({slice1d_:function(e,t,n){const s=(0,g._1)(e,"x","slice1d");return x.hu(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),(0,mn.t)(s,[t],[n])}}),bn=(0,st.op)({slice2d_:function(e,t,n){const s=(0,g._1)(e,"x","slice2d");return x.hu(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),(0,mn.t)(s,t,n)}}),yn=(0,st.op)({slice3d_:function(e,t,n){const s=(0,g._1)(e,"x","slice3d");return x.hu(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),(0,mn.t)(s,t,n)}}),xn=(0,st.op)({slice4d_:function(e,t,n){const s=(0,g._1)(e,"x","slice4d");return x.hu(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),(0,mn.t)(s,t,n)}});var wn=n(5301),vn=n(9876),kn=n(1381),Cn=n(7346),In=n(5920),$n=n(2235),Sn=n(4786),En=n(1871);function Nn(e,t){(0,x.Cq)(e);const n=(0,g.C)(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,b.H)(e,null,n,t)}function Tn(e,t,n){if((0,x.Cq)(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=(0,g.C)(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,b.H)(e,t,s,n)}function Rn(e,t,n){if((0,x.Cq)(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=(0,g.C)(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,b.H)(e,t,s,n)}function An(e,t,n){if((0,x.Cq)(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=(0,g.C)(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return(0,b.H)(e,t,s,n)}const Dn=(0,st.op)({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new an(t,n,s,!0,r),i=pe(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}});var Fn=n(7690);function _n(e,t=!0,n,s){return c.BV.makeVariable(e,t,n,s)}var On=n(1203),Ln=n(1434),zn=n(9635),Bn=n(6336);const Mn=(0,st.op)({dropout_:function(e,t,n,s){const r=(0,g._1)(e,"x","dropout");if(x.hu("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),x.hu(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof he.es?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(x.cO(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=(0,It.h)((0,At.G)((0,Je.I)(un(a,0,1,"float32",s),i)),i);return(0,Yt.d)(r,o)}});var Un=n(1411),Pn=n(6991),Wn=n(8923),Vn=n(8117),Gn=n(2011),Hn=n(1885),jn=n(6858),Xn=n(9902),qn=n(3863);function Kn(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return(0,Yt.d)(e,(0,qn.N)(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Yn(e,t){let n=t;const s=Gn.RR(e.shape,t.shape);return s.length>0&&(n=(0,Sn.S)(n,s)),(0,rt.X)(n,e.shape)}function Jn(e,t,n,s){if("linear"===t)return e;if("relu"===t)return(0,cn.U)(e);if("elu"===t)return(0,$t.p)(e);if("relu6"===t)return(0,Xn.b)(e);if("prelu"===t)return(0,sn.A)(e,n);if("leakyrelu"===t)return(0,Ot.h)(e,s);if("sigmoid"===t)return(0,fn.X)(e);throw new Error(`Unknown fused activation ${t}.`)}const Zn=(e,t)=>!(e>0)||"linear"===t,Qn=(0,st.op)({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(l=l||"linear",!1===Zn(c.BV.state.gradientDepth,l)){let c=(0,bt.T)(e,t,n,s,r,a,i);return null!=o&&(c=(0,Je.I)(c,o)),Jn(c,l,u,h)}const p=(0,g._1)(e,"x","conv2d"),d=(0,g._1)(t,"filter","conv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,rt.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),x.hu(4===f.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${f.rank}.`)),x.hu(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&x.hu(x.GN(s),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`)),x.hu(f.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${f.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),x.hu(xt.jT(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),x.hu("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const b=xt.Ix(f.shape,d.shape,n,a,s,i);let y,w;null!=o&&(y=(0,g._1)(o,"bias","fused conv2d"),[y]=(0,ze.makeTypesMatch)(y,p),Gn.$N(b.outShape,y.shape)),null!=u&&(w=(0,g._1)(u,"prelu weights","fused conv2d"));const v=(e,t)=>{const[r,i,o,u]=t,c=Kn(e,o,l);x.hu(xt.I0(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[(0,jn._)(i.shape,c,r,n,s),(0,Hn.p)(i,c,r.shape,n,s)];if(null!=u){const e=Yn(u,c);h.push(e)}return h},k={x:f,filter:d,bias:y,preluActivationWeights:w},C={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?(0,je.cb)(((e,t,n)=>{let s=c.BV.runKernel(nt._V,k,C);return n([t,e,s]),m&&(s=(0,rt.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}))(f,d):(0,je.cb)(((e,t,n,s)=>{let r=c.BV.runKernel(nt._V,k,C);return s([t,e,r,n]),m&&(r=(0,rt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}))(f,d,y)}});var es=n(2806),ts=n(5039);const ns=(0,st.op)({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:h}){if(!1===Zn(c.BV.state.gradientDepth,l)){let c=(0,Ct.B)(e,t,n,s,r,a,i);return null!=o&&(c=(0,Je.I)(c,o)),Jn(c,l,u,h)}const p=(0,g._1)(e,"x","depthwiseConv2d"),d=(0,g._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,rt.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),x.hu(4===f.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),x.hu(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),x.hu(f.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),x.hu(xt.jT(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&x.hu(x.GN(s),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${s}.`));const b=xt.Ix(f.shape,d.shape,n,a,s,i,!0);let y,w;null!=o&&(y=(0,g._1)(o,"bias","fused conv2d"),[y]=(0,ze.makeTypesMatch)(y,p),Gn.$N(b.outShape,y.shape)),null!=u&&(w=(0,g._1)(u,"prelu weights","fused depthwiseConv2d"));const v=(e,t)=>{x.hu(xt.I0(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=Kn(e,u,l),p=(0,ts.v)(o.shape,h,r,n,s,a,i),d=(0,es.z)(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Yn(y,h)]:[p,d]},k={x:f,filter:d,bias:y,preluActivationWeights:w},C={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:h};return null==o?(0,je.cb)(((e,t,n)=>{let s=c.BV.runKernel(nt.lu,k,C);return n([t,e,s]),m&&(s=(0,rt.X)(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:v}}))(f,d):(0,je.cb)(((e,t,n,s)=>{let r=c.BV.runKernel(nt.lu,k,C);return s([t,e,r,n]),m&&(r=(0,rt.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:v}}))(f,d,y)}});var ss=n(8249);const rs=(0,st.op)({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Zn(c.BV.state.gradientDepth,a)){let l=(0,ss.O)(e,t,n,s);return null!=r&&(l=(0,Je.I)(l,r)),Jn(l,a,i,o)}let l=(0,g._1)(e,"a","fused matMul"),u=(0,g._1)(t,"b","fused matMul");[l,u]=(0,ze.makeTypesMatch)(l,u);const h=n?l.shape[l.rank-2]:l.shape[l.rank-1],p=s?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],f=s?u.shape[u.rank-2]:u.shape[u.rank-1],m=l.shape.slice(0,-2),b=u.shape.slice(0,-2),y=x.NA(m),w=x.NA(b);x.hu(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),x.hu(x.cO(m,b),(()=>`Error in fused matMul: outer dimensions (${m}) and (${b}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),x.hu(h===p,(()=>`Error in fused matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const v=l.shape.slice(0,-2).concat([d,f]),k=n?(0,rt.X)(l,[y,h,d]):(0,rt.X)(l,[y,d,h]),C=s?(0,rt.X)(u,[w,f,p]):(0,rt.X)(u,[w,p,f]);let I,$;null!=r&&(I=(0,g._1)(r,"bias","fused matMul"),[I]=(0,ze.makeTypesMatch)(I,l),Gn.$N(v,I.shape)),null!=i&&($=(0,g._1)(i,"prelu weights","fused matMul"));const S=(e,t)=>{const[i,o,l,u]=t,c=Kn((0,rt.X)(e,l.shape),l,a);let h,p;return n||s?!n&&s?(h=(0,ss.O)(c,o,!1,!1),p=(0,ss.O)(c,i,!0,!1)):n&&!s?(h=(0,ss.O)(o,c,!1,!0),p=(0,ss.O)(i,c,!1,!1)):(h=(0,ss.O)(o,c,!0,!0),p=(0,ss.O)(c,i,!0,!0)):(h=(0,ss.O)(c,o,!1,!0),p=(0,ss.O)(i,c,!0,!1)),null!=r?[h,p,Yn(u,c)]:[h,p]},E={a:k,b:C,bias:I,preluActivationWeights:$},N={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};return null==r?(0,je.cb)(((e,t,n)=>{const s=c.BV.runKernel(nt.us,E,N);return n([e,t,s]),{value:(0,rt.X)(s,v),gradFunc:S}}))(k,C):(0,je.cb)(((e,t,n,s)=>{const r=c.BV.runKernel(nt.us,E,N);return s([e,t,r,n]),{value:(0,rt.X)(r,v),gradFunc:S}}))(k,C,I)}});function as(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Nn(r,"float32")}(0,st.op)({hammingWindow_:function(e){return as(e,.54,.46)}});const is=(0,st.op)({hannWindow_:function(e){return as(e,.5,.5)}}),os=(0,st.op)({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push((0,mn.t)(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=(0,ht.z)([(0,mn.t)(e,a,t-s),Rt([s],r)]);i.push(o),a+=n}return 0===i.length?Tn([],[0,t]):(0,rt.X)((0,ht.z)(i),[i.length,t])}});function ls(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),x.hu(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),x.hu(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x.hu(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x.hu(1===t.rank,(()=>"scores must be a 1D tensor")),x.hu(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),x.hu(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}function us(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||cs)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function cs(e,t){return e>t?1:e<t?-1:0}function hs(e,t,n,s,r){return fs(e,t,n,s,r,0)}function ps(e,t,n,s,r,a){return fs(e,t,n,s,r,0,!1,a,!0)}function ds(e,t,n,s,r,a){return fs(e,t,n,s,r,a,!0)}function fs(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(bs);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=ms(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*gs(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>r&&us(u,t,bs))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function ms(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,p),x=Math.max(b-m,0)*Math.max(y-g,0);return x/(d+f-x)}function gs(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function bs(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}(0,st.op)({stft_:function(e,t,n,s,r=is){var a;null==s&&(a=t,s=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=os(e,t,n),o=(0,Yt.d)(i,r(t));return(0,Un.Q)(o,s)}}),(0,st.op)({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=(0,g._1)(e,"image","cropAndResize"),o=(0,g._1)(t,"boxes","cropAndResize","float32"),l=(0,g._1)(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x.hu(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),x.hu(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x.hu(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x.hu(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),x.hu(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),x.hu("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const h={image:i,boxes:o,boxInd:l},p={method:r,extrapolationValue:a,cropSize:s};return c.BV.runKernel(nt.Vc,h,p)}}),(0,st.op)({flipLeftRight_:function(e){const t=(0,g._1)(e,"image","flipLeftRight","float32");x.hu(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return c.BV.runKernel(nt.Uy,n,{})}}),(0,st.op)({rotateWithOffset_:function(e,t,n=0,s=.5){const r=(0,g._1)(e,"image","rotateWithOffset","float32");x.hu(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return c.BV.runKernel(nt.b9,a,i)}}),(0,st.op)({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=(0,g._1)(e,"boxes","nonMaxSuppression"),i=(0,g._1)(t,"scores","nonMaxSuppression"),o=ls(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return c.BV.runKernel(nt.uv,{boxes:a,scores:i},l)}}),(0,st.op)({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=(0,g._1)(e,"boxes","nonMaxSuppression"),o=(0,g._1)(t,"scores","nonMaxSuppression"),l=ls(i,o,n,s,r,a),u={boxes:i,scores:o},h={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},p=c.BV.runKernel(nt.W0,u,h);return{selectedIndices:p[0],selectedScores:p[1]}}}),(0,st.op)({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=(0,g._1)(e,"boxes","nonMaxSuppression"),o=(0,g._1)(t,"scores","nonMaxSuppression"),l=ls(i,o,n,s,r,null),u={boxes:i,scores:o},h={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},p=c.BV.runKernel(nt.cy,u,h);return{selectedIndices:p[0],validOutputs:p[1]}}});var ys=n(4284),xs=n(739);const ws=(0,st.op)({bincount_:function(e,t,n){const s=(0,g._1)(e,"x","bincount"),r=(0,g._1)(t,"weights","bincount");x.hu("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),x.hu(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x.hu(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return c.BV.runKernel(nt.zv,a,i)}});var vs=n(5573),ks=n(4520);function Cs(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return c.BV.runKernel(nt.e6,{},r)}(0,st.op)({threshold_:function(e,t="binary",n=!1,s=.5){const r=(0,g._1)(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=(0,Yt.d)(Nn([s]),255);if(x.hu(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),x.hu(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),x.hu("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),x.hu("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=(0,kn.V)(r,[1,1,1],-1);const e=(0,Yt.d)(i,.2989),t=(0,Yt.d)(o,.587),n=(0,Yt.d)(l,.114);u=(0,Je.I)((0,Je.I)(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=Nn([-1]),u=Nn([0]),c=Nn([0]);for(let h=0;h<e.size-1;h++){n=(0,mn.t)(e,0,h+1),s=(0,mn.t)(e,h+1),i=(0,It.h)((0,Sn.S)(n),t),o=(0,It.h)((0,Sn.S)(s),t);const p=(0,Sn.S)((0,Yt.d)(n,Cs(0,n.size)));r=(0,It.h)(p,(0,Sn.S)(n));const d=Rt(s.shape,n.size),f=(0,Je.I)(Cs(0,s.size),d),m=(0,Yt.d)(s,f);a=(0,It.h)((0,Sn.S)(m),(0,Sn.S)(s));const g=(0,qt.l)(r,a),b=(0,qt.l)(r,a),y=(0,Yt.d)(i,o);c=(0,Yt.d)((0,Yt.d)(y,g),b);const x=(0,Ft.p)(c,u);u=(0,On.a)(x,c,u),l=(0,On.a)(x,Nn([h]),l)}return l}(ws((0,de.p)((0,ks.N)(u),"int32"),y([]),256),a));const h=n?(0,vs.z)(u,c):(0,Ft.p)(u,c);return(0,de.p)((0,Yt.d)(h,255),"int32")}}),(0,st.op)({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=(0,g._1)(e,"image","transform","float32"),o=(0,g._1)(t,"transforms","transform","float32");x.hu(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),x.hu(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x.hu(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return c.BV.runKernel(nt.wx,l,u)}});const Is=(0,st.op)({bandPart_:function(e,t,n){(0,x.hu)(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),(0,x.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=(0,g._1)(e,"a","bandPart");(0,x.hu)(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=(0,rt.X)(Cs(0,a,1,"int32"),[-1,1]),l=Cs(0,i,1,"int32"),u=(0,qt.l)(o,l),c=(0,Bt.H)((0,vs.z)(u,(0,Xe.i)(+t,"int32")),(0,_t.b)(u,(0,Xe.i)(-n,"int32"))),h=(0,Ln.l)([a,i],s.dtype);return(0,rt.X)((0,$n.k)((0,Fn.H)((0,rt.X)(s,[-1,a,i])).map((e=>(0,On.a)(c,e,h)))),r)}});var $s=n(1458);const Ss=(0,st.op)({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,(0,x.hu)(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)(0,x.hu)(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=(0,kn.V)(e,e.shape[0],0).map((e=>(0,In.L)(e,[0])));(0,x.hu)(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(c.BV.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=(0,Yt.d)((0,Sn.S)((0,Yt.d)(n[s],e)),n[s]);e=(0,qt.l)(e,t)}return(0,It.h)(e,(0,$s.K)(e,"euclidean"))})));return t?(0,$n.k)(n,0):n}});function Es(e,t=!1){return c.BV.tidy((()=>{(0,x.hu)(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=Tt(n),a=(0,fe.d)(e);const i=Tn([[1]],[1,1]);let o=(0,fe.d)(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=c.BV.tidy((()=>{const t=(0,mn.t)(a,[e,e],[n-e,1]),l=(0,$s.K)(t),u=(0,mn.t)(a,[e,e],[1,1]),c=(0,On.a)((0,Ft.p)(u,0),Tn([[-1]]),Tn([[1]])),h=(0,qt.l)(u,(0,Yt.d)(c,l)),p=(0,It.h)(t,h);o=1===p.shape[0]?(0,fe.d)(i):(0,ht.z)([i,(0,mn.t)(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=(0,Jt.W)((0,It.h)((0,ss.O)(c,h),l)),f=(0,mn.t)(a,[e,0],[n-e,s]),m=(0,Yt.d)(d,o),g=(0,Bn.p)(o);if(0===e)a=(0,qt.l)(f,(0,ss.O)(m,(0,ss.O)(g,f)));else{const t=(0,qt.l)(f,(0,ss.O)(m,(0,ss.O)(g,f)));a=(0,ht.z)([(0,mn.t)(a,[0,0],[e,s]),t],0)}const b=(0,Bn.p)(m),y=(0,mn.t)(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=(0,qt.l)(y,(0,ss.O)((0,ss.O)(y,o),b));else{const t=(0,qt.l)(y,(0,ss.O)((0,ss.O)(y,o),b));r=(0,ht.z)([(0,mn.t)(r,[0,0],[n,e]),t],1)}return[o,a,r]})),We([t,l,u])}return!t&&n>s&&(r=(0,mn.t)(r,[0,0],[n,s]),a=(0,mn.t)(a,[0,0],[s,s])),[r,a]}))}const Ns=(0,st.op)({qr_:function(e,t=!1){if((0,x.hu)(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Es(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=(0,Fn.H)((0,rt.X)(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=Es(e,t);r.push(n),a.push(s)})),[(0,rt.X)((0,$n.k)(r,0),e.shape),(0,rt.X)((0,$n.k)(a,0),e.shape)]}}});var Ts;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Ts||(Ts={}));const Rs=(0,st.op)({computeWeightedLoss_:function(e,t,n=Ts.SUM_BY_NONZERO_WEIGHTS){const s=(0,g._1)(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=(0,g._1)(t,"weights","computeWeightedLoss"));const a=null==r?s:(0,Yt.d)(s,r);if(n===Ts.NONE)return a;if(n===Ts.SUM)return(0,Sn.S)(a);if(n===Ts.MEAN){if(null==r)return(0,Vt.J)(a);{const e=s.size/r.size,t=(0,It.h)((0,Sn.S)(a),(0,Sn.S)(r));return e>1?(0,It.h)(t,(0,Xe.i)(e)):t}}if(n===Ts.SUM_BY_NONZERO_WEIGHTS){if(null==r)return(0,It.h)((0,Sn.S)(a),(0,Xe.i)(s.size));{const e=(0,Yt.d)(r,(0,en.i)(s.shape)),t=(0,de.p)((0,Sn.S)((0,Zt.Q)(e,(0,Xe.i)(0))),"float32");return(0,It.h)((0,Sn.S)(a),t)}}throw Error(`Unknown reduction: ${n}`)}});(0,st.op)({absoluteDifference_:function(e,t,n,s=Ts.SUM_BY_NONZERO_WEIGHTS){const r=(0,g._1)(e,"labels","absoluteDifference"),a=(0,g._1)(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=(0,g._1)(n,"weights","absoluteDifference")),(0,x.k5)(r.shape,a.shape,"Error in absoluteDifference: ");const o=(0,Ye.W)((0,qt.l)(r,a));return Rs(o,i,s)}}),(0,st.op)({cosineDistance_:function(e,t,n,s,r=Ts.SUM_BY_NONZERO_WEIGHTS){const a=(0,g._1)(e,"labels","cosineDistance"),i=(0,g._1)(t,"predictions","cosineDistance");let o=null;null!=s&&(o=(0,g._1)(s,"weights","cosineDistance")),(0,x.k5)(a.shape,i.shape,"Error in cosineDistance: ");const l=(0,Xe.i)(1),u=(0,qt.l)(l,(0,Sn.S)((0,Yt.d)(a,i),n,!0));return Rs(u,o,r)}}),(0,st.op)({hingeLoss_:function(e,t,n,s=Ts.SUM_BY_NONZERO_WEIGHTS){let r=(0,g._1)(e,"labels","hingeLoss");const a=(0,g._1)(t,"predictions","hingeLoss");let i=null;null!=n&&(i=(0,g._1)(n,"weights","hingeLoss")),(0,x.k5)(r.shape,a.shape,"Error in hingeLoss: ");const o=(0,Xe.i)(1);r=(0,qt.l)((0,Yt.d)((0,Xe.i)(2),r),o);const l=(0,cn.U)((0,qt.l)(o,(0,Yt.d)(r,a)));return Rs(l,i,s)}}),(0,st.op)({huberLoss_:function(e,t,n,s=1,r=Ts.SUM_BY_NONZERO_WEIGHTS){const a=(0,g._1)(e,"labels","huberLoss"),i=(0,g._1)(t,"predictions","huberLoss");let o=null;null!=n&&(o=(0,g._1)(n,"weights","huberLoss")),(0,x.k5)(a.shape,i.shape,"Error in huberLoss: ");const l=(0,Xe.i)(s),u=(0,Ye.W)((0,qt.l)(i,a)),c=(0,Ht.L)(u,l),h=(0,qt.l)(u,c),p=(0,Je.I)((0,Yt.d)((0,Xe.i)(.5),(0,Xt.h)(c)),(0,Yt.d)(l,h));return Rs(p,o,r)}}),(0,st.op)({logLoss_:function(e,t,n,s=1e-7,r=Ts.SUM_BY_NONZERO_WEIGHTS){const a=(0,g._1)(e,"labels","logLoss"),i=(0,g._1)(t,"predictions","logLoss");let o=null;null!=n&&(o=(0,g._1)(n,"weights","logLoss")),(0,x.k5)(a.shape,i.shape,"Error in logLoss: ");const l=(0,Xe.i)(1),u=(0,Xe.i)(s),c=(0,Jt.W)((0,Yt.d)(a,(0,Lt.c)((0,Je.I)(i,u)))),h=(0,Yt.d)((0,qt.l)(l,a),(0,Lt.c)((0,Je.I)((0,qt.l)(l,i),u))),p=(0,qt.l)(c,h);return Rs(p,o,r)}});var As=n(8774);(0,st.op)({meanSquaredError_:function(e,t,n,s=Ts.SUM_BY_NONZERO_WEIGHTS){const r=(0,g._1)(e,"labels","meanSquaredError"),a=(0,g._1)(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=(0,g._1)(n,"weights","meanSquaredError")),(0,x.k5)(r.shape,a.shape,"Error in meanSquaredError: ");const o=(0,As.$)(r,a);return Rs(o,i,s)}});var Ds=n(8575),Fs=n(6883);(0,st.op)({sigmoidCrossEntropy_:function(e,t,n,s=0,r=Ts.SUM_BY_NONZERO_WEIGHTS){let a=(0,g._1)(e,"multiClassLabels","sigmoidCrossEntropy");const i=(0,g._1)(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=(0,g._1)(n,"weights","sigmoidCrossEntropy")),(0,x.k5)(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=(0,Xe.i)(s),t=(0,Xe.i)(1),n=(0,Xe.i)(.5);a=(0,Je.I)((0,Yt.d)(a,(0,qt.l)(t,e)),(0,Yt.d)(n,e))}const l=function(e,t){const n=(0,g._1)(e,"labels","sigmoidCrossEntropyWithLogits"),s=(0,g._1)(t,"logits","sigmoidCrossEntropyWithLogits");(0,x.k5)(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=(0,cn.U)(s),a=(0,Yt.d)(s,n),i=(0,Fs.K)((0,Ds.Q)((0,Jt.W)((0,Ye.W)(s))));return(0,Je.I)((0,qt.l)(r,a),i)}(a,i);return Rs(l,o,r)}});var _s=n(2425);(0,st.op)({softmaxCrossEntropy_:function(e,t,n,s=0,r=Ts.SUM_BY_NONZERO_WEIGHTS){let a=(0,g._1)(e,"onehotLabels","softmaxCrossEntropy");const i=(0,g._1)(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=(0,g._1)(n,"weights","softmaxCrossEntropy")),(0,x.k5)(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=(0,Xe.i)(s),t=(0,Xe.i)(1),n=(0,Xe.i)(a.shape[1]);a=(0,Je.I)((0,Yt.d)(a,(0,qt.l)(t,e)),(0,It.h)(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return(0,je.cb)(((e,t,s)=>{const r=(0,_s.l)(t,[n],!0),a=(0,qt.l)((0,de.p)(t,"float32"),r);s([e,a]);const i=(0,Jt.W)((0,Yt.d)(a,e));return{value:(0,Sn.S)(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=(0,jt.rv)(e.shape,[n]);return[(0,Yt.d)((0,rt.X)(e,a),(0,qt.l)((0,de.p)(s,"float32"),(0,Ds.Q)(r))),(0,Yt.d)((0,rt.X)(e,a),(0,qt.l)((0,Ds.Q)(r),(0,de.p)(s,"float32")))]}}}))(e,t)}(a,i);return Rs(l,o,r)}}),(0,st.op)({sparseFillEmptyRows_:function(e,t,n,s){const r=(0,g._1)(e,"indices","sparseFillEmptyRows"),a=(0,g._1)(t,"values","sparseFillEmptyRows"),i=(0,g._1)(n,"denseShape","sparseFillEmptyRows"),o=(0,g._1)(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=c.BV.runKernel(nt.O3,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),(0,st.op)({sparseReshape_:function(e,t,n){const s=(0,g._1)(e,"inputIndices","sparseReshape"),r=(0,g._1)(t,"inputShape","sparseReshape"),a=(0,g._1)(n,"newShape","sparseReshape");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=c.BV.runKernel(nt.nh,i);return{outputIndices:o[0],outputShape:o[1]}}}),Pn.k,Wn.S,Un.Q,Vn.w,xs.j,ys.I;const Os={bandPart:Is,gramSchmidt:Ss,qr:Ns};class Ls extends qe{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Pe((()=>(0,zn.P)(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Pe((()=>(0,zn.P)(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Pe((()=>{const e=(0,Je.I)((0,Yt.d)(a,this.rho),(0,Yt.d)((0,Xt.h)(r),1-this.rho)),t=(0,Yt.d)((0,It.h)((0,Cn._)((0,Je.I)(i,this.epsilon)),(0,Cn._)((0,Je.I)(a,this.epsilon))),r),n=(0,Je.I)((0,Yt.d)(i,this.rho),(0,Yt.d)((0,Xt.h)(t),1-this.rho));a.assign(e),i.assign(n);const o=(0,Je.I)((0,Yt.d)(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(We(this.accumulatedGrads.map((e=>e.variable))),We(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ls.className="Adadelta",Le(Ls);class zs extends qe{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Pe((()=>Rt(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;Pe((()=>{const e=(0,Je.I)(a,(0,Xt.h)(r));a.assign(e);const t=(0,Je.I)((0,Yt.d)((0,It.h)(r,(0,Cn._)((0,Je.I)(e,c.BV.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&We(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}zs.className="Adagrad",Le(zs);var Bs=n(3788);class Ms extends qe{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Pe((()=>{this.accBeta1=(0,Xe.i)(t).variable(),this.accBeta2=(0,Xe.i)(n).variable()})),null==s&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Pe((()=>{const n=(0,qt.l)(1,this.accBeta1),s=(0,qt.l)(1,this.accBeta2);t.forEach(((t,r)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Pe((()=>(0,zn.P)(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Pe((()=>(0,zn.P)(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=(0,Je.I)((0,Yt.d)(o,this.beta1),(0,Yt.d)(i,1-this.beta1)),h=(0,Je.I)((0,Yt.d)(l,this.beta2),(0,Yt.d)((0,Xt.h)(i),1-this.beta2)),p=(0,It.h)(u,n),d=(0,It.h)(h,s);o.assign(u),l.assign(h);const f=(0,Je.I)((0,Yt.d)((0,It.h)(p,(0,Je.I)((0,Cn._)(d),this.epsilon)),-this.learningRate),a);a.assign(f)})),this.accBeta1.assign((0,Yt.d)(this.accBeta1,this.beta1)),this.accBeta2.assign((0,Yt.d)(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&We(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&We(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Pe((()=>{this.accBeta1.assign((0,Bs.s)(this.beta1,this.iterations_+1)),this.accBeta2.assign((0,Bs.s)(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Ms.className="Adam",Le(Ms);class Us extends qe{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Pe((()=>{this.iteration=(0,Xe.i)(0).variable(),this.accBeta1=(0,Xe.i)(t).variable()})),null==s&&(this.epsilon=c.BV.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Pe((()=>{const n=(0,qt.l)(1,this.accBeta1),s=(0,It.h)(-this.learningRate,(0,Je.I)((0,Yt.d)(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=c.BV.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:(0,zn.P)(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:(0,zn.P)(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=(0,Je.I)((0,Yt.d)(o,this.beta1),(0,Yt.d)(i,1-this.beta1)),h=(0,Yt.d)(l,this.beta2),p=(0,Ye.W)(i),d=(0,Wt.g)(h,p);o.assign(u),l.assign(d);const f=(0,Je.I)((0,Yt.d)((0,It.h)(s,n),(0,It.h)(u,(0,Je.I)(d,this.epsilon))),a);a.assign(f)})),this.iteration.assign((0,Je.I)(this.iteration,1)),this.accBeta1.assign((0,Yt.d)(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&We(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&We(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Us.className="Adamax",Le(Us);class Ps extends qe{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=c.BV.registeredVariables[t];Pe((()=>{const e=(0,Je.I)((0,Yt.d)(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Ve((0,Xe.i)(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ps.className="SGD",Le(Ps);class Ws extends Ps{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=(0,Xe.i)(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Pe((()=>(0,zn.P)(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Pe((()=>{let e;const t=(0,Je.I)((0,Yt.d)(this.m,r),a);e=this.useNesterov?(0,Je.I)((0,Yt.d)(this.c,(0,Je.I)(a,(0,Yt.d)(t,this.m))),s):(0,Je.I)((0,Yt.d)(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&We(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ws.className="Momentum",Le(Ws);class Vs extends qe{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=c.BV.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=c.BV.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Pe((()=>(0,zn.P)(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Pe((()=>(0,zn.P)(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Pe((()=>(0,zn.P)(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Pe((()=>{const e=(0,Je.I)((0,Yt.d)(i,this.decay),(0,Yt.d)((0,Xt.h)(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=(0,Je.I)((0,Yt.d)(t,this.decay),(0,Yt.d)(a,1-this.decay)),l=(0,It.h)((0,Yt.d)(a,this.learningRate),(0,Cn._)((0,qt.l)(e,(0,Je.I)((0,Xt.h)(r),this.epsilon)))),u=(0,Je.I)((0,Yt.d)(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=(0,qt.l)(s,u);s.assign(c)}else{const e=(0,Je.I)((0,Yt.d)(i,this.decay),(0,Yt.d)((0,Xt.h)(a),1-this.decay)),t=(0,Je.I)((0,Yt.d)(o,this.momentum),(0,It.h)((0,Yt.d)(a,this.learningRate),(0,Cn._)((0,Je.I)(e,this.epsilon))));i.assign(e),o.assign(t);const n=(0,qt.l)(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&We(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&We(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&We(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Vs.className="RMSProp",Le(Vs);class Gs{static sgd(e){return new Ps(e)}static momentum(e,t,n=!1){return new Ws(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Vs(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Ms(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Ls(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Us(e,t,n,s,r)}static adagrad(e,t=.1){return new zs(e,t)}}const Hs={sgd:Gs.sgd,momentum:Gs.momentum,adadelta:Gs.adadelta,adagrad:Gs.adagrad,rmsprop:Gs.rmsprop,adamax:Gs.adamax,adam:Gs.adam};var js=n(8307);const Xs="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function qs(){return new Promise((e=>Xs((()=>e()))))}function Ks(e,t){const n=e[0].length;e.forEach(((e,t)=>{x.hu(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),x.hu(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)x.hu(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Ys(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Js=30;function Zs(e){return e<=Js?e:(0,x.jP)(e,Math.floor(Math.sqrt(e)))}function Qs(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function er(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function tr(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function nr(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function sr(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function rr(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}function ar(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===(0,x.NA)(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...(0,x.e3)(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function ir(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function or(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ir(n,t,e)}function lr(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:(0,x.NA)(t.shape)/o,sliceSize:i,strides:[...(0,x.e3)(n.slice(0,r)),1],outputSize:(0,x.NA)(n)}}var ur=n(141);const cr=.3275911,hr=.254829592,pr=-.284496736,dr=1.421413741,fr=-1.453152027,mr=1.061405429;function gr(...e){(0,d.OB)().getBool("IS_TEST")||console.warn(...e)}function br(...e){(0,d.OB)().getBool("IS_TEST")||console.log(...e)}function yr(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function xr(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function wr(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function vr(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function kr(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Cr(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function Ir(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function $r(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const Sr=/->/g;function Er(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Sr,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");(0,x.hu)(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Nr(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function Tr(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:(0,x.hu)(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function Rr(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=Dr(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function Ar(e){return e.every(((e,t)=>e===t))}function Dr(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function Fr(e,t,n=0){let s=[];if("number"==typeof t)(0,x.hu)(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);(0,x.hu)(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}(0,x.hu)(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function _r(e,t){let n,s=!1;for(e<=Js?(n=e,s=!0):n=(0,x.jP)(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=(0,x.jP)(e,n+1);return n}function Or(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Lr(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function zr(e){try{return e.map((e=>(0,Be.decodeString)(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Br(e){return e.map((e=>(0,Be.encodeString)(e)))}function Mr(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=pe(e,"int32"),r=pe([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}var Ur=n(9941)},5202:(e,t,n)=>{"use strict";n.d(t,{SY:()=>s,VG:()=>r,Sp:()=>a,mm:()=>i,Xz:()=>o,oT:()=>l,IK:()=>u,sJ:()=>c,aJ:()=>h,M2:()=>p,qw:()=>d,jM:()=>f,Oy:()=>m,QC:()=>g,Jh:()=>b,RO:()=>y,_k:()=>x,IM:()=>w,XL:()=>v,zw:()=>k,zv:()=>C,Ly:()=>I,RF:()=>$,gJ:()=>S,xn:()=>E,Zz:()=>N,yj:()=>T,Eh:()=>R,mh:()=>A,wU:()=>D,wm:()=>F,x1:()=>_,o2:()=>O,ik:()=>L,mc:()=>z,TR:()=>B,iH:()=>M,Vc:()=>U,QR:()=>P,T0:()=>W,ci:()=>V,sL:()=>G,y7:()=>H,$w:()=>j,p4:()=>X,ek:()=>q,Vn:()=>K,oH:()=>Y,$g:()=>J,SX:()=>Z,HE:()=>Q,Om:()=>ee,hd:()=>te,NE:()=>ne,YF:()=>se,Y0:()=>re,vw:()=>ae,de:()=>ie,Uy:()=>oe,OR:()=>le,je:()=>ue,sH:()=>ce,qi:()=>he,q1:()=>pe,iZ:()=>de,Ac:()=>fe,iJ:()=>me,Qg:()=>ge,J_:()=>be,av:()=>ye,iW:()=>xe,r7:()=>we,J$:()=>ve,vt:()=>ke,CA:()=>Ce,e7:()=>Ie,Zb:()=>$e,kU:()=>Se,PY:()=>Ee,Vf:()=>Ne,MZ:()=>Te,qC:()=>Re,eZ:()=>Ae,Hh:()=>De,Yo:()=>Fe,BM:()=>_e,mT:()=>Oe,OV:()=>Le,OA:()=>ze,OU:()=>Be,vF:()=>Me,q2:()=>Ue,c1:()=>Pe,q8:()=>We,jQ:()=>Ve,Vb:()=>Ge,NZ:()=>He,wY:()=>je,ku:()=>Xe,yQ:()=>qe,uv:()=>Ke,cy:()=>Ye,W0:()=>Je,qW:()=>Ze,we:()=>Qe,Qi:()=>et,ly:()=>tt,pe:()=>nt,o0:()=>st,Dl:()=>rt,e6:()=>at,xJ:()=>it,$H:()=>ot,qk:()=>lt,HZ:()=>ut,dp:()=>ct,Hm:()=>ht,_Y:()=>pt,zb:()=>dt,Sb:()=>ft,mK:()=>mt,e0:()=>gt,bV:()=>bt,xQ:()=>yt,Ph:()=>xt,oF:()=>wt,p2:()=>vt,RQ:()=>kt,w3:()=>Ct,i5:()=>It,a5:()=>$t,MR:()=>St,FK:()=>Et,GB:()=>Nt,TQ:()=>Tt,L8:()=>Rt,Gc:()=>At,O3:()=>Dt,nh:()=>Ft,D2:()=>_t,_t:()=>Ot,bK:()=>Lt,m2:()=>zt,Tr:()=>Bt,sE:()=>Mt,MI:()=>Ut,n9:()=>Pt,cW:()=>Wt,wx:()=>Vt,G3:()=>Gt,kp:()=>Ht,To:()=>jt,Qv:()=>Xt,Ru:()=>qt,h8:()=>Kt,eB:()=>Yt,b9:()=>Jt,us:()=>Zt,_V:()=>Qt,lu:()=>en});const s="Abs",r="Acos",a="Acosh",i="Add",o="AddN",l="All",u="Any",c="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",b="AvgPool",y="AvgPoolGrad",x="AvgPool3D",w="AvgPool3DGrad",v="BatchMatMul",k="BatchToSpaceND",C="Bincount",I="BroadcastTo",$="Cast",S="Ceil",E="ClipByValue",N="Complex",T="ComplexAbs",R="Concat",A="Conv2D",D="Conv2DBackpropFilter",F="Conv2DBackpropInput",_="Conv3D",O="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",z="Cos",B="Cosh",M="Cumsum",U="CropAndResize",P="DenseBincount",W="DepthToSpace",V="DepthwiseConv2dNative",G="DepthwiseConv2dNativeBackpropFilter",H="DepthwiseConv2dNativeBackpropInput",j="Diag",X="Dilation2D",q="Dilation2DBackpropInput",K="Dilation2DBackpropFilter",Y="RealDiv",J="Einsum",Z="Elu",Q="EluGrad",ee="Erf",te="Equal",ne="Exp",se="ExpandDims",re="Expm1",ae="FFT",ie="Fill",oe="FlipLeftRight",le="Floor",ue="FloorDiv",ce="FusedBatchNorm",he="GatherV2",pe="GatherNd",de="Greater",fe="GreaterEqual",me="Identity",ge="IFFT",be="Imag",ye="IsFinite",xe="IsInf",we="IsNan",ve="LeakyRelu",ke="Less",Ce="LessEqual",Ie="LinSpace",$e="Log",Se="Log1p",Ee="LogicalAnd",Ne="LogicalNot",Te="LogicalOr",Re="LogSoftmax",Ae="LRN",De="LRNGrad",Fe="Max",_e="Maximum",Oe="MaxPool",Le="MaxPoolGrad",ze="MaxPool3D",Be="MaxPool3DGrad",Me="MaxPoolWithArgmax",Ue="Mean",Pe="Min",We="Minimum",Ve="MirrorPad",Ge="Mod",He="Multinomial",je="Multiply",Xe="Neg",qe="NotEqual",Ke="NonMaxSuppressionV3",Ye="NonMaxSuppressionV4",Je="NonMaxSuppressionV5",Ze="OnesLike",Qe="OneHot",et="Pack",tt="PadV2",nt="Pow",st="Prelu",rt="Prod",at="Range",it="Real",ot="Reciprocal",lt="Relu",ut="Reshape",ct="ResizeNearestNeighbor",ht="ResizeNearestNeighborGrad",pt="ResizeBilinear",dt="ResizeBilinearGrad",ft="Relu6",mt="Reverse",gt="Round",bt="Rsqrt",yt="ScatterNd",xt="Select",wt="Selu",vt="Slice",kt="Sin",Ct="Sinh",It="Sign",$t="Sigmoid",St="Softplus",Et="Sqrt",Nt="Sum",Tt="SpaceToBatchND",Rt="SplitV",At="Softmax",Dt="SparseFillEmptyRows",Ft="SparseReshape",_t="SparseToDense",Ot="SquaredDifference",Lt="Square",zt="StridedSlice",Bt="Sub",Mt="Tan",Ut="Tanh",Pt="Tile",Wt="TopK",Vt="Transform",Gt="Transpose",Ht="Unique",jt="Unpack",Xt="UnsortedSegmentSum",qt="ZerosLike",Kt="Step",Yt="FromPixels",Jt="RotateWithOffset",Zt="_FusedMatMul",Qt="FusedConv2D",en="FusedDepthwiseConv2D"},8307:(e,t,n)=>{"use strict";n.d(t,{pI:()=>o,uk:()=>l,tr:()=>u,wC:()=>c,Li:()=>h});var s=n(3535),r=n(7944);const a=(0,r.R)("kernelRegistry",(()=>new Map)),i=(0,r.R)("gradRegistry",(()=>new Map));function o(e,t){const n=p(e,t);return a.get(n)}function l(e){return i.get(e)}function u(e){const t=a.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function c(e){const{kernelName:t,backendName:n}=e,s=p(t,n);a.has(s)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),a.set(s,e)}function h(e){const{kernelName:t}=e;i.has(t)&&(0,s.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),i.set(t,e)}function p(e,t){return`${t}_${e}`}},6720:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({abs_:function(e){const t=(0,a._1)(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return s.BV.runKernel(r.yj,e)}{const e={x:t};return s.BV.runKernel(r.SY,e)}}})},7571:(e,t,n)=>{"use strict";n.d(t,{I:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({add_:function(e,t){let n=(0,i._1)(e,"a","add"),o=(0,i._1)(t,"b","add");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.mm,l)}})},7590:(e,t,n)=>{"use strict";n.d(t,{$:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({all_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","all","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.oT,i,o)}})},6298:(e,t,n)=>{"use strict";n.d(t,{Y:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({any_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","any","bool")},o={axis:t,keepDims:n};return s.BV.runKernel(r.IK,i,o)}})},1523:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({argMax_:function(e,t=0){const n={x:(0,a._1)(e,"x","argMax")},i={axis:t};return s.BV.runKernel(r.sJ,n,i)}})},9385:(e,t,n)=>{"use strict";n.d(t,{w:()=>h});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(5875),l=n(1129),u=n(128),c=n(2673);const h=(0,u.op)({avgPool_:function(e,t,n,u,h){const p=(0,a._1)(e,"x","avgPool","float32");i.hu(l.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,c.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=h&&i.hu(i.GN(u),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${u}.`));const m={x:d},g={filterSize:t,strides:n,pad:u,dimRoundingMode:h};let b=s.BV.runKernel(r.Jh,m,g);return b=(0,o.p)(b,p.dtype),f?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},7704:(e,t,n)=>{"use strict";n.d(t,{YB:()=>r,Vh:()=>a,kz:()=>i,rv:()=>o,lB:()=>l,Q3:()=>u,LJ:()=>c,sY:()=>h});var s=n(9740);function r(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function a(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function i(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function o(e,t){return a(e,t.map((e=>1)),t)}function l(e,t,n){s.hu(r(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function u(e,t){if(r(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function h(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}},8325:(e,t,n)=>{"use strict";n.d(t,{t:()=>l});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(2673);const l=(0,n(128).op)({batchNorm_:function(e,t,n,l,u,c){null==c&&(c=.001);const h=(0,a._1)(e,"x","batchNorm"),p=(0,a._1)(t,"mean","batchNorm"),d=(0,a._1)(n,"variance","batchNorm");let f,m;null!=u&&(f=(0,a._1)(u,"scale","batchNorm")),null!=l&&(m=(0,a._1)(l,"offset","batchNorm")),i.hu(p.rank===d.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),i.hu(null==m||p.rank===m.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),i.hu(null==f||p.rank===f.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const g={x:function(e){let t;return t=0===e.rank||1===e.rank?(0,o.X)(e,[1,1,1,e.size]):2===e.rank?(0,o.X)(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(h),scale:f,offset:m,mean:p,variance:d},b={varianceEpsilon:c},y=s.BV.runKernel(r.sH,g,b);return(0,o.X)(y,h.shape)}})},7933:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var s=n(3421),r=n(5202),a=n(8516),i=n(1107),o=n(128),l=n(2673);const u=(0,o.op)({broadcastTo_:function(e,t){let n=(0,a._1)(e,"broadcastTo","x");const o=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=(0,l.X)(n,e)}const u=n.shape,c=Array.from(t);for(let e=t.length-1;e>=0;e--)if(u[e]===t[e])c[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${t}].`);if(0===c.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return(0,i.d)(n);const h={x:n},p={reps:c};return s.BV.runKernel(r.n9,h,p)}})},2011:(e,t,n)=>{"use strict";function s(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function r(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function a(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}n.d(t,{XF:()=>s,RR:()=>r,$N:()=>a})},5875:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({cast_:function(e,t){const n=(0,a._1)(e,"x","cast");if(!i.LP(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const o={x:n},l={dtype:t};return s.BV.runKernel(r.RF,o,l)}})},3092:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({clipByValue_:function(e,t,n){const o=(0,a._1)(e,"x","clipByValue");i.hu(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const l={x:o},u={clipValueMin:t,clipValueMax:n};return s.BV.runKernel(r.xn,l,u)}})},1107:(e,t,n)=>{"use strict";n.d(t,{d:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({clone_:function(e){const t={x:(0,a._1)(e,"x","clone","string_or_numeric")};return s.BV.runKernel(r.iJ,t)}})},6609:(e,t,n)=>{"use strict";n.d(t,{P:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({complex_:function(e,t){const n=(0,a._1)(e,"real","complex"),o=(0,a._1)(t,"imag","complex");i.k5(n.shape,o.shape,`real and imag shapes, ${n.shape} and ${o.shape}, must match in call to tf.complex().`);const l={real:n,imag:o};return s.BV.runKernel(r.Zz,l)}})},9134:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(1107);const l=(0,n(128).op)({concat_:function(e,t=0){(0,i.hu)(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=(0,a.sI)(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return(0,o.d)(n[0]);const l=n,u={axis:t};return s.BV.runKernel(r.Eh,l,u)}})},6409:(e,t,n)=>{"use strict";n.d(t,{P:()=>u});var s=n(8516),r=n(9740),a=n(9399),i=n(1129),o=n(128),l=n(2673);const u=(0,o.op)({conv1d_:function(e,t,n,o,u="NWC",c=1,h){const p=(0,s._1)(e,"x","conv1d"),d=(0,s._1)(t,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1]])),r.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),r.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),null!=h&&r.hu(r.GN(o),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`)),r.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),r.hu(i.jT(n,c),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${c}'`)),r.hu("NWC"===u,(()=>`Error in conv1d: got dataFormat of ${u} but only NWC is currently supported.`));const g=(0,l.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),b=(0,l.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),y=[1,n],x=[1,c],w=(0,a.T)(b,g,y,o,"NHWC",x,h);return m?(0,l.X)(w,[w.shape[2],w.shape[3]]):(0,l.X)(w,[w.shape[0],w.shape[2],w.shape[3]])}})},9399:(e,t,n)=>{"use strict";n.d(t,{T:()=>c});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(1129),l=n(128),u=n(2673);const c=(0,l.op)({conv2d_:function(e,t,n,l,c="NHWC",h=[1,1],p){const d=(0,a._1)(e,"x","conv2d"),f=(0,a._1)(t,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),i.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),i.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&i.hu(i.GN(l),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${l}.`));const b="NHWC"===c?m.shape[3]:m.shape[1];i.hu(b===f.shape[2],(()=>`Error in conv2d: depth of input (${b}) must match input depth for filter ${f.shape[2]}.`)),i.hu(o.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const y={x:m,filter:f},x={strides:n,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p},w=s.BV.runKernel(r.mh,y,x);return g?(0,u.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},1885:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var s=n(3421),r=n(5202),a=n(9740),i=n(128),o=n(2673);const l=(0,i.op)({conv2DBackpropFilter_:function(e,t,n,i,l,u="NHWC",c){let h=e;3===e.rank&&(h=(0,o.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let p=t;3===p.rank&&(p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]])),a.hu(4===h.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${h.shape}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${p.shape}.`)),a.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const d="NHWC"===u?h.shape[3]:h.shape[1],f="NHWC"===u?p.shape[3]:p.shape[1];a.hu(d===n[2],(()=>`Error in conv2dDerFilter: depth of input ${d}) must match input depth in filter (${n[2]}.`)),a.hu(f===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${f}) must match output depth for filter (${n[3]}).`)),null!=c&&a.hu(a.GN(l),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const m={x:h,dy:p},g={strides:i,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:n};return s.BV.runKernel(r.wU,m,g)}})},6858:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var s=n(3421),r=n(5202),a=n(9740),i=n(128),o=n(2673);const l=(0,i.op)({conv2DBackpropInput_:function(e,t,n,i,l,u="NHWC",c){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let h=e,p=t,d=!1;3===t.rank&&(d=!0,p=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]),h=[1,e[0],e[1],e[2]]),a.hu(4===h.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${h.length}.`)),a.hu(4===p.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${p.rank}`)),a.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const f="NHWC"===u?h[3]:h[1],m="NHWC"===u?p.shape[3]:p.shape[1];a.hu(f===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${f}) must match input depth for filter ${n.shape[2]}.`)),a.hu(m===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${m}) must match output depth for filter ${n.shape[3]}.`)),null!=c&&a.hu(a.GN(l),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const g={dy:p,filter:n},b={strides:i,pad:l,dataFormat:u,dimRoundingMode:c,inputShape:h},y=s.BV.runKernel(r.wm,g,b);return d?(0,o.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},7905:(e,t,n)=>{"use strict";n.d(t,{b:()=>a});var s=n(8516),r=n(6858);const a=(0,n(128).op)({conv2dTranspose_:function(e,t,n,a,i,o){const l=(0,s._1)(e,"x","conv2dTranspose"),u=(0,s._1)(t,"filter","conv2dTranspose");return(0,r._)(n,l,u,a,i,"NHWC",o)}})},2833:(e,t,n)=>{"use strict";n.d(t,{_:()=>l});var s=n(3421),r=n(5202),a=n(9740),i=n(128),o=n(2673);const l=(0,i.op)({conv3DBackpropInput_:function(e,t,n,i,l){a.hu(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let u=e,c=t,h=!1;4===t.rank&&(h=!0,c=(0,o.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),u=[1,e[0],e[1],e[2],e[3]]);const p=u[4],d=c.shape[4];a.hu(5===u.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${u.length}.`)),a.hu(5===c.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${c.rank}`)),a.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),a.hu(p===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${p}) must match input depth for filter ${n.shape[3]}.`)),a.hu(d===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[4]}.`));const f={dy:c,filter:n},m={pad:l,strides:i,inputShape:u},g=s.BV.runKernel(r.ik,f,m);return h?(0,o.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}})},1129:(e,t,n)=>{"use strict";function s(e,t,n,s,r="NHWC",a){return i(e,[...t,e[3]],n,a,s,null,null,m(r))}function r(e,t,n,s,r,a,o="channelsLast"){const[l,c]=u(t);let h;if("channelsLast"===o)h=[l,c,e[3],e[3]];else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);h=[l,c,e[1],e[1]]}return i(e,h,n,s,r,a,!1,o)}function a(e,t,n,s,r,a,i="NDHWC"){const[l,u,h]=c(t);let p,d;if("NDHWC"===i)d="channelsLast",p=[l,u,h,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",p=[l,u,h,e[1],e[1]]}return o(e,p,n,s,r,!1,d,a)}function i(e,t,n,s,r,a,i=!1,o="channelsLast"){let[c,d,f,m]=[-1,-1,-1,-1];if("channelsLast"===o)[c,d,f,m]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[c,m,d,f]=e}const[g,b,,y]=t,[x,w]=u(n),[v,k]=u(s),C=h(g,v),I=h(b,k),{padInfo:$,outHeight:S,outWidth:E}=function(e,t,n,s,r,a,i,o,u){let c,h,d;if("number"==typeof e){c={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=l(e,t,n));const a=e[1];return[p((e[0]-t+2*s)/n+1,r),p((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);h=r[0],d=r[1]}else if("same"===e){h=Math.ceil(t/s),d=Math.ceil(n/r);const e=Math.max(0,(h-1)*s+a-t),o=Math.max(0,(d-1)*r+i-n),l=Math.floor(e/2),u=e-l,p=Math.floor(o/2);c={top:l,bottom:u,left:p,right:o-p,type:"SAME"}}else if("valid"===e)c={top:0,bottom:0,left:0,right:0,type:"VALID"},h=Math.ceil((t-a+1)/s),d=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const l="channelsLast"===u?e[1][0]:e[2][0],f="channelsLast"===u?e[1][1]:e[2][1],m="channelsLast"===u?e[2][0]:e[3][0],g="channelsLast"===u?e[2][1]:e[3][1];c={top:l,bottom:f,left:m,right:g,type:0===l&&0===f&&0===m&&0===g?"VALID":"EXPLICIT"},h=p((t-a+l+f)/s+1,o),d=p((n-i+m+g)/r+1,o)}}return{padInfo:c,outHeight:h,outWidth:d}}(r,d,f,x,w,C,I,a,o),N=i?y*m:y;let T;return"channelsFirst"===o?T=[c,N,S,E]:"channelsLast"===o&&(T=[c,S,E,N]),{batchSize:c,dataFormat:o,inHeight:d,inWidth:f,inChannels:m,outHeight:S,outWidth:E,outChannels:N,padInfo:$,strideHeight:x,strideWidth:w,filterHeight:g,filterWidth:b,effectiveFilterHeight:C,effectiveFilterWidth:I,dilationHeight:v,dilationWidth:k,inShape:e,outShape:T,filterShape:t}}function o(e,t,n,s,r,a=!1,i="channelsLast",o){let[u,d,f,m,g]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,d,f,m,g]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,g,d,f,m]=e}const[b,y,x,,w]=t,[v,k,C]=c(n),[I,$,S]=c(s),E=h(b,I),N=h(y,$),T=h(x,S),{padInfo:R,outDepth:A,outHeight:D,outWidth:F}=function(e,t,n,s,r,a,i,o,u,c,h){let d,f,m,g;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=l(e,t,s));const i=e[1],o=e[2];return[p((e[0]-t+2*r)/s+1,a),p((i-t+2*r)/s+1,a),p((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,h);f=a[0],m=a[1],g=a[2]}else if("same"===e){f=Math.ceil(t/r),m=Math.ceil(n/a),g=Math.ceil(s/i);const e=(f-1)*r+o-t,l=(m-1)*a+u-n,h=(g-1)*i+c-s,p=Math.floor(e/2),b=e-p,y=Math.floor(l/2),x=l-y,w=Math.floor(h/2);d={top:y,bottom:x,left:w,right:h-w,front:p,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},f=Math.ceil((t-o+1)/r),m=Math.ceil((n-u+1)/a),g=Math.ceil((s-c+1)/i)}return{padInfo:d,outDepth:f,outHeight:m,outWidth:g}}(r,d,f,m,v,k,C,E,N,T,o),_=a?w*g:w;let O;return"channelsFirst"===i?O=[u,_,A,D,F]:"channelsLast"===i&&(O=[u,A,D,F,_]),{batchSize:u,dataFormat:i,inDepth:d,inHeight:f,inWidth:m,inChannels:g,outDepth:A,outHeight:D,outWidth:F,outChannels:_,padInfo:R,strideDepth:v,strideHeight:k,strideWidth:C,filterDepth:b,filterHeight:y,filterWidth:x,effectiveFilterDepth:E,effectiveFilterHeight:N,effectiveFilterWidth:T,dilationDepth:I,dilationHeight:$,dilationWidth:S,inShape:e,outShape:O,filterShape:t}}function l(e,t,n,s=1){const r=h(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function u(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function c(e){return"number"==typeof e?[e,e,e]:e}function h(e,t){return t<=1?e:e+(e-1)*(t-1)}function p(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function d(e){const[t,n,s]=u(e);return 1===t&&1===n&&1===s}function f(e,t){return d(e)||d(t)}function m(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}n.d(t,{Rf:()=>s,Xw:()=>r,pl:()=>a,Ix:()=>i,jw:()=>o,aO:()=>l,I0:()=>d,jT:()=>f,sl:()=>m})},6581:(e,t,n)=>{"use strict";n.d(t,{B:()=>u});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(128),l=n(2673);const u=(0,o.op)({depthwiseConv2d_:function(e,t,n,o,u="NHWC",c=[1,1],h){const p=(0,a._1)(e,"x","depthwiseConv2d"),d=(0,a._1)(t,"filter","depthwiseConv2d");let f=p,m=!1;3===p.rank&&(m=!0,f=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),i.hu(4===f.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${f.rank}.`)),i.hu(4===d.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),i.hu(f.shape[3]===d.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${f.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null!=h&&i.hu(i.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${o}.`));const g={x:f,filter:d},b={strides:n,pad:o,dataFormat:u,dilations:c,dimRoundingMode:h},y=s.BV.runKernel(r.ci,g,b);return m?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},2806:(e,t,n)=>{"use strict";n.d(t,{z:()=>o});var s=n(3421),r=n(5202),a=n(128),i=n(2673);const o=(0,a.op)({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,a,o,l=[1,1],u){let c=e;3===e.rank&&(c=(0,i.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let h=t;3===h.rank&&(h=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={x:c,dy:h},d={strides:a,pad:o,dimRoundingMode:u,dilations:l,filterShape:n};return s.BV.runKernel(r.sL,p,d)}})},5039:(e,t,n)=>{"use strict";n.d(t,{v:()=>o});var s=n(3421),r=n(5202),a=n(128),i=n(2673);const o=(0,a.op)({depthwiseConv2dNativeBackpropInput_:function(e,t,n,a,o,l=[1,1],u){let c=t,h=!1;3===t.rank&&(h=!0,c=(0,i.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const p={dy:c,filter:n},d={strides:a,pad:o,dimRoundingMode:u,dilations:l,inputShape:e},f=s.BV.runKernel(r.y7,p,d);return h?(0,i.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},2639:(e,t,n)=>{"use strict";n.d(t,{h:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(6986);const l=(0,n(128).op)({div_:function(e,t){let n=(0,i._1)(e,"a","div"),l=(0,i._1)(t,"b","div");if([n,l]=(0,a.makeTypesMatch)(n,l),"int32"===n.dtype&&"int32"===l.dtype)return(0,o.q)(n,l);const u={a:n,b:l};return s.BV.runKernel(r.oH,u,{})}})},9673:(e,t,n)=>{"use strict";n.d(t,{p:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({elu_:function(e){const t={x:(0,a._1)(e,"x","elu")};return s.BV.runKernel(r.SX,t)}})},1966:(e,t,n)=>{"use strict";n.d(t,{D:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({equal_:function(e,t){let n=(0,i._1)(e,"a","equal"),l=(0,i._1)(t,"b","equal");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.hd,u)}})},8575:(e,t,n)=>{"use strict";n.d(t,{Q:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({exp_:function(e){const t={x:(0,a._1)(e,"x","exp")};return s.BV.runKernel(r.NE,t)}})},1064:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({expandDims_:function(e,t=0){const n=(0,a._1)(e,"x","expandDims","string_or_numeric");i.hu(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o={input:n},l={dim:t};return s.BV.runKernel(r.YF,o,l)}})},7184:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({floor_:function(e){const t={x:(0,a._1)(e,"x","floor")};return s.BV.runKernel(r.OR,t)}})},6986:(e,t,n)=>{"use strict";n.d(t,{q:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({floorDiv_:function(e,t){let n=(0,i._1)(e,"a","floorDiv"),o=(0,i._1)(t,"b","floorDiv");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.je,l)}})},5262:(e,t,n)=>{"use strict";n.d(t,{I:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({gather_:function(e,t,n=0,i=0){const o={x:(0,a._1)(e,"x","gather"),indices:(0,a._1)(t,"indices","gather","int32")},l={axis:n,batchDims:i};return s.BV.runKernel(r.qi,o,l)}})},1694:(e,t,n)=>{"use strict";n.d(t,{p:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({greater_:function(e,t){let n=(0,i._1)(e,"a","greater"),l=(0,i._1)(t,"b","greater");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.iZ,u)}})},6731:(e,t,n)=>{"use strict";n.d(t,{b:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({greaterEqual_:function(e,t){let n=(0,i._1)(e,"a","greaterEqual"),l=(0,i._1)(t,"b","greaterEqual");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.Ac,u)}})},3819:(e,t,n)=>{"use strict";n.d(t,{a:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({imag_:function(e){const t={input:(0,a._1)(e,"input","imag")};return s.BV.runKernel(r.J_,t)}})},4284:(e,t,n)=>{"use strict";n.d(t,{I:()=>u});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(128),l=n(2673);const u=(0,o.op)({resizeBilinear_:function(e,t,n=!1,o=!1){const u=(0,a._1)(e,"images","resizeBilinear");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i.hu(!1===o||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r._Y,p,d);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},739:(e,t,n)=>{"use strict";n.d(t,{j:()=>u});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(128),l=n(2673);const u=(0,o.op)({resizeNearestNeighbor_:function(e,t,n=!1,o=!1){const u=(0,a._1)(e,"images","resizeNearestNeighbor");i.hu(3===u.rank||4===u.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${u.rank}.`)),i.hu(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i.hu("float32"===u.dtype||"int32"===u.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i.hu(!1===o||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let c=u,h=!1;3===u.rank&&(h=!0,c=(0,l.X)(u,[1,u.shape[0],u.shape[1],u.shape[2]]));const[]=t,p={images:c},d={alignCorners:n,halfPixelCenters:o,size:t},f=s.BV.runKernel(r.dp,p,d);return h?(0,l.X)(f,[f.shape[1],f.shape[2],f.shape[3]]):f}})},7397:(e,t,n)=>{"use strict";n.d(t,{h:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({leakyRelu_:function(e,t=.2){const n={x:(0,a._1)(e,"x","leakyRelu")},i={alpha:t};return s.BV.runKernel(r.J$,n,i)}})},5573:(e,t,n)=>{"use strict";n.d(t,{z:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({lessEqual_:function(e,t){let n=(0,i._1)(e,"a","lessEqual"),l=(0,i._1)(t,"b","lessEqual");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.CA,u)}})},3102:(e,t,n)=>{"use strict";n.d(t,{c:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({log_:function(e){const t={x:(0,a._1)(e,"x","log")};return s.BV.runKernel(r.Zb,t)}})},6883:(e,t,n)=>{"use strict";n.d(t,{K:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({log1p_:function(e){const t={x:(0,a._1)(e,"x","log1p")};return s.BV.runKernel(r.kU,t)}})},2929:(e,t,n)=>{"use strict";n.d(t,{C:()=>d});var s=n(3184),r=n(8516),a=n(5875),i=n(8575),o=n(3102),l=n(4991),u=n(2805),c=n(128),h=n(6885),p=n(4786);const d=(0,c.op)({logSoftmax_:function(e,t=-1){const n=(0,r._1)(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return(0,s.cb)(((e,n)=>{const s=(0,l.F)(e,t,!0),r=(0,h.l)(e,s),c=(0,h.l)((0,a.p)(r,"float32"),(0,o.c)((0,p.S)((0,i.Q)(r),t,!0)));return n([c]),{value:c,gradFunc:(e,n)=>{const[s]=n,r=(0,i.Q)(s);return(0,h.l)(e,(0,u.d)((0,p.S)(e,t,!0),r))}}}))(n)}})},2425:(e,t,n)=>{"use strict";n.d(t,{l:()=>f});var s=n(8516),r=n(9740),a=n(7571),i=n(7704),o=n(8575),l=n(3102),u=n(4991),c=n(128),h=n(2673),p=n(6885),d=n(4786);const f=(0,c.op)({logSumExp_:function(e,t=null,n=!1){const c=(0,s._1)(e,"x","logSumExp"),f=(0,r.EC)(t,c.shape),m=(0,u.F)(c,f,!0),g=(0,p.l)(c,m),b=(0,o.Q)(g),y=(0,d.S)(b,f),x=(0,l.c)(y),w=(0,a.I)((0,h.X)(m,x.shape),x);if(n){const e=(0,i.rv)(w.shape,f);return(0,h.X)(w,e)}return w}})},495:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(2011);const o=(0,n(128).op)({logicalAnd_:function(e,t){const n=(0,a._1)(e,"a","logicalAnd","bool"),o=(0,a._1)(t,"b","logicalAnd","bool");(0,i.$N)(n.shape,o.shape);const l={a:n,b:o};return s.BV.runKernel(r.PY,l)}})},8249:(e,t,n)=>{"use strict";n.d(t,{O:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({matMul_:function(e,t,n=!1,o=!1){let l=(0,i._1)(e,"a","matMul"),u=(0,i._1)(t,"b","matMul");[l,u]=(0,a.makeTypesMatch)(l,u);const c={a:l,b:u},h={transposeA:n,transposeB:o};return s.BV.runKernel(r.XL,c,h)}})},4991:(e,t,n)=>{"use strict";n.d(t,{F:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({max_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","max")},o={reductionIndices:t,keepDims:n};return s.BV.runKernel(r.Yo,i,o)}})},4433:(e,t,n)=>{"use strict";n.d(t,{_:()=>c});var s=n(3421),r=n(5202),a=n(8516),i=n(9740),o=n(1129),l=n(128),u=n(2673);const c=(0,l.op)({maxPool_:function(e,t,n,l,c){const h=(0,a._1)(e,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),i.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),i.hu(o.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=c&&i.hu(i.GN(l),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${c} but got pad ${l}.`));const f={x:p},m={filterSize:t,strides:n,pad:l,dimRoundingMode:c},g=s.BV.runKernel(r.mT,f,m);return d?(0,u.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},3171:(e,t,n)=>{"use strict";n.d(t,{g:()=>u});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011),l=n(5875);const u=(0,n(128).op)({maximum_:function(e,t){let n=(0,i._1)(e,"a","maximum"),u=(0,i._1)(t,"b","maximum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.$N)(n.shape,u.shape);const c={a:n,b:u};return s.BV.runKernel(r.BM,c)}})},4854:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({mean_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","mean")},o={axis:t,keepDims:n};return s.BV.runKernel(r.q2,i,o)}})},6038:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({min_:function(e,t=null,n=!1){const i={x:(0,a._1)(e,"x","min")},o={axis:t,keepDims:n};return s.BV.runKernel(r.c1,i,o)}})},7511:(e,t,n)=>{"use strict";n.d(t,{L:()=>u});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011),l=n(5875);const u=(0,n(128).op)({minimum_:function(e,t){let n=(0,i._1)(e,"a","minimum"),u=(0,i._1)(t,"b","minimum");[n,u]=(0,a.makeTypesMatch)(n,u),"bool"===n.dtype&&(n=(0,l.p)(n,"int32"),u=(0,l.p)(u,"int32")),(0,o.$N)(n.shape,u.shape);const c={a:n,b:u};return s.BV.runKernel(r.q8,c)}})},2805:(e,t,n)=>{"use strict";n.d(t,{d:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({mul_:function(e,t){let n=(0,i._1)(e,"a","mul"),o=(0,i._1)(t,"b","mul");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.wY,l)}})},7211:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({neg_:function(e){const t={x:(0,a._1)(e,"x","neg")};return s.BV.runKernel(r.ku,t)}})},1458:(e,t,n)=>{"use strict";n.d(t,{K:()=>b});var s=n(8516),r=n(9740),a=n(6720),i=n(7704),o=n(4991),l=n(6038),u=n(128),c=n(3788),h=n(2673),p=n(2502),d=n(7346),f=n(6966),m=n(4786);function g(e,t,n=null){if(0===e.rank)return(0,a.W)(e);if(1!==e.rank&&null===n)return g((0,h.X)(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return(0,m.S)((0,a.W)(e),n);if(t===1/0)return(0,o.F)((0,a.W)(e),n);if(t===-1/0)return(0,l.V)((0,a.W)(e),n);if("euclidean"===t||2===t)return(0,d._)((0,m.S)((0,c.s)((0,a.W)(e),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return(0,o.F)((0,m.S)((0,a.W)(e),n[0]),n[1]-1);if(t===1/0)return(0,o.F)((0,m.S)((0,a.W)(e),n[1]),n[0]);if(t===-1/0)return(0,l.V)((0,m.S)((0,a.W)(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return(0,d._)((0,m.S)((0,f.h)(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const b=(0,u.op)({norm_:function(e,t="euclidean",n=null,a=!1){const o=g(e=(0,s._1)(e,"x","norm"),t,n);let l=o.shape;if(a){const t=(0,r.EC)(n,e.shape);l=i.rv(o.shape,t)}return(0,h.X)(o,l)}})},1576:(e,t,n)=>{"use strict";n.d(t,{Q:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({notEqual_:function(e,t){let n=(0,i._1)(e,"a","notEqual"),l=(0,i._1)(t,"b","notEqual");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r.yQ,u)}})},7910:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({oneHot_:function(e,t,n=1,i=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const o={indices:(0,a._1)(e,"indices","oneHot","int32")},l={depth:t,onValue:n,offValue:i};return s.BV.runKernel(r.we,o,l)}})},8074:(e,t,n)=>{"use strict";n.d(t,{i:()=>o});var s=n(3421),r=n(9740),a=n(6609),i=n(1434);function o(e,t="float32"){if("complex64"===t){const t=o(e,"float32"),n=(0,i.l)(e,"float32");return(0,a.P)(t,n)}const n=(0,r.p8)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},9622:(e,t,n)=>{"use strict";n.d(t,{J:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({onesLike_:function(e){const t={x:(0,a._1)(e,"x","onesLike")};return s.BV.runKernel(r.qW,t)}})},128:(e,t,n)=>{"use strict";n.d(t,{op:()=>a});var s=n(3421),r=n(9740);function a(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const a=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const i=(...e)=>{s.BV.startScope(n);try{const t=a(...e);return(0,r.tI)(t)&&console.error("Cannot return a Promise inside of tidy."),s.BV.endScope(t),t}catch(e){throw s.BV.endScope(null),e}};return Object.defineProperty(i,"name",{value:n,configurable:!0}),i}},7039:(e,t,n)=>{"use strict";n.d(t,{v:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({pad_:function(e,t,n=0){const i=(0,a._1)(e,"x","pad");if(0===i.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:t,constantValue:n},l={x:i};return s.BV.runKernel(r.ly,l,o)}})},3788:(e,t,n)=>{"use strict";n.d(t,{s:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({pow_:function(e,t){let n=(0,i._1)(e,"base","pow"),o=(0,i._1)(t,"exp","pow");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.pe,l)}})},1224:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({prelu_:function(e,t){const n={x:(0,a._1)(e,"x","prelu"),alpha:(0,a._1)(t,"alpha","prelu")};return s.BV.runKernel(r.o0,n)}})},8268:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({real_:function(e){const t={input:(0,a._1)(e,"input","real")};return s.BV.runKernel(r.xJ,t)}})},8536:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({relu_:function(e){const t={x:(0,a._1)(e,"x","relu")};return s.BV.runKernel(r.qk,t)}})},9902:(e,t,n)=>{"use strict";n.d(t,{b:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({relu6_:function(e){const t={x:(0,a._1)(e,"x","relu6")};return s.BV.runKernel(r.Sb,t)}})},2673:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({reshape_:function(e,t){const n={x:(0,a._1)(e,"x","reshape","string_or_numeric")},i={shape:t};return s.BV.runKernel(r.HZ,n,i)}})},4330:(e,t,n)=>{"use strict";n.d(t,{G:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({reverse_:function(e,t){const n={x:(0,a._1)(e,"x","reverse")},i={dims:t};return s.BV.runKernel(r.mK,n,i)}})},4520:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({round_:function(e){const t={x:(0,a._1)(e,"x","round")};return s.BV.runKernel(r.e0,t)}})},2502:(e,t,n)=>{"use strict";n.d(t,{i:()=>a});var s=n(9740),r=n(213);function a(e,t){if(((0,s.fU)(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&(0,s.fU)(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,r.H)(e,[],[],t)}},2899:(e,t,n)=>{"use strict";n.d(t,{U:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({selu_:function(e){const t={x:(0,a._1)(e,"x","selu")};return s.BV.runKernel(r.oF,t)}})},141:(e,t,n)=>{"use strict";n.d(t,{y:()=>s,$:()=>r});const s=1.7580993408473768,r=1.0507009873554805},1438:(e,t,n)=>{"use strict";n.d(t,{U:()=>u});var s=n(8516),r=n(9740),a=n(9399),i=n(6581),o=n(128),l=n(2673);const u=(0,o.op)({separableConv2d_:function(e,t,n,o,u,c=[1,1],h="NHWC"){const p=(0,s._1)(e,"x","separableConv2d"),d=(0,s._1)(t,"depthwiseFilter","separableConv2d"),f=(0,s._1)(n,"pointwiseFilter","separableConv2d");let m=p,g=!1;if(3===p.rank&&(g=!0,m=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),"NCHW"===h)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");r.hu(4===m.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${m.rank}.`)),r.hu(4===d.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(4===f.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${d.rank}.`)),r.hu(1===f.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${f.shape[0]}.`)),r.hu(1===f.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${f.shape[1]}.`));const b=d.shape[2],y=d.shape[3];r.hu(f.shape[2]===b*y,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${b*y}, but got ${f.shape[2]}.`));const x=(0,i.B)(m,d,o,u,h,c),w=(0,a.T)(x,f,1,"valid",h);return g?(0,l.X)(w,[w.shape[1],w.shape[2],w.shape[3]]):w}})},5808:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({sigmoid_:function(e){const t={x:(0,a._1)(e,"x","sigmoid")};return s.BV.runKernel(r.a5,t)}})},2565:(e,t,n)=>{"use strict";n.d(t,{t:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({slice_:function(e,t,n){const i=(0,a._1)(e,"x","slice","string_or_numeric");if(0===i.rank)throw new Error("Slicing scalar is not possible");const o={x:i},l={begin:t,size:n};return s.BV.runKernel(r.p2,o,l)}})},1269:(e,t,n)=>{"use strict";n.r(t),n.d(t,{assertParamsValid:()=>r,maskToAxes:()=>a,computeOutShape:()=>i,stridesWithElidedDims:()=>o,getNormalizedAxes:()=>c,startIndicesWithElidedDims:()=>h,stopIndicesWithElidedDims:()=>p,stridesForAxis:()=>d,startForAxis:()=>f,stopForAxis:()=>m,isSliceContinous:()=>g,computeFlatOffset:()=>b,parseSliceParams:()=>y,sliceInfo:()=>x});var s=n(9740);function r(e,t,n){const r=e.shape.length;s.hu(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),s.hu(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let a=0;a<r;++a)s.hu(t[a]+n[a]<=e.shape[a],(()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`))}function a(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function i(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function o(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function l(e,t,n){return n<=e?n:n-(t-1)}function u(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function c(e,t,n,s,r,a,i,l,u){const c=e.length;let g=new Array(c),b=new Array(c),y=new Array(c);if(t.length&&n>0){const u=t[0],c=n+1;g=h(i,u,c,s,e),b=p(l,u,c,r,e),y=o(a,u,c,e)}else for(let t=0;t<c;t++)g[t]=f(i,s,a,e,t,u),b[t]=m(l,r,a,e,t,u),y[t]=d(a,t,u);return{begin:g,end:b,strides:y}}function h(e,t,n,s,r){const a=[...r],i=u(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=l(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function p(e,t,n,r,a){const i=[...a],o=u(n,t);for(let s=0;s<i.length;s++)if(o.indexOf(s)>-1)i[s]=Number.MAX_SAFE_INTEGER;else{const a=l(t,n,s);let o=r[a];e&1<<a&&(o=Number.MAX_SAFE_INTEGER),i[s]=o}for(let e=0;e<i.length;e++){const t=a[e];i[e]<0&&(i[e]+=t),i[e]=s.uZ(0,i[e],a[e])}return i}function d(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function f(e,t,n,r,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=s.uZ(0,o,u-1),o}function m(e,t,n,r,a,i){let o=t[a];const l=n[a]||1;(e&1<<a||i&1<<a||null==o)&&(o=l>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return o<0&&(o+=u),o=l>0?s.uZ(0,o,u):s.uZ(-1,o,u-1),o}function g(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function b(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function y(e,t,n){let r;const a=e.shape.length;let i;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach((e=>{s.hu(-1!==e,(()=>"slice() does not support negative begin indexing."))})),i=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,i=i.map(((t,n)=>t>=0?t:(s.hu(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,i]}function x(e,t,n,s,r,o,l,u,h){let p=t.slice(),d=n.slice(),f=s;null==s&&(f=new Array(p.length));const m=a(l);if(m.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==l&&0!==u)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==l&&0!==h)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const g=e.length-p.length,b=a(u),y=e.slice();b.forEach((e=>{p[e]=0,d[e]=1,y.splice(e,0,1)}));const{begin:x,end:w,strides:v}=c(y,m,g,p,d,f,r,o,l);p=x,d=w,f=v;const k=a(h);k.forEach((e=>{d[e]=p[e]+1,f[e]=1}));const C=i(p,d,f),I=C.filter(((e,t)=>-1===k.indexOf(t)));return{nonStrided:f.every((e=>1===e)),$begin:p,$end:d,$strides:f,size:C,newShape:y,outShape:I}}},5301:(e,t,n)=>{"use strict";n.d(t,{X:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({softmax_:function(e,t=-1){const n=(0,a._1)(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const i={logits:n},o={dim:t};return s.BV.runKernel(r.Gc,i,o)}})},9876:(e,t,n)=>{"use strict";n.d(t,{W:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({softplus_:function(e){const t={x:(0,a._1)(e,"x","softplus")};return s.BV.runKernel(r.MR,t)}})},6991:(e,t,n)=>{"use strict";n.d(t,{k:()=>i});var s=n(3421),r=n(5202),a=n(9740);const i=(0,n(128).op)({fft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.vw,t)}})},8923:(e,t,n)=>{"use strict";n.d(t,{S:()=>i});var s=n(3421),r=n(5202),a=n(9740);const i=(0,n(128).op)({ifft_:function(e){(0,a.hu)("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return s.BV.runKernel(r.Qg,t)}})},8117:(e,t,n)=>{"use strict";n.d(t,{w:()=>f});var s=n(6609),r=n(9134),a=n(3819),i=n(2805),o=n(128),l=n(8268),u=n(2673),c=n(4330),h=n(2502),p=n(2565),d=n(8923);const f=(0,o.op)({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let o;if(t<=2){const s=(0,u.X)(e,[n,t]);o=(0,d.S)(s)}else{const f=[n,2*(t-1)],m=(0,u.X)((0,l.k)(e),[n,t]),g=(0,u.X)((0,a.a)(e),[n,t]),b=(0,c.G)((0,p.t)(m,[0,1],[n,t-2]),1),y=(0,i.d)((0,c.G)((0,p.t)(g,[0,1],[n,t-2]),1),(0,h.i)(-1)),x=(0,r.z)([m,b],1),w=(0,r.z)([g,y],1),v=(0,u.X)((0,s.P)(x,w),[f[0],f[1]]);o=(0,d.S)(v)}if(o=(0,l.k)(o),3===e.rank&&0!==e.shape[0]){const t=o,n=e.shape[0];o=(0,u.X)(o,[n,o.shape[0]/n,o.shape[1]]),t.dispose()}return o}})},1411:(e,t,n)=>{"use strict";n.d(t,{Q:()=>m});var s=n(9740),r=n(6609),a=n(9134),i=n(3819),o=n(128),l=n(8268),u=n(2673),c=n(2565),h=n(1381),p=n(1434),d=n(9635),f=n(6991);const m=(0,o.op)({rfft_:function(e,t){(0,s.hu)("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const o=e.size/n;let m;if(null!=t&&t<n){const s=e.shape.map((e=>0)),r=e.shape.map((e=>e));r[e.shape.length-1]=t,m=(0,c.t)(e,s,r),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,m=(0,a.z)([e,(0,p.l)(s)],e.shape.length-1),n=t}else m=e;const g=(0,d.P)(m),b=(0,u.X)((0,r.P)(m,g),[o,n]),y=(0,f.k)(b),x=Math.floor(n/2)+1,w=(0,l.k)(y),v=(0,i.a)(y),k=(0,h.V)(w,[x,n-x],w.shape.length-1),C=(0,h.V)(v,[x,n-x],v.shape.length-1),I=m.shape.slice();return I[m.shape.length-1]=x,(0,u.X)((0,r.P)(k[0],C[0]),I)}})},1381:(e,t,n)=>{"use strict";n.d(t,{V:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({split_:function(e,t,n=0){const i={x:(0,a._1)(e,"x","split")},o={numOrSizeSplits:t,axis:n};return s.BV.runKernel(r.L8,i,o)}})},7346:(e,t,n)=>{"use strict";n.d(t,{_:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({sqrt_:function(e){const t={x:(0,a._1)(e,"x","sqrt")};return s.BV.runKernel(r.FK,t)}})},6966:(e,t,n)=>{"use strict";n.d(t,{h:()=>a});var s=n(3421),r=n(8516);const a=(0,n(128).op)({square_:function(e){const t=(0,r._1)(e,"x","square");return s.BV.runKernel("Square",{x:t},{})}})},8774:(e,t,n)=>{"use strict";n.d(t,{$:()=>l});var s=n(3421),r=n(5202),a=n(9201),i=n(8516),o=n(2011);const l=(0,n(128).op)({squaredDifference_:function(e,t){let n=(0,i._1)(e,"a","squaredDifference"),l=(0,i._1)(t,"b","squaredDifference");[n,l]=(0,a.makeTypesMatch)(n,l),(0,o.$N)(n.shape,l.shape);const u={a:n,b:l};return s.BV.runKernel(r._t,u,{})}})},5920:(e,t,n)=>{"use strict";n.d(t,{L:()=>o});var s=n(8516),r=n(9740),a=n(128),i=n(2673);const o=(0,a.op)({squeeze_:function(e,t){const n=(0,s._1)(e,"x","squeeze");return(0,i.X)(n,(0,r.bp)(n.shape,t).newShape)}})},2235:(e,t,n)=>{"use strict";n.d(t,{k:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({stack_:function(e,t=0){const n=(0,a.sI)(e,"tensors","stack","string_or_numeric");i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i.hu(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const o=n,l={axis:t};return s.BV.runKernel(r.Qi,o,l)}})},3863:(e,t,n)=>{"use strict";n.d(t,{N:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({step_:function(e,t=0){const n={x:(0,a._1)(e,"x","step")},i={alpha:t};return s.BV.runKernel(r.h8,n,i)}})},6885:(e,t,n)=>{"use strict";n.d(t,{l:()=>o});var s=n(3421),r=n(5202),a=n(9201),i=n(8516);const o=(0,n(128).op)({sub_:function(e,t){let n=(0,i._1)(e,"a","sub"),o=(0,i._1)(t,"b","sub");[n,o]=(0,a.makeTypesMatch)(n,o);const l={a:n,b:o};return s.BV.runKernel(r.Tr,l)}})},4786:(e,t,n)=>{"use strict";n.d(t,{S:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(5875);const o=(0,n(128).op)({sum_:function(e,t=null,n=!1){let o=(0,a._1)(e,"x","sum");"bool"===o.dtype&&(o=(0,i.p)(o,"int32"));const l={x:o},u={axis:t,keepDims:n};return s.BV.runKernel(r.GB,l,u)}})},1871:(e,t,n)=>{"use strict";n.d(t,{A:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({tanh_:function(e){const t={x:(0,a._1)(e,"x","tanh")};return s.BV.runKernel(r.MI,t)}})},213:(e,t,n)=>{"use strict";n.d(t,{H:()=>i});var s=n(3421),r=n(9740),a=n(4959);function i(e,t,n,i){if(null==i&&(i=(0,r.D2)(e)),"complex64"===i)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,r.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){(0,r.Mu)(t);const e=(0,r.NA)(t),s=(0,r.NA)(n);(0,r.hu)(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],a=e!==n.length-1||s!==(0,r.NA)(t.slice(e));(0,r.hu)(n[e]===t[e]||!a,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return(0,r.fU)(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==i?(0,a.toTypedArray)(e,i):(0,r.xH)(e,[],!0),s.BV.makeTensor(e,t,i)}},3239:(e,t,n)=>{"use strict";n.d(t,{G:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({tile_:function(e,t){const n=(0,a._1)(e,"x","tile","string_or_numeric");i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const o={x:n},l={reps:t};return s.BV.runKernel(r.n9,o,l)}})},6336:(e,t,n)=>{"use strict";n.d(t,{p:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({transpose_:function(e,t){const n=(0,a._1)(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i.hu(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i.hu(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const o={x:n},l={perm:t};return s.BV.runKernel(r.G3,o,l)}})},7690:(e,t,n)=>{"use strict";n.d(t,{H:()=>o});var s=n(3421),r=n(5202),a=n(8516),i=n(9740);const o=(0,n(128).op)({unstack_:function(e,t=0){const n=(0,a._1)(e,"x","unstack","string_or_numeric");i.hu(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const o={value:n},l={axis:t};return s.BV.runKernel(r.To,o,l)}})},1203:(e,t,n)=>{"use strict";n.d(t,{a:()=>l});var s=n(3421),r=n(5202),a=n(8516),i=n(7933),o=n(2011);const l=(0,n(128).op)({where_:function(e,t,n){const l=(0,a._1)(t,"a","where"),u=(0,a._1)(n,"b","where"),c=(0,a._1)(e,"condition","where","bool"),h=(0,o.$N)((0,o.$N)(c.shape,l.shape),u.shape),p={condition:(0,i.U)(c,h),t:(0,i.U)(l,h),e:(0,i.U)(u,h)};return s.BV.runKernel(r.Ph,p)}})},1434:(e,t,n)=>{"use strict";n.d(t,{l:()=>i});var s=n(3421),r=n(9740),a=n(6609);function i(e,t="float32"){if("complex64"===t){const t=i(e,"float32"),n=i(e,"float32");return(0,a.P)(t,n)}const n=(0,r.wT)((0,r.NA)(e),t);return s.BV.makeTensor(n,e,t)}},9635:(e,t,n)=>{"use strict";n.d(t,{P:()=>i});var s=n(3421),r=n(5202),a=n(8516);const i=(0,n(128).op)({zerosLike_:function(e){const t={x:(0,a._1)(e,"x","zerosLike")};return s.BV.runKernel(r.Ru,t)}})},1313:(e,t,n)=>{"use strict";n.d(t,{es:()=>y,YD:()=>h,_w:()=>w,t3:()=>x,FZ:()=>b,Vp:()=>g,Vi:()=>m});var s=n(7944),r=n(9740);function a(e,t,n,s){const a=(0,r.e3)(t),o=function(e,t,n,s){const a=(0,r.NA)(t),o=s[s.length-1],l=new Array(o).fill(0),c=t.length,h="complex64"===n?u(e):e;if(c>1)for(let e=0;e<a/o;e++){const t=e*o;for(let e=0;e<o;e++)l[e]=Math.max(l[e],i(h[t+e],0,n).length)}return l}(e,t,n,a),c=t.length,h=l(e,t,n,a,o),p=["Tensor"];return s&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${c}`),p.push(`  shape: [${t}]`),p.push("  values:")),p.push(h.map((e=>"    "+e)).join("\n")),p.join("\n")}function i(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:(0,r.HD)(e)?`'${e}'`:"bool"===n?o(e):parseFloat(e.toFixed(7)).toString(),(0,r.oj)(s,t)}function o(e){return 0===e?"false":"true"}function l(e,t,n,s,r,a=!0){const c="complex64"===n?2:1,h=t[0],p=t.length;if(0===p)return"complex64"===n?[i(u(e)[0],0,n)]:"bool"===n?[o(e[0])]:[e[0].toString()];if(1===p){if(h>20){const t=3*c;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((h-3)*c,h*c));return"complex64"===n&&(s=u(s),a=u(a)),["["+s.map(((e,t)=>i(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>i(e,r[h-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?u(e):Array.from(e)).map(((e,t)=>i(e,r[t],n))).join(", ")+"]"]}const d=t.slice(1),f=s.slice(1),m=s[0]*c,g=[];if(h>20){for(let t=0;t<3;t++){const s=t*m,a=s+m;g.push(...l(e.slice(s,a),d,n,f,r,!1))}g.push("...");for(let t=h-3;t<h;t++){const s=t*m,a=s+m;g.push(...l(e.slice(s,a),d,n,f,r,t===h-1))}}else for(let t=0;t<h;t++){const s=t*m,a=s+m;g.push(...l(e.slice(s,a),d,n,f,r,t===h-1))}const b=2===p?",":"";g[0]="["+g[0]+b;for(let e=1;e<g.length-1;e++)g[e]=" "+g[e]+b;let y=",\n";for(let e=2;e<p;e++)y+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(a?"":y),g}function u(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}var c=n(4959);class h{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=r.NA(e),null!=n){const e=n.length;r.hu(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(t,this.size),this.strides=(0,r.e3)(e)}set(e,...t){0===t.length&&(t=[0]),r.hu(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return p().makeTensor(this.values,this.shape,this.dtype)}}let p=null,d=null,f=null;function m(e){p=e}function g(e){d=e}function b(e){f=e}class y{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=r.NA(e),this.strides=(0,r.e3)(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return d.buffer(this.shape,this.dtype,e)}bufferSync(){return d.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return(0,r.GX)(this.shape,e,"complex64"===this.dtype)}arraySync(){return(0,r.GX)(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=p().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=p().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>c.decodeString(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await p().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(p().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return d.print(this,e)}clone(){return this.throwIfDisposed(),d.clone(this)}toString(e=!1){return a(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),d.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),p().makeVariable(this,e,t,n)}}function x(){return(0,s.R)("Tensor",(()=>y))}Object.defineProperty(y,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),x();class w extends y{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);p().disposeTensor(this),this.dataId=e.dataId,p().incRef(this,null)}dispose(){p().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(w,Symbol.hasInstance,{value:e=>e instanceof y&&null!=e.assign&&e.assign instanceof Function})},9201:(e,t,n)=>{"use strict";n.r(t),n.d(t,{makeTypesMatch:()=>i,assertTypesMatch:()=>o,isTensorInList:()=>l,getTensorsInContainer:()=>u});var s=n(1313),r=n(7139),a=n(9740);function i(e,t){if(e.dtype===t.dtype)return[e,t];const n=(0,r.x8)(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function o(e,t){(0,a.hu)(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function l(e,t){return t.some((t=>t.id===e.id))}function u(e){const t=[];return c(e,t,new Set),t}function c(e,t,n){if(null==e)return;if(e instanceof s.es)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const s=a[e];n.has(s)||(n.add(s),c(s,t,n))}}},8516:(e,t,n)=>{"use strict";n.d(t,{C:()=>l,_1:()=>h,sI:()=>p});var s=n(3421),r=n(3535),a=n(1313),i=n(9740),o=n(4959);function l(e,t){let n=e;if((0,i.fU)(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||(0,i.fU)(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&(0,r.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&u(e,s,[]),s}function u(e,t,n){if(n=n||[],!Array.isArray(e)&&!(0,i.fU)(e))return void(0,i.hu)(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));(0,i.hu)(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),(0,i.hu)(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)u(e[t],s,n.concat(t))}function c(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function h(e,t,n,r="numeric"){if(e instanceof a.es)return c(r,e.dtype,t,n),e;let u=(0,i.D2)(e);if("string"!==u&&["bool","int32","float32"].indexOf(r)>=0&&(u=r),c(r,u,t,n),null==e||!(0,i.fU)(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const h=l(e,u);(0,i.fU)(e)||Array.isArray(e)||(e=[e]);const p="string"!==u?(0,o.toTypedArray)(e,u):(0,i.xH)(e,[],!0);return s.BV.makeTensor(p,h,u)}function p(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>h(e,`${t}[${r}]`,n,s)))}},7139:(e,t,n)=>{"use strict";var s,r,a,i,o;n.d(t,{x8:()=>u,z4:()=>c}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(s||(s={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(r||(r={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(a||(a={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(i||(i={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(o||(o={}));const l={float32:i,int32:r,bool:a,complex64:o};function u(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return l[e][t]}function c(e){return u(e,"int32")}},4959:(e,t,n)=>{"use strict";n.r(t),n.d(t,{arraysEqual:()=>r.cO,assert:()=>r.hu,assertNonNegativeIntegerDimensions:()=>r.Mu,assertNonNull:()=>r.Cq,assertShapesMatch:()=>r.k5,bytesFromStringArray:()=>r.Ub,bytesPerElement:()=>r.bT,checkConversionForErrors:()=>r.D5,clamp:()=>r.uZ,computeStrides:()=>r.e3,createShuffledIndices:()=>r.U$,distSquared:()=>r.E7,flatten:()=>r.xH,getArrayFromDType:()=>r.rQ,getTypedArrayFromDType:()=>r.WP,hasEncodingLoss:()=>r.QB,indexToLoc:()=>r.NE,inferDtype:()=>r.D2,inferFromImplicitShape:()=>r.JZ,isBoolean:()=>r.jn,isFunction:()=>r.mf,isInt:()=>r.GN,isNumber:()=>r.hj,isPromise:()=>r.tI,isScalarShape:()=>r.N9,isString:()=>r.HD,isTypedArray:()=>r.fU,isValidDtype:()=>r.LP,locToIndex:()=>r.qy,makeOnesTypedArray:()=>r.p8,makeZerosNestedTypedArray:()=>r.l6,makeZerosTypedArray:()=>r.wT,nearestDivisor:()=>r.jP,nearestLargerEven:()=>r.nY,parseAxisParam:()=>r.EC,randUniform:()=>r.bj,repeatedTry:()=>r.WD,rightPad:()=>r.oj,shuffle:()=>r.TV,shuffleCombo:()=>r.d7,sizeFromShape:()=>r.NA,sizeToSquarishShape:()=>r.YP,squeezeShape:()=>r.bp,sum:()=>r.Sm,tanh:()=>r.AE,toNestedArray:()=>r.GX,createScalarValue:()=>a,toTypedArray:()=>i,now:()=>o,fetch:()=>l,encodeString:()=>u,decodeString:()=>c});var s=n(3535),r=n(9740);function a(e,t){return"string"===t?u(e):i([e],t)}function i(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=r.xH(e)),(0,s.OB)().getBool("DEBUG")&&r.D5(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function o(){return(0,s.OB)().platform.now()}function l(e,t){return(0,s.OB)().platform.fetch(e,t)}function u(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.encode(e,t)}function c(e,t="utf-8"){return t=t||"utf-8",(0,s.OB)().platform.decode(e,t)}},9740:(e,t,n)=>{"use strict";function s(e){let t=e.length,n=0,s=0;for(;t>0;)s=Math.random()*t|0,t--,n=e[t],e[t]=e[s],e[s]=n}function r(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,s,r=e.length,a=0;for(;r>0;)a=Math.random()*r|0,r--,n=e[r],s=t[r],e[r]=e[a],t[r]=t[a],e[a]=n,t[a]=s}function a(e,t,n){return Math.max(e,Math.min(t,n))}function i(e){return e%2==0?e:e+1}function o(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function l(e,t){const n=Math.random();return t*n+(1-n)*e}function u(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function c(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function h(e,t,n=""){c(g(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function p(e){c(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function d(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||A(e)&&!n)for(let s=0;s<e.length;++s)d(e[s],t,n);else t.push(e);return t}function f(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function m(e){return 0===e.length}function g(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function b(e){return e%1==0}function y(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function x(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function w(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return s(t),t}function v(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function k(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function C(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function I(e,t){const n=t.length;return c((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),c(e.every((e=>b(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function $(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:I(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function S(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function E(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function N(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function T(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function R(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function A(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function D(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function F(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function _(e){return"string"==typeof e||e instanceof String}function O(e){return"boolean"==typeof e}function L(e){return"number"==typeof e}function z(e){return Array.isArray(e)?z(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":L(e)?"float32":_(e)?"string":O(e)?"bool":"float32"}function B(e){return!!(e&&e.constructor&&e.call&&e.apply)}function M(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function U(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function P(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=P(e+t*o,i,n,s)}return r}function W(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return P(0,e,t,n)}function V(e,t){const n=G(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function G(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function H(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return W(e,new Float32Array(n));if("int32"===t)return W(e,new Int32Array(n));if("bool"===t)return W(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function j(e){e.forEach((t=>{c(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function X(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function q(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function K(e){return e&&e.then&&"function"==typeof e.then}n.d(t,{TV:()=>s,d7:()=>r,uZ:()=>a,nY:()=>i,Sm:()=>o,bj:()=>l,E7:()=>u,hu:()=>c,k5:()=>h,Cq:()=>p,xH:()=>d,NA:()=>f,N9:()=>m,cO:()=>g,GN:()=>b,AE:()=>y,YP:()=>x,U$:()=>w,oj:()=>v,WD:()=>k,JZ:()=>C,EC:()=>I,bp:()=>$,WP:()=>S,rQ:()=>E,D5:()=>N,LP:()=>T,QB:()=>R,fU:()=>A,bT:()=>D,Ub:()=>F,HD:()=>_,jn:()=>O,hj:()=>L,D2:()=>z,mf:()=>B,jP:()=>M,e3:()=>U,GX:()=>W,p8:()=>V,wT:()=>G,l6:()=>H,Mu:()=>j,qy:()=>X,NE:()=>q,tI:()=>K})},521:(e,t,n)=>{var s=n(8421),r=n(2824),a=n(244),i=n(330),o=n(5028),l=n(3929),u=n(3154);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},8421:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},3929:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},2824:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},5028:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},330:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},244:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},3154:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=b(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,b(y(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function b(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,b(a.random(),r),e.exports){e.exports=d;try{i=n(660)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)}}]);