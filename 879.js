/*! For license information please see 879.js.LICENSE.txt */
(self.webpackChunk_dev_web=self.webpackChunk_dev_web||[]).push([[879],{313:(e,t,n)=>{var r=n(421),s=n(824),a=n(244),i=n(330),o=n(28),l=n(929),u=n(154);u.alea=r,u.xor128=s,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},421:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.alea=l}(0,e=n.nmd(e),n.amdD)},929:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.tychei=l}(0,e=n.nmd(e),n.amdD)},824:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor128=l}(0,e=n.nmd(e),n.amdD)},28:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],l=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,l=Math.max(l,t.length)),s=0,a=-32;a<l;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},330:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},244:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=l:n.amdD&&n.amdO?void 0===(r=function(){return l}.call(t,n,t,s))||(s.exports=r):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},154:(e,t,n)=>{var r;!function(s,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,d=255;function p(e,t,n){var r=[],d=b(m((t=1==t?{entropy:!0}:t||{}).entropy?[e,y(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),y(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,y(s)]}}():e,3),r),p=new f(r),w=function(){for(var e=p.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=p.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|p.g(4)},w.quick=function(){return p.g(4)/4294967296},w.double=w,b(y(p.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,p),e.state=function(){return g(p,{})}),n?(a.random=e,t):e})(w,d,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<l;)i[s]=s++;for(s=0;s<l;s++)i[s]=i[a=d&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=d&s+1],n=n*l+i[d&(i[s]=i[a=d&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(l)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function m(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(m(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function b(e,t){for(var n,r=e+"",s=0;s<r.length;)t[d&s]=d&(n^=19*t[d&s])+r.charCodeAt(s++);return y(t)}function y(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=p,b(a.random(),s),e.exports){e.exports=p;try{i=n(660)}catch(e){}}else void 0===(r=function(){return p}.call(t,n,t,e))||(e.exports=r)}([],Math)},435:(e,t,n)=>{"use strict";n.d(t,{Ue:()=>sy});var r=n(966),s=n(467);function a(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function i(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function o(e,t,n=""){i(h(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function l(e){i(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function u(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||f(e)&&!n)for(let r=0;r<e.length;++r)u(e[r],t,n);else t.push(e);return t}function c(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function h(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function d(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function p(e,t){const n=t.length;return i((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),i(e.every((e=>e%1==0)),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function f(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function g(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function m(e){return"string"==typeof e||e instanceof String}function b(e){return Array.isArray(e)?b(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":"number"==typeof e?"float32":m(e)?"string":"boolean"==typeof e?"bool":"float32"}function y(e){return!!(e&&e.constructor&&e.call&&e.apply)}function w(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function x(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=x(e+t*o,i,n,r)}return s}function v(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return x(0,e,t,n)}function k(e,t){const n=I(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function I(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function S(e){e.forEach((t=>{i(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function $(e){return e&&e.then&&"function"==typeof e.then}class E{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=C,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if($(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function C(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function N(){return A}let T,A=null;function R(){if(null==T){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}T=e}return T}function D(e,t){const n=function(){const e=R();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const F="Cast",_="Identity",O="Tile",L=D("kernelRegistry",(()=>new Map)),M=D("gradRegistry",(()=>new Map));function z(e,t){const n=function(e,t){return`${t}_${e}`}(e,t);return L.get(n)}function B(e){return M.get(e)}function P(e){const t=L.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function U(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=u(e)),N().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function W(){return N().platform.now()}function V(e,t="utf-8"){return t=t||"utf-8",N().platform.decode(e,t)}class G{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new H)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=W();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:W()-i})}if(N().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{j(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function j(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class H{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?d(`${r}ms`,9):r.error,o=d(e,25),l=t.rank,u=t.size,c=d(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function K(e,t,n,r){const s=w(t),a=function(e,t,n,r){const s=c(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?J(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],q(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Y(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function q(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:m(e)?`'${e}'`:"bool"===n?X(e):parseFloat(e.toFixed(7)).toString(),d(r,t)}function X(e){return 0===e?"false":"true"}function Y(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[q(J(e)[0],0,n)]:"bool"===n?[X(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=J(r),a=J(a)),["["+r.map(((e,t)=>q(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>q(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?J(e):Array.from(e)).map(((e,t)=>q(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...Y(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...Y(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...Y(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function J(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Z{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=c(e),null!=n){const e=n.length;i(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}(t,this.size),this.strides=w(e)}set(e,...t){0===t.length&&(t=[0]),i(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Q().makeTensor(this.values,this.shape,this.dtype)}}let Q=null,ee=null,te=null;class ne{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=c(e),this.strides=w(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ee.buffer(this.shape,this.dtype,e)}bufferSync(){return ee.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return v(this.shape,e,"complex64"===this.dtype)}arraySync(){return v(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Q().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>V(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Q().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>V(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Q().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Q().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ee.print(this,e)}clone(){return this.throwIfDisposed(),ee.clone(this)}toString(e=!1){return K(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ee.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Q().makeVariable(this,e,t,n)}}Object.defineProperty(ne,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),D("Tensor",(()=>ne));class re extends ne{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!h(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Q().disposeTensor(this),this.dataId=e.dataId,Q().incRef(this,null)}dispose(){Q().disposeVariable(this),this.isDisposedInternal=!0}}var se,ae,ie,oe,le;Object.defineProperty(re,Symbol.hasInstance,{value:e=>e instanceof ne&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(se||(se={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ae||(ae={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(ie||(ie={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(oe||(oe={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(le||(le={}));const ue={float32:oe,int32:ae,bool:ie,complex64:le};function ce(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ue[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function he(e,t){return t.some((t=>t.id===e.id))}function de(e){const t=[];return pe(e,t,new Set),t}function pe(e,t,n){if(null==e)return;if(e instanceof ne)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),pe(r,t,n))}}function fe(e){return null!=e.kernelName}class ge{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class me{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ge}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new G(this.backendInstance),!0}setupRegisteredKernels(){P(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){P(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof class{refCount(e){return a("refCount")}incRef(e){return a("incRef")}timerAvailable(){return!0}time(e){return a("time")}read(e){return a("read")}readSync(e){return a("readSync")}numDataIds(){return a("numDataIds")}disposeData(e,t){return a("disposeData")}write(e,t,n){return a("write")}move(e,t,n,r,s){return a("move")}memory(){return a("memory")}floatPrecision(){return a("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return a("dispose")}}||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return me.nextTensorId++}nextVariableId(){return me.nextVariableId++}clone(e){const t=ye.runKernel(_,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return ye.runKernel(F,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==z(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let o,l;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=fe(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(fe(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=z(t,this.backendName);i(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),o=()=>{const e=this.backend.numDataIds();l=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(l)?l:[l];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const o=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,o);n=this.saveTensorsForBackwardMode(e)}return o}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};o=()=>{const e=this.backend.numDataIds();l=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(l)?l:[l];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:c,attrs:h}=e,d=fe(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,c,(()=>o())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=o()})),r&&this.addTapeNode(u,c,t,d,n,h),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(c).map((e=>null!=c[e]?c[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(l)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=B(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(i(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const o=n.filter(((e,t)=>s[t]));return a.concat(o)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&m(e[0])&&(s=e.map((e=>function(e,t="utf-8"){return t=t||"utf-8",N().platform.encode(e,t)}(e))));const a=r.write(s,t,n),i=new ne(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new ne(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new re(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*g(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof re||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*g(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=B(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=I(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=de(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(i(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));i(s instanceof ne,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=k(c(e),"float32");return ye.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!h(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),we);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return i(y(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;i(t.every((e=>e instanceof ne)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),i(n.value instanceof ne,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),i(y(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];i(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),i(a.every((e=>e instanceof ne)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const o={};return a.forEach(((e,t)=>{o[t]=()=>e})),o},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=W(),n=await this.backend.time(e);return n.wallMs=W()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ge;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function be(){const e=R();if(null==e._tfengine){const t=new E(e);e._tfengine=new me(t)}var t;return t=e._tfengine.ENV,A=t,Q=()=>e._tfengine,e._tfengine}me.nextTensorId=0,me.nextVariableId=0;const ye=be();function we(e,t){const n={a:e,b:t};return ye.runKernel("Add",n)}const xe=N();xe.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xe.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),xe.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),xe.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xe.registerFlag("PROD",(()=>!1)),xe.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xe.getBool("DEBUG"))),xe.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xe.registerFlag("IS_TEST",(()=>!1)),xe.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),xe.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const ve="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function ke(e){return ve?Buffer.byteLength(e):new Blob([e]).size}function Ie(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Se(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:ke(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:ke(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}class $e{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==$e.instance&&($e.instance=new $e),$e.instance}static registerSaveRouter(e){$e.getInstance().saveRouters.push(e)}static registerLoadRouter(e){$e.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return $e.getHandlers(e,"save")}static getLoadHandlers(e,t){return $e.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?$e.getInstance().loadRouters:$e.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Ee="tensorflowjs",Ce="models_store",Ne="model_info_store";function Te(){if(!N().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ae(e){const t=e.result;t.createObjectStore(Ce,{keyPath:"modelPath"}),t.createObjectStore(Ne,{keyPath:"modelPath"})}class Re{constructor(e){if(this.indexedDB=Te(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(Ee,1);r.onupgradeneeded=()=>Ae(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ce,"readonly"),r=t.objectStore(Ce).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Se(t),a=s.transaction(Ne,"readwrite");let i=a.objectStore(Ne);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Ce,"readwrite");const o=l.objectStore(Ce).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Ne);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Re.URL_SCHEME="indexeddb://";const De=e=>{return N().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Re.URL_SCHEME)?(t=e.slice(Re.URL_SCHEME.length),new Re(t)):null;var t};$e.registerSaveRouter(De),$e.registerLoadRouter(De);class Fe{constructor(){this.indexedDB=Te()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ee,1);n.onupgradeneeded=()=>Ae(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Ne,"readonly"),a=s.objectStore(Ne).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Re.URL_SCHEME)?t.slice(Re.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(Ee,1);r.onupgradeneeded=()=>Ae(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Ne,"readwrite"),i=a.objectStore(Ne),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Ce,"readwrite");const r=l.objectStore(Ce).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const _e="/",Oe="tensorflowjs_models",Le="info",Me="model_topology",ze="weight_specs",Be="weight_data",Pe="model_metadata";function Ue(e){return{info:[Oe,e,Le].join(_e),topology:[Oe,e,Me].join(_e),weightSpecs:[Oe,e,ze].join(_e),weightData:[Oe,e,Be].join(_e),modelMetadata:[Oe,e,Pe].join(_e)}}function We(e){const t=e.split(_e);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(_e)}class Ve{constructor(e){if(!N().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ue(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Se(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(ve)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(ve){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Ve.URL_SCHEME="localstorage://";const Ge=e=>{return N().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ve.URL_SCHEME)?(t=e.slice(Ve.URL_SCHEME.length),new Ve(t)):null;var t};$e.registerSaveRouter(Ge),$e.registerLoadRouter(Ge);class je{constructor(){i(N().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),i("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Oe+_e,n=_e+Le;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[We(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ue(e=(t=e).startsWith(Ve.URL_SCHEME)?t.slice(Ve.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class He{constructor(){this.managers={}}static getInstance(){return null==He.instance&&(He.instance=new He),He.instance}static registerManager(e,t){i(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),i(e.length>0,(()=>"scheme must not be an empty string."));const n=He.getInstance();i(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ke{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(N().get("IS_BROWSER")){N().setPlatform("browser",new Ke);try{He.registerManager(Ve.URL_SCHEME,new je)}catch(e){}try{He.registerManager(Re.URL_SCHEME,new Fe)}catch(e){}}let qe;function Xe(e,t="float32",n){return t=t||"float32",S(e),new Z(e,t,n)}function Ye(e,t){let n=e;if(f(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||f(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&N().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Je(e,r,[]),r}function Je(e,t,n){if(n=n||[],!Array.isArray(e)&&!f(e))return void i(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));i(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),i(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)Je(e[t],r,n.concat(t))}function Ze(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Qe(e,t,n,r="numeric"){if(e instanceof ne)return Ze(r,e.dtype,t,n),e;let s=b(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),Ze(r,s,t,n),null==e||!f(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=Ye(e,s);f(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?U(e,s):u(e,[],!0);return ye.makeTensor(i,a,s)}function et(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Qe(e,`${t}[${s}]`,n,r)))}function tt(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{ye.startScope(n);try{const t=r(...e);return $(t)&&console.error("Cannot return a Promise inside of tidy."),ye.endScope(t),t}catch(e){throw ye.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}N().get("IS_NODE")&&N().setPlatform("node",new class{constructor(){this.util=n(606),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=N().global.fetch?N().global.fetch(e,t):(null==qe&&(qe=n(46)),qe(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const nt=tt({cast_:function(e,t){const n=Qe(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return ye.runKernel(F,r,s)}}),rt=tt({clone_:function(e){const t={x:Qe(e,"x","clone","string_or_numeric")};return ye.runKernel(_,t)}});function st(e){return new Promise((e=>setTimeout(e))).then(e)}be(),ee={buffer:Xe,cast:nt,clone:rt,print:function(e,t=!1){console.log(e.toString(t))}};class at{constructor(e){if(!N().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(at.URL_SCHEME)&&(e=e.slice(at.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await st((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await st((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Se(e)}}}}function it(e,t,n,r){!function(e){i(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){i(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),i(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),i(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ot(e,t){null==t&&(t={});const n=null==t.fetchFunc?N().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await it(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await it(s,t.onProgress,.5,1)}at.URL_SCHEME="downloads://",$e.registerSaveRouter((e=>N().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(at.URL_SCHEME)?function(e="model"){return new at(e)}(e.slice(at.URL_SCHEME.length)):null));class lt{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(i("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=N().platform.fetch,i(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&i(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Se(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Ie(await ot(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ut(e){return null!=e.match(lt.URL_SCHEME_REGEX)}lt.URL_SCHEME_REGEX=/^https?:\/\//;const ct=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>ut(e))):ut(e),n)return function(e,t){return new lt(e,t)}(e,t)}return null};$e.registerSaveRouter(ct),$e.registerLoadRouter(ct);const ht=tt({stack_:function(e,t=0){const n=et(e,"tensors","stack","string_or_numeric");i(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&i(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return ye.runKernel("Pack",r,s)}});function dt(e,t,n,r){if(null==r&&(r=b(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!f(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){S(t);const e=c(t),r=c(n);i(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==c(t.slice(e));i(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return f(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?U(e,r):u(e,[],!0),ye.makeTensor(e,t,r)}function pt(e,t,n){return dt(e,t,Ye(e,n),n)}const ft=tt({complex_:function(e,t){const n=Qe(e,"real","complex"),r=Qe(t,"imag","complex");o(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return ye.runKernel("Complex",s)}}),gt=tt({concat_:function(e,t=0){i(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=et(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return rt(n[0]);const r=n,s={axis:t};return ye.runKernel("Concat",r,s)}}),mt=tt({imag_:function(e){const t={input:Qe(e,"input","imag")};return ye.runKernel("Imag",t)}}),bt=tt({real_:function(e){const t={input:Qe(e,"input","real")};return ye.runKernel("Real",t)}}),yt=tt({reshape_:function(e,t){const n={x:Qe(e,"x","reshape","string_or_numeric")},r={shape:t};return ye.runKernel("Reshape",n,r)}}),wt=tt({slice_:function(e,t,n){const r=Qe(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return ye.runKernel("Slice",s,a)}}),xt=tt({split_:function(e,t,n=0){const r={x:Qe(e,"x","split")},s={numOrSizeSplits:t,axis:n};return ye.runKernel("SplitV",r,s)}});function vt(e,t="float32"){if("complex64"===t){const t=vt(e,"float32"),n=vt(e,"float32");return ft(t,n)}const n=I(c(e),t);return ye.makeTensor(n,e,t)}const kt=tt({zerosLike_:function(e){const t={x:Qe(e,"x","zerosLike")};return ye.runKernel("ZerosLike",t)}}),It=tt({fft_:function(e){i("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ye.runKernel("FFT",t)}}),St=tt({rfft_:function(e,t){i("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=wt(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=gt([e,vt(r)],e.shape.length-1),n=t}else s=e;const a=kt(s),o=yt(ft(s,a),[r,n]),l=It(o),u=Math.floor(n/2)+1,c=bt(l),h=mt(l),d=xt(c,[u,n-u],c.shape.length-1),p=xt(h,[u,n-u],h.shape.length-1),f=s.shape.slice();return f[s.shape.length-1]=u,yt(ft(d[0],p[0]),f)}}),$t=tt({ifft_:function(e){i("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return ye.runKernel("IFFT",t)}}),Et=tt({mul_:function(e,t){let n=Qe(e,"a","mul"),r=Qe(t,"b","mul");[n,r]=ce(n,r);const s={a:n,b:r};return ye.runKernel("Multiply",s)}}),Ct=tt({reverse_:function(e,t){const n={x:Qe(e,"x","reverse")},r={dims:t};return ye.runKernel("Reverse",n,r)}});function Nt(e,t){if((f(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&f(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return dt(e,[],[],t)}function Tt(e,t){l(e);const n=Ye(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return dt(e,null,n,t)}function At(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Tt(s,"float32")}tt({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=yt(e,[n,t]);r=$t(s)}else{const s=[n,2*(t-1)],a=yt(bt(e),[n,t]),i=yt(mt(e),[n,t]),o=Ct(wt(a,[0,1],[n,t-2]),1),l=Et(Ct(wt(i,[0,1],[n,t-2]),1),Nt(-1)),u=gt([a,o],1),c=gt([i,l],1),h=yt(ft(u,c),[s[0],s[1]]);r=$t(h)}if(r=bt(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=yt(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),tt({hammingWindow_:function(e){return At(e,.54,.46)}});const Rt=tt({hannWindow_:function(e){return At(e,.5,.5)}});function Dt(e,t,n){const r={shape:e,value:t,dtype:n};return ye.runKernel("Fill",{},r)}function Ft(e,t,n){if(l(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ye(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return dt(e,t,r,n)}const _t=tt({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(wt(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=gt([wt(e,a,t-r),Dt([r],s)]);i.push(o),a+=n}return 0===i.length?Ft([],[0,t]):yt(gt(i),[i.length,t])}});function Ot(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const o=e.shape[0];return n=Math.min(n,o),i(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),i(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),i(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),i(1===t.rank,(()=>"scores must be a 1D tensor")),i(t.shape[0]===o,(()=>`scores has incompatible shape with boxes. Expected ${o}, but was ${t.shape[0]}`)),i(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}tt({stft_:function(e,t,n,r,s=Rt){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=_t(e,t,n),o=Et(i,s(t));return St(o,r)}}),tt({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const o=Qe(e,"image","cropAndResize"),l=Qe(t,"boxes","cropAndResize","float32"),u=Qe(n,"boxInd","cropAndResize","int32"),c=l.shape[0];i(4===o.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${o.rank}.`)),i(2===l.rank&&4===l.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${l.shape}.`)),i(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${l.shape}.`)),i(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),i(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),i("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const h={image:o,boxes:l,boxInd:u},d={method:s,extrapolationValue:a,cropSize:r};return ye.runKernel("CropAndResize",h,d)}}),tt({flipLeftRight_:function(e){const t=Qe(e,"image","flipLeftRight","float32");i(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return ye.runKernel("FlipLeftRight",n,{})}}),tt({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Qe(e,"image","rotateWithOffset","float32");i(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},o={radians:t,fillValue:n,center:r};return ye.runKernel("RotateWithOffset",a,o)}}),tt({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Qe(e,"boxes","nonMaxSuppression"),i=Qe(t,"scores","nonMaxSuppression"),o=Ot(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return ye.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},l)}}),tt({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Qe(e,"boxes","nonMaxSuppression"),o=Qe(t,"scores","nonMaxSuppression"),l=Ot(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=ye.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),tt({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Qe(e,"boxes","nonMaxSuppression"),o=Qe(t,"scores","nonMaxSuppression"),l=Ot(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=ye.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),tt({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Qe(e,"images","resizeBilinear");i(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),i(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),i(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=yt(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},c=ye.runKernel("ResizeBilinear",l,u);return o?yt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),tt({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Qe(e,"images","resizeNearestNeighbor");i(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),i(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),i("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),i(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,o=!1;3===s.rank&&(o=!0,a=yt(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,l={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},c=ye.runKernel("ResizeNearestNeighbor",l,u);return o?yt(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});const Lt=tt({bincount_:function(e,t,n){const r=Qe(e,"x","bincount"),s=Qe(t,"weights","bincount");i("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),i(n>=0,(()=>`size must be non-negative, but got ${n}.`)),i(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},o={size:n};return ye.runKernel("Bincount",a,o)}});function Mt(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const zt=tt({lessEqual_:function(e,t){let n=Qe(e,"a","lessEqual"),r=Qe(t,"b","lessEqual");[n,r]=ce(n,r),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("LessEqual",s)}}),Bt=tt({greater_:function(e,t){let n=Qe(e,"a","greater"),r=Qe(t,"b","greater");[n,r]=ce(n,r),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("Greater",s)}}),Pt=tt({sum_:function(e,t=null,n=!1){let r=Qe(e,"x","sum");"bool"===r.dtype&&(r=nt(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return ye.runKernel("Sum",s,a)}}),Ut=tt({add_:function(e,t){let n=Qe(e,"a","add"),r=Qe(t,"b","add");[n,r]=ce(n,r);const s={a:n,b:r};return ye.runKernel("Add",s)}}),Wt=tt({floorDiv_:function(e,t){let n=Qe(e,"a","floorDiv"),r=Qe(t,"b","floorDiv");[n,r]=ce(n,r);const s={a:n,b:r};return ye.runKernel("FloorDiv",s)}}),Vt=tt({div_:function(e,t){let n=Qe(e,"a","div"),r=Qe(t,"b","div");if([n,r]=ce(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Wt(n,r);const s={a:n,b:r};return ye.runKernel("RealDiv",s,{})}}),Gt=tt({sub_:function(e,t){let n=Qe(e,"a","sub"),r=Qe(t,"b","sub");[n,r]=ce(n,r);const s={a:n,b:r};return ye.runKernel("Sub",s)}}),jt=tt({round_:function(e){const t={x:Qe(e,"x","round")};return ye.runKernel("Round",t)}}),Ht=tt({broadcastTo_:function(e,t){let n=Qe(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=yt(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return rt(n);const i={x:n},o={reps:a};return ye.runKernel(O,i,o)}}),Kt=tt({where_:function(e,t,n){const r=Qe(t,"a","where"),s=Qe(n,"b","where"),a=Qe(e,"condition","where","bool"),i=Mt(Mt(a.shape,r.shape),s.shape),o={condition:Ht(a,i),t:Ht(r,i),e:Ht(s,i)};return ye.runKernel("Select",o)}});function qt(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return ye.runKernel("Range",{},s)}tt({threshold_:function(e,t="binary",n=!1,r=.5){const s=Qe(e,"image","threshold"),a=s.shape[0]*s.shape[1];let o,l,u,c,h=Et(Tt([r]),255);if(i(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),i(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),i("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),i("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[o,l,u]=xt(s,[1,1,1],-1);const e=Et(o,.2989),t=Et(l,.587),n=Et(u,.114);c=Ut(Ut(e,t),n)}else c=e;"otsu"===t&&(h=function(e,t){let n,r,s,a,i,o,l=Tt([-1]),u=Tt([0]),c=Tt([0]);for(let h=0;h<e.size-1;h++){n=wt(e,0,h+1),r=wt(e,h+1),i=Vt(Pt(n),t),o=Vt(Pt(r),t);const d=Pt(Et(n,qt(0,n.size)));s=Vt(d,Pt(n));const p=Dt(r.shape,n.size),f=Ut(qt(0,r.size),p),g=Et(r,f);a=Vt(Pt(g),Pt(r));const m=Gt(s,a),b=Gt(s,a),y=Et(i,o);c=Et(Et(y,m),b);const w=Bt(c,u);u=Kt(w,c,u),l=Kt(w,Tt([h]),l)}return l}(Lt(nt(jt(c),"int32"),pt([]),256),a));const d=n?zt(c,h):Bt(c,h);return nt(Et(d,255),"int32")}}),tt({transform_:function(e,t,n="nearest",r="constant",s=0,a){const o=Qe(e,"image","transform","float32"),l=Qe(t,"transforms","transform","float32");i(4===o.rank,(()=>`Error in transform: image must be rank 4,but got rank ${o.rank}.`)),i(2===l.rank&&(l.shape[0]===o.shape[0]||1===l.shape[0])&&8===l.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),i(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:o,transforms:l},c={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return ye.runKernel("Transform",u,c)}});const Xt=tt({greaterEqual_:function(e,t){let n=Qe(e,"a","greaterEqual"),r=Qe(t,"b","greaterEqual");[n,r]=ce(n,r),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("GreaterEqual",s)}}),Yt=tt({logicalAnd_:function(e,t){const n=Qe(e,"a","logicalAnd","bool"),r=Qe(t,"b","logicalAnd","bool");Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("LogicalAnd",s)}}),Jt=tt({unstack_:function(e,t=0){const n=Qe(e,"x","unstack","string_or_numeric");i(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return ye.runKernel("Unpack",r,s)}});tt({bandPart_:function(e,t,n){i(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),i(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Qe(e,"a","bandPart");i(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,o]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=o))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${o}).`);t<0&&(t=a),n<0&&(n=o);const l=yt(qt(0,a,1,"int32"),[-1,1]),u=qt(0,o,1,"int32"),c=Gt(l,u),h=Yt(zt(c,Nt(+t,"int32")),Xt(c,Nt(-n,"int32"))),d=vt([a,o],r.dtype);return yt(ht(Jt(yt(r,[-1,a,o])).map((e=>Kt(h,e,d)))),s)}});const Zt=tt({abs_:function(e){const t=Qe(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return ye.runKernel("ComplexAbs",e)}{const e={x:t};return ye.runKernel("Abs",e)}}});function Qt(e,t){return function(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}(e,t.map((e=>1)),t)}const en=tt({max_:function(e,t=null,n=!1){const r={x:Qe(e,"x","max")},s={reductionIndices:t,keepDims:n};return ye.runKernel("Max",r,s)}}),tn=tt({min_:function(e,t=null,n=!1){const r={x:Qe(e,"x","min")},s={axis:t,keepDims:n};return ye.runKernel("Min",r,s)}}),nn=tt({pow_:function(e,t){let n=Qe(e,"base","pow"),r=Qe(t,"exp","pow");[n,r]=ce(n,r);const s={a:n,b:r};return ye.runKernel("Pow",s)}}),rn=tt({sqrt_:function(e){const t={x:Qe(e,"x","sqrt")};return ye.runKernel("Sqrt",t)}}),sn=tt({square_:function(e){const t=Qe(e,"x","square");return ye.runKernel("Square",{x:t},{})}});function an(e,t,n=null){if(0===e.rank)return Zt(e);if(1!==e.rank&&null===n)return an(yt(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Pt(Zt(e),n);if(t===1/0)return en(Zt(e),n);if(t===-1/0)return tn(Zt(e),n);if("euclidean"===t||2===t)return rn(Pt(nn(Zt(e),Nt(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return en(Pt(Zt(e),n[0]),n[1]-1);if(t===1/0)return en(Pt(Zt(e),n[1]),n[0]);if(t===-1/0)return tn(Pt(Zt(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return rn(Pt(sn(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const on=tt({norm_:function(e,t="euclidean",n=null,r=!1){const s=an(e=Qe(e,"x","norm"),t,n);let a=s.shape;if(r){const t=p(n,e.shape);a=Qt(s.shape,t)}return yt(s,a)}}),ln=tt({squeeze_:function(e,t){const n=Qe(e,"x","squeeze");return yt(n,function(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:p(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}});function un(e,t){return ye.tidy(e,t)}function cn(e){de(e).forEach((e=>e.dispose()))}tt({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,i(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)i(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=xt(e,e.shape[0],0).map((e=>ln(e,[0])));i(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(ye.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=Et(Pt(Et(n[r],e)),n[r]);e=Gt(e,t)}return Vt(e,on(e,"euclidean"))})));return t?ht(n,0):n}}),te=function(e){N().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const hn=tt({expandDims_:function(e,t=0){const n=Qe(e,"x","expandDims","string_or_numeric");i(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return ye.runKernel("ExpandDims",r,s)}}),dn=tt({tile_:function(e,t){const n=Qe(e,"x","tile","string_or_numeric");i(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return ye.runKernel(O,r,s)}}),pn=tt({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Xe([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=yt(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return dn(hn(i,0),[n[0],1,1]);if(2===n.length)return dn(hn(hn(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return dn(hn(hn(hn(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),fn=tt({matMul_:function(e,t,n=!1,r=!1){let s=Qe(e,"a","matMul"),a=Qe(t,"b","matMul");[s,a]=ce(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return ye.runKernel("BatchMatMul",i,o)}}),gn=tt({neg_:function(e){const t={x:Qe(e,"x","neg")};return ye.runKernel("Neg",t)}}),mn=tt({transpose_:function(e,t){const n=Qe(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),i(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{i(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return ye.runKernel("Transpose",r,s)}});function bn(e,t=!1){return ye.tidy((()=>{i(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=pn(n),a=rt(e);const o=Ft([[1]],[1,1]);let l=rt(o);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,i=l,u=s;[l,a,s]=ye.tidy((()=>{const t=wt(a,[e,e],[n-e,1]),i=on(t),u=wt(a,[e,e],[1,1]),c=Kt(Bt(u,0),Ft([[-1]]),Ft([[1]])),h=Gt(u,Et(c,i)),d=Vt(t,h);l=1===d.shape[0]?rt(o):gt([o,wt(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=gn(Vt(fn(c,h),i)),f=wt(a,[e,0],[n-e,r]),g=Et(p,l),m=mn(l);if(0===e)a=Gt(f,fn(g,fn(m,f)));else{const t=Gt(f,fn(g,fn(m,f)));a=gt([wt(a,[0,0],[e,r]),t],0)}const b=mn(g),y=wt(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Gt(y,fn(fn(y,l),b));else{const t=Gt(y,fn(fn(y,l),b));s=gt([wt(s,[0,0],[n,e]),t],1)}return[l,a,s]})),cn([t,i,u])}return!t&&n>r&&(s=wt(s,[0,0],[n,r]),a=wt(a,[0,0],[r,r])),[s,a]}))}var yn;tt({qr_:function(e,t=!1){if(i(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return bn(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Jt(yt(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=bn(e,t);s.push(n),a.push(r)})),[yt(ht(s,0),e.shape),yt(ht(a,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(yn||(yn={}));const wn=tt({mean_:function(e,t=null,n=!1){const r={x:Qe(e,"x","mean")},s={axis:t,keepDims:n};return ye.runKernel("Mean",r,s)}}),xn=tt({notEqual_:function(e,t){let n=Qe(e,"a","notEqual"),r=Qe(t,"b","notEqual");[n,r]=ce(n,r),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("NotEqual",s)}});function vn(e,t="float32"){if("complex64"===t){const t=vn(e,"float32"),n=vt(e,"float32");return ft(t,n)}const n=k(c(e),t);return ye.makeTensor(n,e,t)}const kn=tt({computeWeightedLoss_:function(e,t,n=yn.SUM_BY_NONZERO_WEIGHTS){const r=Qe(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Qe(t,"weights","computeWeightedLoss"));const a=null==s?r:Et(r,s);if(n===yn.NONE)return a;if(n===yn.SUM)return Pt(a);if(n===yn.MEAN){if(null==s)return wn(a);{const e=r.size/s.size,t=Vt(Pt(a),Pt(s));return e>1?Vt(t,Nt(e)):t}}if(n===yn.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Vt(Pt(a),Nt(r.size));{const e=Et(s,vn(r.shape)),t=nt(Pt(xn(e,Nt(0))),"float32");return Vt(Pt(a),t)}}throw Error(`Unknown reduction: ${n}`)}});tt({absoluteDifference_:function(e,t,n,r=yn.SUM_BY_NONZERO_WEIGHTS){const s=Qe(e,"labels","absoluteDifference"),a=Qe(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Qe(n,"weights","absoluteDifference")),o(s.shape,a.shape,"Error in absoluteDifference: ");const l=Zt(Gt(s,a));return kn(l,i,r)}}),tt({cosineDistance_:function(e,t,n,r,s=yn.SUM_BY_NONZERO_WEIGHTS){const a=Qe(e,"labels","cosineDistance"),i=Qe(t,"predictions","cosineDistance");let l=null;null!=r&&(l=Qe(r,"weights","cosineDistance")),o(a.shape,i.shape,"Error in cosineDistance: ");const u=Nt(1),c=Gt(u,Pt(Et(a,i),n,!0));return kn(c,l,s)}});const In=tt({relu_:function(e){const t={x:Qe(e,"x","relu")};return ye.runKernel("Relu",t)}});tt({hingeLoss_:function(e,t,n,r=yn.SUM_BY_NONZERO_WEIGHTS){let s=Qe(e,"labels","hingeLoss");const a=Qe(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Qe(n,"weights","hingeLoss")),o(s.shape,a.shape,"Error in hingeLoss: ");const l=Nt(1);s=Gt(Et(Nt(2),s),l);const u=In(Gt(l,Et(s,a)));return kn(u,i,r)}});const Sn=tt({minimum_:function(e,t){let n=Qe(e,"a","minimum"),r=Qe(t,"b","minimum");[n,r]=ce(n,r),"bool"===n.dtype&&(n=nt(n,"int32"),r=nt(r,"int32")),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("Minimum",s)}});tt({huberLoss_:function(e,t,n,r=1,s=yn.SUM_BY_NONZERO_WEIGHTS){const a=Qe(e,"labels","huberLoss"),i=Qe(t,"predictions","huberLoss");let l=null;null!=n&&(l=Qe(n,"weights","huberLoss")),o(a.shape,i.shape,"Error in huberLoss: ");const u=Nt(r),c=Zt(Gt(i,a)),h=Sn(c,u),d=Gt(c,h),p=Ut(Et(Nt(.5),sn(h)),Et(u,d));return kn(p,l,s)}});const $n=tt({log_:function(e){const t={x:Qe(e,"x","log")};return ye.runKernel("Log",t)}});tt({logLoss_:function(e,t,n,r=1e-7,s=yn.SUM_BY_NONZERO_WEIGHTS){const a=Qe(e,"labels","logLoss"),i=Qe(t,"predictions","logLoss");let l=null;null!=n&&(l=Qe(n,"weights","logLoss")),o(a.shape,i.shape,"Error in logLoss: ");const u=Nt(1),c=Nt(r),h=gn(Et(a,$n(Ut(i,c)))),d=Et(Gt(u,a),$n(Ut(Gt(u,i),c))),p=Gt(h,d);return kn(p,l,s)}});const En=tt({squaredDifference_:function(e,t){let n=Qe(e,"a","squaredDifference"),r=Qe(t,"b","squaredDifference");[n,r]=ce(n,r),Mt(n.shape,r.shape);const s={a:n,b:r};return ye.runKernel("SquaredDifference",s,{})}});tt({meanSquaredError_:function(e,t,n,r=yn.SUM_BY_NONZERO_WEIGHTS){const s=Qe(e,"labels","meanSquaredError"),a=Qe(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Qe(n,"weights","meanSquaredError")),o(s.shape,a.shape,"Error in meanSquaredError: ");const l=En(s,a);return kn(l,i,r)}});const Cn=tt({exp_:function(e){const t={x:Qe(e,"x","exp")};return ye.runKernel("Exp",t)}}),Nn=tt({log1p_:function(e){const t={x:Qe(e,"x","log1p")};return ye.runKernel("Log1p",t)}});tt({sigmoidCrossEntropy_:function(e,t,n,r=0,s=yn.SUM_BY_NONZERO_WEIGHTS){let a=Qe(e,"multiClassLabels","sigmoidCrossEntropy");const i=Qe(t,"logits","sigmoidCrossEntropy");let l=null;if(null!=n&&(l=Qe(n,"weights","sigmoidCrossEntropy")),o(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=Nt(r),t=Nt(1),n=Nt(.5);a=Ut(Et(a,Gt(t,e)),Et(n,e))}const u=function(e,t){const n=Qe(e,"labels","sigmoidCrossEntropyWithLogits"),r=Qe(t,"logits","sigmoidCrossEntropyWithLogits");o(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=In(r),a=Et(r,n),i=Nn(Cn(gn(Zt(r))));return Ut(Gt(s,a),i)}(a,i);return kn(u,l,s)}});const Tn=tt({logSumExp_:function(e,t=null,n=!1){const r=Qe(e,"x","logSumExp"),s=p(t,r.shape),a=en(r,s,!0),i=Gt(r,a),o=Cn(i),l=Pt(o,s),u=$n(l),c=Ut(yt(a,u.shape),u);if(n){const e=Qt(c.shape,s);return yt(c,e)}return c}});tt({softmaxCrossEntropy_:function(e,t,n,r=0,s=yn.SUM_BY_NONZERO_WEIGHTS){let a=Qe(e,"onehotLabels","softmaxCrossEntropy");const i=Qe(t,"logits","softmaxCrossEntropy");let l=null;if(null!=n&&(l=Qe(n,"weights","softmaxCrossEntropy")),o(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=Nt(r),t=Nt(1),n=Nt(a.shape[1]);a=Ut(Et(a,Gt(t,e)),Vt(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);var r;return(r=(e,t,r)=>{const s=Tn(t,[n],!0),a=Gt(nt(t,"float32"),s);r([e,a]);const i=gn(Et(a,e));return{value:Pt(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Qt(e.shape,[n]);return[Et(yt(e,a),Gt(nt(r,"float32"),Cn(s))),Et(yt(e,a),Gt(Cn(s),nt(r,"float32")))]}}},ye.customGrad(r))(e,t)}(a,i);return kn(u,l,s)}}),tt({sparseFillEmptyRows_:function(e,t,n,r){const s=Qe(e,"indices","sparseFillEmptyRows"),a=Qe(t,"values","sparseFillEmptyRows"),i=Qe(n,"denseShape","sparseFillEmptyRows"),o=Qe(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=ye.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),tt({sparseReshape_:function(e,t,n){const r=Qe(e,"inputIndices","sparseReshape"),s=Qe(t,"inputShape","sparseReshape"),a=Qe(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=ye.runKernel("SparseReshape",i);return{outputIndices:o[0],outputShape:o[1]}}});var An,Rn=n(313);function Dn(e,t,n=new Map,r=new Set){if(null==e)return null;if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(Mn(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=Dn(e[a],t,n,r);s[a]=i}return r.delete(e),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function Fn(e,t=On){return _n(e,t)}function _n(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(Mn(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=_n(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function On(e){return null===e?null:Mn(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function Ln(e,t){const n=new Map;Dn(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if($(t)){const r=await t;n.set(e,r)}}return Dn(e,t,n)}function Mn(e){return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof ne))}function zn(e){return e instanceof ne?{value:e.clone(),recurse:!1}:Mn(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class Bn{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class Pn extends Bn{constructor(){super(Pn.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function Un(e){return new Vn(e)}Pn.INITIAL_CAPACITY=32;class Wn{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new Jn(this,e)}filter(e){return new Xn(this,e)}map(e){return new Yn(this,e)}mapAsync(e){return new Zn(this,e)}serialMapAsync(e){return new Zn(this,e).serial()}flatmap(e){return new er(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new qn(this,e,t)}columnMajorBatch(e,t=!0,n=On){return this.rowMajorBatch(e,t).map((e=>Fn(e,n)))}concatenate(e,t){return new tr(Un([this,e]),t)}take(e){return e<0||null==e?this:new Kn(this,e)}skip(e){return e<0||null==e?this:new Hn(this,e)}prefetch(e){return new rr(this,e)}shuffle(e,t){return new sr(this,e,t)}serial(){return new jn(this)}}class Vn extends Wn{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,Dn(t,zn)),done:!1};var t}}class Gn extends Wn{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class jn extends Wn{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class Hn extends Wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;cn(e.value)}return this.upstream.next()}}class Kn extends Wn{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class qn extends Wn{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class Xn extends Wn{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;cn(e.value)}}}class Yn extends Wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=de(e.value),n=this.transform(e.value),r=de(n);for(const e of t)he(e,r)||e.dispose();return{value:n,done:!1}}}class Jn extends Wn{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class Zn extends Wn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=de(e.value),n=await this.transform(e.value),r=de(n);for(const e of t)he(e,r)||e.dispose();return{value:n,done:!1}}}class Qn extends Wn{constructor(){super(),this.outputQueue=new Pn,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class er extends Qn{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=de(e.value),n=this.transform(e.value),r=de(n);this.outputQueue.pushAll(n);for(const e of t)he(e,r)||e.dispose();return!0}}class tr extends Wn{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(An||(An={}));class nr extends Wn{constructor(e,t=An.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await Ln(this.iterators,(function(e){return e instanceof Wn?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case An.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case An.SHORTEST:return{value:null,done:!0};case An.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class rr extends Wn{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new Bn(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class sr extends rr{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=Rn.alea(n||W().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class ar{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return i(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),ir((async()=>(await n.iterator()).columnMajorBatch(e,t,ur)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,ir((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,ir((async()=>(await t.iterator()).filter((t=>un((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return ir((async()=>(await t.iterator()).map((t=>un((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return ir((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return ir((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,ir((async()=>{return n=(s=async()=>({value:await t.iterator(),done:!1}),new Gn(s)).take(e),new tr(n,r);var n,r,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,ir((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=Rn.alea(t||W().toString());return ir((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,ir((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function ir(e,t=null){return new class extends ar{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function or(e){return ir((async()=>Un(e)),e.length)}function lr(e){if(!Mn(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return ir((async()=>function(e,t=An.FAIL){return new nr(e,t)}(await Ln(e,(e=>{if(e instanceof ar)return{value:e.iterator(),recurse:!1};if(Mn(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),An.SHORTEST)),t)}function ur(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof ne||f(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof ne?ht(e):pt(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}function cr(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function hr(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function dr(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function pr(e,t,n=""){dr(br(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function fr(e){dr(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function gr(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||vr(e)&&!n)for(let r=0;r<e.length;++r)gr(e[r],t,n);else t.push(e);return t}function mr(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function br(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function yr(e){return e%1==0}function wr(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function xr(e,t){const n=t.length;return dr((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),dr(e.every((e=>yr(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function vr(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function kr(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ir(e){return"string"==typeof e||e instanceof String}function Sr(e){return"number"==typeof e}function $r(e){return Array.isArray(e)?$r(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":Sr(e)?"float32":Ir(e)?"string":"boolean"==typeof e?"bool":"float32"}function Er(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Cr(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function Nr(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=Nr(e+t*o,i,n,r)}return s}function Tr(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Nr(0,e,t,n)}function Ar(e,t){const n=Rr(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Rr(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Dr(e){e.forEach((t=>{dr(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Fr(e){return e&&e.then&&"function"==typeof e.then}ar.MAX_BUFFER_SIZE=1e4,Symbol("out"),Symbol("field"),Symbol("quote"),Symbol("quoteafterquote"),Symbol("quoteinquote");class _r{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Or,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Fr(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Or(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function Lr(){return zr}let Mr,zr=null;function Br(){if(null==Mr){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Mr=e}return Mr}function Pr(e,t){const n=function(){const e=Br();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ur="Acos",Wr="Acosh",Vr="Add",Gr="ArgMax",jr="ArgMin",Hr="Asin",Kr="Asinh",qr="Atan",Xr="Atanh",Yr="Atan2",Jr="AvgPool",Zr="AvgPool3D",Qr="BatchMatMul",es="BatchToSpaceND",ts="Cast",ns="Ceil",rs="ClipByValue",ss="ComplexAbs",as="Concat",is="Conv2D",os="Conv2DBackpropInput",ls="Conv3D",us="Cosh",cs="Cumsum",hs="DepthwiseConv2dNative",ds="Dilation2D",ps="RealDiv",fs="ExpandDims",gs="Expm1",ms="Floor",bs="FloorDiv",ys="FusedBatchNorm",ws="GatherV2",xs="GreaterEqual",vs="Identity",ks="IsFinite",Is="IsInf",Ss="IsNan",$s="LeakyRelu",Es="Log1p",Cs="Maximum",Ns="MaxPool",Ts="MaxPool3D",As="Mean",Rs="Minimum",Ds="MirrorPad",Fs="Multiply",_s="OnesLike",Os="OneHot",Ls="Pack",Ms="PadV2",zs="Prelu",Bs="Reciprocal",Ps="Relu",Us="Reshape",Ws="ResizeNearestNeighbor",Vs="ResizeBilinear",Gs="Relu6",js="Reverse",Hs="Round",Ks="Rsqrt",qs="Select",Xs="Selu",Ys="Slice",Js="Sinh",Zs="Sign",Qs="Sigmoid",ea="Softplus",ta="Sqrt",na="SpaceToBatchND",ra="SplitV",sa="Softmax",aa="SquaredDifference",ia="Tanh",oa="Tile",la="Transpose",ua="Unpack",ca="UnsortedSegmentSum",ha="ZerosLike",da="Step",pa="_FusedMatMul",fa="FusedConv2D",ga="FusedDepthwiseConv2D",ma=Pr("kernelRegistry",(()=>new Map)),ba=Pr("gradRegistry",(()=>new Map));function ya(e,t){const n=function(e,t){return`${t}_${e}`}(e,t);return ma.get(n)}function wa(e){return ba.get(e)}function xa(e){const t=ma.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function va(e){const{kernelName:t}=e;ba.has(t)&&Lr().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${t}'`),ba.set(t,e)}function ka(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=gr(e)),Lr().getBool("DEBUG")&&function(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Ia(){return Lr().platform.now()}function Sa(e,t="utf-8"){return t=t||"utf-8",Lr().platform.decode(e,t)}class $a{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ca)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=Ia();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:Ia()-i})}if(Lr().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Ea(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Ea(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ca{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?wr(`${r}ms`,9):r.error,o=wr(e,25),l=t.rank,u=t.size,c=wr(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Na(e,t,n,r){const s=Cr(t),a=function(e,t,n,r){const s=mr(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Da(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Ta(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Ra(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Ta(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ir(e)?`'${e}'`:"bool"===n?Aa(e):parseFloat(e.toFixed(7)).toString(),wr(r,t)}function Aa(e){return 0===e?"false":"true"}function Ra(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Ta(Da(e)[0],0,n)]:"bool"===n?[Aa(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Da(r),a=Da(a)),["["+r.map(((e,t)=>Ta(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Ta(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Da(e):Array.from(e)).map(((e,t)=>Ta(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...Ra(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...Ra(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...Ra(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Da(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Fa{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=mr(e),null!=n){const e=n.length;dr(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||function(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}(t,this.size),this.strides=Cr(e)}set(e,...t){0===t.length&&(t=[0]),dr(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return _a().makeTensor(this.values,this.shape,this.dtype)}}let _a=null,Oa=null,La=null;class Ma{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=mr(e),this.strides=Cr(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Oa.buffer(this.shape,this.dtype,e)}bufferSync(){return Oa.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Tr(this.shape,e,"complex64"===this.dtype)}arraySync(){return Tr(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=_a().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Sa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=_a().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Sa(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await _a().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(_a().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Oa.print(this,e)}clone(){return this.throwIfDisposed(),Oa.clone(this)}toString(e=!1){return Na(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Oa.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),_a().makeVariable(this,e,t,n)}}function za(){return Pr("Tensor",(()=>Ma))}Object.defineProperty(Ma,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),za();class Ba extends Ma{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!br(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);_a().disposeTensor(this),this.dataId=e.dataId,_a().incRef(this,null)}dispose(){_a().disposeVariable(this),this.isDisposedInternal=!0}}var Pa,Ua,Wa,Va,Ga;Object.defineProperty(Ba,Symbol.hasInstance,{value:e=>e instanceof Ma&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Pa||(Pa={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Ua||(Ua={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Wa||(Wa={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Va||(Va={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Ga||(Ga={}));const ja={float32:Va,int32:Ua,bool:Wa,complex64:Ga};function Ha(e,t){if(e.dtype===t.dtype)return[e,t];const n=function(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ja[e][t]}(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Ka(e){const t=[];return qa(e,t,new Set),t}function qa(e,t,n){if(null==e)return;if(e instanceof Ma)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),qa(r,t,n))}}function Xa(e){return null!=e.kernelName}class Ya{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ja{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ya}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new $a(this.backendInstance),!0}setupRegisteredKernels(){xa(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){xa(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof class{refCount(e){return cr("refCount")}incRef(e){return cr("incRef")}timerAvailable(){return!0}time(e){return cr("time")}read(e){return cr("read")}readSync(e){return cr("readSync")}numDataIds(){return cr("numDataIds")}disposeData(e,t){return cr("disposeData")}write(e,t,n){return cr("write")}move(e,t,n,r,s){return cr("move")}memory(){return cr("memory")}floatPrecision(){return cr("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return cr("dispose")}}||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return Ja.nextTensorId++}nextVariableId(){return Ja.nextVariableId++}clone(e){const t=Qa.runKernel(vs,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Qa.runKernel(ts,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==ya(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Xa(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Xa(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=ya(t,this.backendName);dr(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Xa(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=wa(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(dr(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Ir(e[0])&&(s=e.map((e=>function(e,t="utf-8"){return t=t||"utf-8",Lr().platform.encode(e,t)}(e))));const a=r.write(s,t,n),i=new Ma(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=function(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new Ma(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Ba(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*kr(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Ba||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*kr(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=wa(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Rr(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Ka(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(dr(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));dr(s instanceof Ma,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Ar(mr(e),"float32");return Qa.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!br(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),ei);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return dr(Er(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;dr(t.every((e=>e instanceof Ma)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),dr(n.value instanceof Ma,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),dr(Er(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];dr(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),dr(a.every((e=>e instanceof Ma)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Ia(),n=await this.backend.time(e);return n.wallMs=Ia()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ya;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Za(){const e=Br();if(null==e._tfengine){const t=new _r(e);e._tfengine=new Ja(t)}var t;return t=e._tfengine.ENV,zr=t,_a=()=>e._tfengine,e._tfengine}Ja.nextTensorId=0,Ja.nextVariableId=0;const Qa=Za();function ei(e,t){const n={a:e,b:t};return Qa.runKernel(Vr,n)}const ti=Lr();function ni(e,t){let n=e;if(vr(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||vr(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Lr().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ri(e,r,[]),r}function ri(e,t,n){if(n=n||[],!Array.isArray(e)&&!vr(e))return void dr(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));dr(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),dr(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ri(e[t],r,n.concat(t))}function si(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ai(e,t,n,r="numeric"){if(e instanceof Ma)return si(r,e.dtype,t,n),e;let s=$r(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),si(r,s,t,n),null==e||!vr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ni(e,s);vr(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?ka(e,s):gr(e,[],!0);return Qa.makeTensor(i,a,s)}function ii(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>ai(e,`${t}[${s}]`,n,r)))}function oi(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Qa.startScope(n);try{const t=r(...e);return Fr(t)&&console.error("Cannot return a Promise inside of tidy."),Qa.endScope(t),t}catch(e){throw Qa.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}ti.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),ti.registerFlag("IS_BROWSER",(()=>"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope)),ti.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),ti.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),ti.registerFlag("PROD",(()=>!1)),ti.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>ti.getBool("DEBUG"))),ti.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),ti.registerFlag("IS_TEST",(()=>!1)),ti.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),ti.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const li=oi({complex_:function(e,t){const n=ai(e,"real","complex"),r=ai(t,"imag","complex");pr(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Qa.runKernel("Complex",s)}});function ui(e,t,n,r){if(null==r&&(r=$r(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!vr(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Dr(t);const e=mr(t),r=mr(n);dr(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==mr(t.slice(e));dr(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return vr(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?ka(e,r):gr(e,[],!0),Qa.makeTensor(e,t,r)}function ci(e,t,n){return ui(e,t,ni(e,n),n)}const hi={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function di(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:pi(await Promise.all(r)),specs:n}}function pi(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const fi="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function gi(e){return fi?Buffer.byteLength(e):new Blob([e]).size}function mi(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function bi(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:gi(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:gi(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function yi(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class wi{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==wi.instance&&(wi.instance=new wi),wi.instance}static registerSaveRouter(e){wi.getInstance().saveRouters.push(e)}static registerLoadRouter(e){wi.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return wi.getHandlers(e,"save")}static getLoadHandlers(e,t){return wi.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?wi.getInstance().loadRouters:wi.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const xi="tensorflowjs",vi="models_store",ki="model_info_store";function Ii(){if(!Lr().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Si(e){const t=e.result;t.createObjectStore(vi,{keyPath:"modelPath"}),t.createObjectStore(ki,{keyPath:"modelPath"})}class $i{constructor(e){if(this.indexedDB=Ii(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(xi,1);r.onupgradeneeded=()=>Si(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(vi,"readonly"),r=t.objectStore(vi).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=bi(t),a=s.transaction(ki,"readwrite");let i=a.objectStore(ki);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(vi,"readwrite");const o=l.objectStore(vi).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(ki);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}$i.URL_SCHEME="indexeddb://";const Ei=e=>{return Lr().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith($i.URL_SCHEME)?(t=e.slice($i.URL_SCHEME.length),new $i(t)):null;var t};wi.registerSaveRouter(Ei),wi.registerLoadRouter(Ei);class Ci{constructor(){this.indexedDB=Ii()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(xi,1);n.onupgradeneeded=()=>Si(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(ki,"readonly"),a=s.objectStore(ki).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith($i.URL_SCHEME)?t.slice($i.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(xi,1);r.onupgradeneeded=()=>Si(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(ki,"readwrite"),i=a.objectStore(ki),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(vi,"readwrite");const r=l.objectStore(vi).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Ni="/",Ti="tensorflowjs_models",Ai="info",Ri="model_topology",Di="weight_specs",Fi="weight_data",_i="model_metadata";function Oi(e){return{info:[Ti,e,Ai].join(Ni),topology:[Ti,e,Ri].join(Ni),weightSpecs:[Ti,e,Di].join(Ni),weightData:[Ti,e,Fi].join(Ni),modelMetadata:[Ti,e,_i].join(Ni)}}function Li(e){const t=e.split(Ni);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Ni)}class Mi{constructor(e){if(!Lr().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Oi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=bi(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(fi)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(fi){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Mi.URL_SCHEME="localstorage://";const zi=e=>{return Lr().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mi.URL_SCHEME)?(t=e.slice(Mi.URL_SCHEME.length),new Mi(t)):null;var t};wi.registerSaveRouter(zi),wi.registerLoadRouter(zi);class Bi{constructor(){dr(Lr().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),dr("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=Ti+Ni,n=Ni+Ai;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Li(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Oi(e=(t=e).startsWith(Mi.URL_SCHEME)?t.slice(Mi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class Pi{constructor(){this.managers={}}static getInstance(){return null==Pi.instance&&(Pi.instance=new Pi),Pi.instance}static registerManager(e,t){dr(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith("://")&&(e=e.slice(0,e.indexOf("://"))),dr(e.length>0,(()=>"scheme must not be an empty string."));const n=Pi.getInstance();dr(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}class Ui{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Lr().get("IS_BROWSER")){Lr().setPlatform("browser",new Ui);try{Pi.registerManager(Mi.URL_SCHEME,new Bi)}catch(e){}try{Pi.registerManager($i.URL_SCHEME,new Ci)}catch(e){}}let Wi;function Vi(e,t="float32",n){return t=t||"float32",Dr(e),new Fa(e,t,n)}Lr().get("IS_NODE")&&Lr().setPlatform("node",new class{constructor(){this.util=n(853),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Lr().global.fetch?Lr().global.fetch(e,t):(null==Wi&&(Wi=n(523)),Wi(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Gi=oi({cast_:function(e,t){const n=ai(e,"x","cast");if(!function(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Qa.runKernel(ts,r,s)}}),ji=oi({clone_:function(e){const t={x:ai(e,"x","clone","string_or_numeric")};return Qa.runKernel(vs,t)}});function Hi(e){return new Promise((e=>setTimeout(e))).then(e)}Za(),Oa={buffer:Vi,cast:Gi,clone:ji,print:function(e,t=!1){console.log(e.toString(t))}};class Ki{constructor(e){if(!Lr().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ki.URL_SCHEME)&&(e=e.slice(Ki.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await Hi((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Hi((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:bi(e)}}}}function qi(e,t,n,r){!function(e){dr(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){dr(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),dr(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),dr(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Xi(e,t){null==t&&(t={});const n=null==t.fetchFunc?Lr().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await qi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await qi(s,t.onProgress,.5,1)}Ki.URL_SCHEME="downloads://",wi.registerSaveRouter((e=>Lr().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ki.URL_SCHEME)?function(e="model"){return new Ki(e)}(e.slice(Ki.URL_SCHEME.length)):null));class Yi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(dr("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=Lr().platform.fetch,dr(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&dr(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:bi(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,mi(await Xi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ji(e){return null!=e.match(Yi.URL_SCHEME_REGEX)}Yi.URL_SCHEME_REGEX=/^https?:\/\//;const Zi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Ji(e))):Ji(e),n)return Qi(e,t)}return null};function Qi(e,t){return new Yi(e,t)}wi.registerSaveRouter(Zi),wi.registerLoadRouter(Zi);class eo{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class to{constructor(){this.classNameMap={}}static getMap(){return null==to.instance&&(to.instance=new to),to.instance}static register(e){to.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function no(e){dr(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),dr("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),dr(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),to.register(e)}function ro(){return Qa.memory()}function so(e,t){return Qa.tidy(e,t)}function ao(e){Ka(e).forEach((e=>e.dispose()))}function io(e){return Qa.keep(e)}function oo(e){return Qa.customGrad(e)}function lo(e,t){if((vr(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&vr(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ui(e,[],[],t)}La=function(e){Lr().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};class uo extends eo{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return ao(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return function(e,t){dr(Er(e),(()=>"The f passed in variableGrads(f) must be a function")),dr(null==t||Array.isArray(t)&&t.every((e=>e instanceof Ba)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in Qa.registeredVariables)t.push(Qa.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;dr((t=t.filter((e=>e.trainable))).length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=Qa.gradients(e,t,null,!0);dr(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),dr(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}(e,t)}dispose(){null!=this.iterations_&&ao(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:lo(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(uo,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});const co=oi({abs_:function(e){const t=ai(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Qa.runKernel(ss,e)}{const e={x:t};return Qa.runKernel("Abs",e)}}}),ho=oi({add_:function(e,t){let n=ai(e,"a","add"),r=ai(t,"b","add");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel(Vr,s)}}),po=oi({all_:function(e,t=null,n=!1){const r={x:ai(e,"x","all","bool")},s={axis:t,keepDims:n};return Qa.runKernel("All",r,s)}}),fo=oi({any_:function(e,t=null,n=!1){const r={x:ai(e,"x","any","bool")},s={axis:t,keepDims:n};return Qa.runKernel("Any",r,s)}}),go=oi({argMax_:function(e,t=0){const n={x:ai(e,"x","argMax")},r={axis:t};return Qa.runKernel(Gr,n,r)}});function mo(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=bo(n),[b,y]=bo(r),w=yo(d,b),x=yo(p,y),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=function(e,t,n,r=1){const s=yo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}(e,t,n));const a=e[1];return[wo((e[0]-t+2*r)/n+1,s),wo((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=wo((t-a+d+p)/r+1,o),h=wo((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,w,x,a,o),S=i?f*h:f;let $;return"channelsFirst"===o?$=[l,S,k,I]:"channelsLast"===o&&($=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:$,filterShape:t}}function bo(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function yo(e,t){return t<=1?e:e+(e-1)*(t-1)}function wo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function xo(e){const[t,n,r]=bo(e);return 1===t&&1===n&&1===r}function vo(e,t){return xo(e)||xo(t)}const ko=oi({reshape_:function(e,t){const n={x:ai(e,"x","reshape","string_or_numeric")},r={shape:t};return Qa.runKernel(Us,n,r)}}),Io=oi({avgPool_:function(e,t,n,r,s){const a=ai(e,"x","avgPool","float32");dr(vo(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=ko(a,[1,a.shape[0],a.shape[1],a.shape[2]])),dr(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),null!=s&&dr(yr(r),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=Qa.runKernel(Jr,l,u);return c=Gi(c,a.dtype),o?ko(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),So=oi({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=ai(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=ko(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),dr(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),dr("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&dr(yr(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=Qa.runKernel(Zr,u,c);return h=Gi(h,o.dtype),l?ko(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),$o=oi({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=ai(e,"x","batchNorm"),o=ai(t,"mean","batchNorm"),l=ai(n,"variance","batchNorm");let u,c;null!=s&&(u=ai(s,"scale","batchNorm")),null!=r&&(c=ai(r,"offset","batchNorm")),dr(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),dr(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),dr(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h={x:function(e){let t;return t=0===e.rank||1===e.rank?ko(e,[1,1,1,e.size]):2===e.rank?ko(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},p=Qa.runKernel(ys,h,d);return ko(p,i.shape)}}),Eo=oi({batchNorm2d_:function(e,t,n,r,s,a){const i=ai(e,"x","batchNorm"),o=ai(t,"mean","batchNorm"),l=ai(n,"variance","batchNorm");let u,c;return null!=s&&(u=ai(s,"scale","batchNorm")),null!=r&&(c=ai(r,"offset","batchNorm")),dr(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),dr(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),dr(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&dr(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&dr(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),$o(i,o,l,c,u,a)}}),Co=oi({batchNorm3d_:function(e,t,n,r,s,a){const i=ai(e,"x","batchNorm"),o=ai(t,"mean","batchNorm"),l=ai(n,"variance","batchNorm");let u,c;return null!=s&&(u=ai(s,"scale","batchNorm")),null!=r&&(c=ai(r,"offset","batchNorm")),dr(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),dr(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),dr(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&dr(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&dr(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),$o(i,o,l,c,u,a)}}),No=oi({batchNorm4d_:function(e,t,n,r,s,a){const i=ai(e,"x","batchNorm"),o=ai(t,"mean","batchNorm"),l=ai(n,"variance","batchNorm");let u,c;return null!=s&&(u=ai(s,"scale","batchNorm")),null!=r&&(c=ai(r,"offset","batchNorm")),dr(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),dr(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),dr(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&dr(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&dr(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),$o(i,o,l,c,u,a)}}),To=oi({clipByValue_:function(e,t,n){const r=ai(e,"x","clipByValue");dr(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return Qa.runKernel(rs,s,a)}}),Ao=oi({concat_:function(e,t=0){dr(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=ii(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ji(n[0]);const r=n,s={axis:t};return Qa.runKernel(as,r,s)}}),Ro=oi({concat1d_:function(e){return Ao(e,0)}}),Do=oi({concat2d_:function(e,t){return Ao(e,t)}}),Fo=oi({concat3d_:function(e,t){return Ao(e,t)}}),_o=oi({concat4d_:function(e,t){return Ao(e,t)}}),Oo=oi({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=ai(e,"x","conv2d"),l=ai(t,"filter","conv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),dr(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),dr(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),null!=i&&dr(yr(r),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h="NHWC"===s?u.shape[3]:u.shape[1];dr(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),dr(vo(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const d={x:u,filter:l},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=Qa.runKernel(is,d,p);return c?ko(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Lo=oi({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=ai(e,"x","conv1d"),l=ai(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=ko(o,[1,o.shape[0],o.shape[1]])),dr(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),dr(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),null!=i&&dr(yr(r),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),dr(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),dr(vo(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),dr("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=ko(l,[1,l.shape[0],l.shape[1],l.shape[2]]),d=ko(u,[u.shape[0],1,u.shape[1],u.shape[2]]),p=Oo(d,h,[1,n],r,"NHWC",[1,a],i);return ko(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Mo=oi({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){dr(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),dr(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),dr(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),dr(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];dr(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),dr(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),null!=i&&dr(yr(s),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const d={dy:l,filter:n},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=Qa.runKernel(os,d,p);return u?ko(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),zo=oi({conv2dTranspose_:function(e,t,n,r,s,a){const i=ai(e,"x","conv2dTranspose"),o=ai(t,"filter","conv2dTranspose");return Mo(n,i,o,r,s,"NHWC",a)}}),Bo=oi({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=ai(e,"x","conv3d"),o=ai(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=ko(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),dr(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),dr(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),dr(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),dr(vo(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),dr("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},d=Qa.runKernel(ls,c,h);return u?ko(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Po=oi({conv3DBackpropInput_:function(e,t,n,r,s){dr(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=ko(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];dr(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),dr(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),dr(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),dr(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),dr(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},d=Qa.runKernel("Conv3DBackpropInputV2",c,h);return o?ko(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Uo=oi({conv3dTranspose_:function(e,t,n,r,s){const a=ai(e,"x","conv3dTranspose"),i=ai(t,"filter","conv3dTranspose");return Po(n,a,i,r,s)}}),Wo=oi({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=ai(e,"x","depthwiseConv2d"),l=ai(t,"filter","depthwiseConv2d");let u=o,c=!1;3===o.rank&&(c=!0,u=ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),dr(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),dr(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),dr(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),null!=i&&dr(yr(r),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const h={x:u,filter:l},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},p=Qa.runKernel(hs,h,d);return c?ko(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Vo=oi({floorDiv_:function(e,t){let n=ai(e,"a","floorDiv"),r=ai(t,"b","floorDiv");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel(bs,s)}}),Go=oi({div_:function(e,t){let n=ai(e,"a","div"),r=ai(t,"b","div");if([n,r]=Ha(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Vo(n,r);const s={a:n,b:r};return Qa.runKernel(ps,s,{})}}),jo=oi({elu_:function(e){const t={x:ai(e,"x","elu")};return Qa.runKernel("Elu",t)}});function Ho(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ko(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const qo=oi({equal_:function(e,t){let n=ai(e,"a","equal"),r=ai(t,"b","equal");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("Equal",s)}}),Xo=oi({expandDims_:function(e,t=0){const n=ai(e,"x","expandDims","string_or_numeric");dr(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Qa.runKernel(fs,r,s)}}),Yo=oi({tile_:function(e,t){const n=ai(e,"x","tile","string_or_numeric");dr(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Qa.runKernel(oa,r,s)}}),Jo=oi({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Vi([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=ko(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return Yo(Xo(i,0),[n[0],1,1]);if(2===n.length)return Yo(Xo(Xo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return Yo(Xo(Xo(Xo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});function Zo(e,t,n){const r={shape:e,value:t,dtype:n};return Qa.runKernel("Fill",{},r)}const Qo=oi({floor_:function(e){const t={x:ai(e,"x","floor")};return Qa.runKernel(ms,t)}}),el=oi({gather_:function(e,t,n=0,r=0){const s={x:ai(e,"x","gather"),indices:ai(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Qa.runKernel(ws,s,a)}}),tl=oi({greater_:function(e,t){let n=ai(e,"a","greater"),r=ai(t,"b","greater");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("Greater",s)}}),nl=oi({greaterEqual_:function(e,t){let n=ai(e,"a","greaterEqual"),r=ai(t,"b","greaterEqual");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel(xs,s)}}),rl=oi({leakyRelu_:function(e,t=.2){const n={x:ai(e,"x","leakyRelu")},r={alpha:t};return Qa.runKernel($s,n,r)}}),sl=oi({log_:function(e){const t={x:ai(e,"x","log")};return Qa.runKernel("Log",t)}}),al=oi({exp_:function(e){const t={x:ai(e,"x","exp")};return Qa.runKernel("Exp",t)}}),il=oi({max_:function(e,t=null,n=!1){const r={x:ai(e,"x","max")},s={reductionIndices:t,keepDims:n};return Qa.runKernel("Max",r,s)}}),ol=oi({mul_:function(e,t){let n=ai(e,"a","mul"),r=ai(t,"b","mul");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel(Fs,s)}}),ll=oi({sub_:function(e,t){let n=ai(e,"a","sub"),r=ai(t,"b","sub");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel("Sub",s)}}),ul=oi({sum_:function(e,t=null,n=!1){let r=ai(e,"x","sum");"bool"===r.dtype&&(r=Gi(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Qa.runKernel("Sum",s,a)}}),cl=oi({logSoftmax_:function(e,t=-1){const n=ai(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);return oo(((e,n)=>{const r=il(e,t,!0),s=ll(e,r),a=ll(Gi(s,"float32"),sl(ul(al(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=al(r);return ll(e,ol(ul(e,t,!0),s))}}}))(n)}}),hl=oi({logicalAnd_:function(e,t){const n=ai(e,"a","logicalAnd","bool"),r=ai(t,"b","logicalAnd","bool");Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("LogicalAnd",s)}}),dl=oi({maxPool_:function(e,t,n,r,s){const a=ai(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ko(a,[1,a.shape[0],a.shape[1],a.shape[2]])),dr(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),dr(vo(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=s&&dr(yr(r),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const l={x:i},u={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=Qa.runKernel(Ns,l,u);return o?ko(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),pl=oi({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=ai(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=ko(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),dr(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),dr("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),null!=s&&dr(yr(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`));const u={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=Qa.runKernel(Ts,u,c);return l?ko(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),fl=oi({maximum_:function(e,t){let n=ai(e,"a","maximum"),r=ai(t,"b","maximum");[n,r]=Ha(n,r),"bool"===n.dtype&&(n=Gi(n,"int32"),r=Gi(r,"int32")),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel(Cs,s)}}),gl=oi({mean_:function(e,t=null,n=!1){const r={x:ai(e,"x","mean")},s={axis:t,keepDims:n};return Qa.runKernel(As,r,s)}}),ml=oi({min_:function(e,t=null,n=!1){const r={x:ai(e,"x","min")},s={axis:t,keepDims:n};return Qa.runKernel("Min",r,s)}}),bl=oi({minimum_:function(e,t){let n=ai(e,"a","minimum"),r=ai(t,"b","minimum");[n,r]=Ha(n,r),"bool"===n.dtype&&(n=Gi(n,"int32"),r=Gi(r,"int32")),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel(Rs,s)}});function yl(e,t){return function(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}(e,t.map((e=>1)),t)}function wl(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}const xl=oi({square_:function(e){const t=ai(e,"x","square");return Qa.runKernel("Square",{x:t},{})}}),vl=oi({moments_:function(e,t=null,n=!1){const r=xr(t,(e=ai(e,"x","moments")).shape),s=gl(e,r,n);let a=s.shape;n||(a=yl(s.shape,r));const i=xl(ll(Gi(e,"float32"),ko(s,a)));return{mean:s,variance:gl(i,r,n)}}}),kl=oi({neg_:function(e){const t={x:ai(e,"x","neg")};return Qa.runKernel("Neg",t)}}),Il=oi({notEqual_:function(e,t){let n=ai(e,"a","notEqual"),r=ai(t,"b","notEqual");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("NotEqual",s)}}),Sl=oi({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:ai(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Qa.runKernel(Os,s,a)}});function $l(e,t="float32"){if("complex64"===t){const t=$l(e,"float32"),n=$l(e,"float32");return li(t,n)}const n=Rr(mr(e),t);return Qa.makeTensor(n,e,t)}function El(e,t="float32"){if("complex64"===t){const t=El(e,"float32"),n=$l(e,"float32");return li(t,n)}const n=Ar(mr(e),t);return Qa.makeTensor(n,e,t)}const Cl=oi({onesLike_:function(e){const t={x:ai(e,"x","onesLike")};return Qa.runKernel(_s,t)}}),Nl=oi({pad_:function(e,t,n=0){const r=ai(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return Qa.runKernel(Ms,a,s)}}),Tl=oi({prelu_:function(e,t){const n={x:ai(e,"x","prelu"),alpha:ai(t,"alpha","prelu")};return Qa.runKernel(zs,n)}});class Al{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=Rn.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class Rl{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=Rn.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Dl=oi({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new Al(t,n,r,!1,s),i=Vi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Fl=oi({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Vi(e,r),i=new Rl(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}}),_l=oi({relu_:function(e){const t={x:ai(e,"x","relu")};return Qa.runKernel(Ps,t)}}),Ol=oi({reverse_:function(e,t){const n={x:ai(e,"x","reverse")},r={dims:t};return Qa.runKernel(js,n,r)}}),Ll=oi({selu_:function(e){const t={x:ai(e,"x","selu")};return Qa.runKernel(Xs,t)}}),Ml=oi({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=ai(e,"x","separableConv2d"),l=ai(t,"depthwiseFilter","separableConv2d"),u=ai(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ko(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");dr(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),dr(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),dr(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),dr(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),dr(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const d=l.shape[2],p=l.shape[3];dr(u.shape[2]===d*p,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${d*p}, but got ${u.shape[2]}.`));const f=Wo(c,l,r,s,i,a),g=Oo(f,u,1,"valid",i);return h?ko(g,[g.shape[1],g.shape[2],g.shape[3]]):g}}),zl=oi({sigmoid_:function(e){const t={x:ai(e,"x","sigmoid")};return Qa.runKernel(Qs,t)}}),Bl=oi({slice_:function(e,t,n){const r=ai(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Qa.runKernel(Ys,s,a)}}),Pl=oi({slice1d_:function(e,t,n){const r=ai(e,"x","slice1d");return dr(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),Bl(r,[t],[n])}}),Ul=oi({slice2d_:function(e,t,n){const r=ai(e,"x","slice2d");return dr(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),Bl(r,t,n)}}),Wl=oi({slice3d_:function(e,t,n){const r=ai(e,"x","slice3d");return dr(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),Bl(r,t,n)}}),Vl=oi({slice4d_:function(e,t,n){const r=ai(e,"x","slice4d");return dr(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),Bl(r,t,n)}}),Gl=oi({softmax_:function(e,t=-1){const n=ai(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return Qa.runKernel(sa,r,s)}}),jl=oi({softplus_:function(e){const t={x:ai(e,"x","softplus")};return Qa.runKernel(ea,t)}}),Hl=oi({split_:function(e,t,n=0){const r={x:ai(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Qa.runKernel(ra,r,s)}}),Kl=oi({sqrt_:function(e){const t={x:ai(e,"x","sqrt")};return Qa.runKernel(ta,t)}}),ql=oi({squeeze_:function(e,t){const n=ai(e,"x","squeeze");return ko(n,function(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:xr(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}(n.shape,t).newShape)}}),Xl=oi({stack_:function(e,t=0){const n=ii(e,"tensors","stack","string_or_numeric");dr(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&dr(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Qa.runKernel(Ls,r,s)}}),Yl=oi({tanh_:function(e){const t={x:ai(e,"x","tanh")};return Qa.runKernel(ia,t)}});function Jl(e,t){fr(e);const n=ni(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ui(e,null,n,t)}const Zl=oi({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new Al(t,n,r,!0,s),i=Vi(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),Ql=oi({unstack_:function(e,t=0){const n=ai(e,"x","unstack","string_or_numeric");dr(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Qa.runKernel(ua,r,s)}}),eu=oi({broadcastTo_:function(e,t){let n=ai(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ko(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ji(n);const i={x:n},o={reps:a};return Qa.runKernel(oa,i,o)}}),tu=oi({where_:function(e,t,n){const r=ai(t,"a","where"),s=ai(n,"b","where"),a=ai(e,"condition","where","bool"),i=Ko(Ko(a.shape,r.shape),s.shape),o={condition:eu(a,i),t:eu(r,i),e:eu(s,i)};return Qa.runKernel(qs,o)}}),nu=oi({zerosLike_:function(e){const t={x:ai(e,"x","zerosLike")};return Qa.runKernel(ha,t)}}),ru=oi({transpose_:function(e,t){const n=ai(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),dr(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{dr(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Qa.runKernel(la,r,s)}}),su=oi({dropout_:function(e,t,n,r){const s=ai(e,"x","dropout");if(dr("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),dr(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Ma?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(br(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=Go(Qo(ho(Fl(a,0,1,"float32",r),i)),i);return ol(s,o)}}),au=oi({imag_:function(e){const t={input:ai(e,"input","imag")};return Qa.runKernel("Imag",t)}}),iu=oi({real_:function(e){const t={input:ai(e,"input","real")};return Qa.runKernel("Real",t)}}),ou=oi({fft_:function(e){dr("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Qa.runKernel("FFT",t)}}),lu=oi({rfft_:function(e,t){dr("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=Bl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=Ao([e,$l(r)],e.shape.length-1),n=t}else s=e;const a=nu(s),i=ko(li(s,a),[r,n]),o=ou(i),l=Math.floor(n/2)+1,u=iu(o),c=au(o),h=Hl(u,[l,n-l],u.shape.length-1),d=Hl(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,ko(li(h[0],d[0]),p)}}),uu=oi({ifft_:function(e){dr("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Qa.runKernel("IFFT",t)}}),cu=oi({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ko(e,[n,t]);r=uu(s)}else{const s=[n,2*(t-1)],a=ko(iu(e),[n,t]),i=ko(au(e),[n,t]),o=Ol(Bl(a,[0,1],[n,t-2]),1),l=ol(Ol(Bl(i,[0,1],[n,t-2]),1),lo(-1)),u=Ao([a,o],1),c=Ao([i,l],1),h=ko(li(u,c),[s[0],s[1]]);r=uu(h)}if(r=iu(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ko(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),hu=oi({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ko(t,[1,t.shape[0],t.shape[1],t.shape[2]])),dr(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),dr(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),dr(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];dr(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),dr(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),null!=i&&dr(yr(s),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`));const h={x:o,dy:l},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return Qa.runKernel("Conv2DBackpropFilter",h,d)}}),du=oi({relu6_:function(e){const t={x:ai(e,"x","relu6")};return Qa.runKernel(Gs,t)}}),pu=oi({step_:function(e,t=0){const n={x:ai(e,"x","step")},r={alpha:t};return Qa.runKernel(da,n,r)}});function fu(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ol(e,pu(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function gu(e,t){let n=t;const r=Ho(e.shape,t.shape);return r.length>0&&(n=ul(n,r)),ko(n,e.shape)}function mu(e,t,n,r){if("linear"===t)return e;if("relu"===t)return _l(e);if("elu"===t)return jo(e);if("relu6"===t)return du(e);if("prelu"===t)return Tl(e,n);if("leakyrelu"===t)return rl(e,r);if("sigmoid"===t)return zl(e);throw new Error(`Unknown fused activation ${t}.`)}const bu=(e,t)=>!(e>0)||"linear"===t,yu=oi({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===bu(Qa.state.gradientDepth,l)){let h=Oo(e,t,n,r,s,a,i);return null!=o&&(h=ho(h,o)),mu(h,l,u,c)}const h=ai(e,"x","conv2d"),d=ai(t,"filter","conv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=ko(h,[1,h.shape[0],h.shape[1],h.shape[2]])),dr(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),dr(4===d.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${d.rank}.`)),null!=i&&dr(yr(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`)),dr(p.shape[3]===d.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${d.shape[2]}.`)),dr(vo(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),dr("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const g=mo(p.shape,d.shape,n,a,r,i);let m,b;null!=o&&(m=ai(o,"bias","fused conv2d"),[m]=Ha(m,h),Ko(g.outShape,m.shape)),null!=u&&(b=ai(u,"prelu weights","fused conv2d"));const y=(e,t)=>{const[s,i,o,u]=t,c=fu(e,o,l);dr(xo(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Mo(i.shape,c,s,n,r),hu(i,c,s.shape,n,r)];if(null!=u){const e=gu(u,c);h.push(e)}return h},w={x:p,filter:d,bias:m,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?oo(((e,t,n)=>{let r=Qa.runKernel(fa,w,x);return n([t,e,r]),f&&(r=ko(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):oo(((e,t,n,r)=>{let s=Qa.runKernel(fa,w,x);return r([t,e,s,n]),f&&(s=ko(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}}),wu=oi({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=ko(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return Qa.runKernel("DepthwiseConv2dNativeBackpropFilter",u,c)}}),xu=oi({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=ko(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=Qa.runKernel("DepthwiseConv2dNativeBackpropInput",u,c);return l?ko(h,[h.shape[1],h.shape[2],h.shape[3]]):h}});oi({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===bu(Qa.state.gradientDepth,l)){let h=Wo(e,t,n,r,s,a,i);return null!=o&&(h=ho(h,o)),mu(h,l,u,c)}const h=ai(e,"x","depthwiseConv2d"),d=ai(t,"filter","depthwiseConv2d");let p=h,f=!1;3===h.rank&&(f=!0,p=ko(h,[1,h.shape[0],h.shape[1],h.shape[2]])),dr(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),dr(4===d.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${d.rank}.`)),dr(p.shape[3]===d.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${d.shape[2]}.`)),null==a&&(a=[1,1]),dr(vo(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),null!=i&&dr(yr(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`));const g=mo(p.shape,d.shape,n,a,r,i,!0);let m,b;null!=o&&(m=ai(o,"bias","fused conv2d"),[m]=Ha(m,h),Ko(g.outShape,m.shape)),null!=u&&(b=ai(u,"prelu weights","fused depthwiseConv2d"));const y=(e,t)=>{dr(xo(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,u,c]=t,h=fu(e,u,l),d=xu(o.shape,h,s,n,r,a,i),p=wu(o,h,s.shape,n,r,a,i);return null!=c?[d,p,gu(m,h)]:[d,p]},w={x:p,filter:d,bias:m,preluActivationWeights:b},x={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};return null==o?oo(((e,t,n)=>{let r=Qa.runKernel(ga,w,x);return n([t,e,r]),f&&(r=ko(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,d):oo(((e,t,n,r)=>{let s=Qa.runKernel(ga,w,x);return r([t,e,s,n]),f&&(s=ko(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:y}}))(p,d,m)}});const vu=oi({matMul_:function(e,t,n=!1,r=!1){let s=ai(e,"a","matMul"),a=ai(t,"b","matMul");[s,a]=Ha(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Qa.runKernel(Qr,i,o)}}),ku=oi({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===bu(Qa.state.gradientDepth,a)){let l=vu(e,t,n,r);return null!=s&&(l=ho(l,s)),mu(l,a,i,o)}let l=ai(e,"a","fused matMul"),u=ai(t,"b","fused matMul");[l,u]=Ha(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=r?u.shape[u.rank-1]:u.shape[u.rank-2],d=n?l.shape[l.rank-1]:l.shape[l.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),g=u.shape.slice(0,-2),m=mr(f),b=mr(g);dr(l.rank>=2&&u.rank>=2&&l.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${l.rank} and ${u.rank}.`)),dr(br(f,g),(()=>`Error in fused matMul: outer dimensions (${f}) and (${g}) of Tensors with shapes ${l.shape} and ${u.shape} must match.`)),dr(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=l.shape.slice(0,-2).concat([d,p]),w=ko(l,n?[m,c,d]:[m,d,c]),x=ko(u,r?[b,p,h]:[b,h,p]);let v,k;null!=s&&(v=ai(s,"bias","fused matMul"),[v]=Ha(v,l),Ko(y,v.shape)),null!=i&&(k=ai(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=fu(ko(e,l.shape),l,a);let h,d;return n||r?!n&&r?(h=vu(c,o,!1,!1),d=vu(c,i,!0,!1)):n&&!r?(h=vu(o,c,!1,!0),d=vu(i,c,!1,!1)):(h=vu(o,c,!0,!0),d=vu(c,i,!0,!0)):(h=vu(c,o,!1,!0),d=vu(i,c,!0,!1)),null!=s?[h,d,gu(u,c)]:[h,d]},S={a:w,b:x,bias:v,preluActivationWeights:k},$={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};return null==s?oo(((e,t,n)=>{const r=Qa.runKernel(pa,S,$);return n([e,t,r]),{value:ko(r,y),gradFunc:I}}))(w,x):oo(((e,t,n,r)=>{const s=Qa.runKernel(pa,S,$);return r([e,t,s,n]),{value:ko(s,y),gradFunc:I}}))(w,x,v)}});function Iu(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Jl(s,"float32")}oi({hammingWindow_:function(e){return Iu(e,.54,.46)}});const Su=oi({hannWindow_:function(e){return Iu(e,.5,.5)}});function $u(e,t,n){if(fr(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ni(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ui(e,t,r,n)}const Eu=oi({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(Bl(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=Ao([Bl(e,a,t-r),Zo([r],s)]);i.push(o),a+=n}return 0===i.length?$u([],[0,t]):ko(Ao(i),[i.length,t])}});function Cu(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),dr(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),dr(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),dr(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),dr(1===t.rank,(()=>"scores must be a 1D tensor")),dr(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),dr(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}oi({stft_:function(e,t,n,r,s=Su){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Eu(e,t,n),o=ol(i,s(t));return lu(o,r)}}),oi({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=ai(e,"image","cropAndResize"),o=ai(t,"boxes","cropAndResize","float32"),l=ai(n,"boxInd","cropAndResize","int32"),u=o.shape[0];dr(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),dr(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),dr(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),dr(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),dr(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),dr("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Qa.runKernel("CropAndResize",c,h)}}),oi({flipLeftRight_:function(e){const t=ai(e,"image","flipLeftRight","float32");dr(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Qa.runKernel("FlipLeftRight",n,{})}}),oi({rotateWithOffset_:function(e,t,n=0,r=.5){const s=ai(e,"image","rotateWithOffset","float32");dr(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Qa.runKernel("RotateWithOffset",a,i)}}),oi({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=ai(e,"boxes","nonMaxSuppression"),i=ai(t,"scores","nonMaxSuppression"),o=Cu(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Qa.runKernel("NonMaxSuppressionV3",{boxes:a,scores:i},l)}}),oi({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=ai(e,"boxes","nonMaxSuppression"),o=ai(t,"scores","nonMaxSuppression"),l=Cu(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Qa.runKernel("NonMaxSuppressionV5",u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),oi({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=ai(e,"boxes","nonMaxSuppression"),o=ai(t,"scores","nonMaxSuppression"),l=Cu(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Qa.runKernel("NonMaxSuppressionV4",u,c);return{selectedIndices:h[0],validOutputs:h[1]}}});const Nu=oi({resizeBilinear_:function(e,t,n=!1,r=!1){const s=ai(e,"images","resizeBilinear");dr(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),dr(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),dr(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ko(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Qa.runKernel(Vs,o,l);return i?ko(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Tu=oi({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=ai(e,"images","resizeNearestNeighbor");dr(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),dr(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),dr("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),dr(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ko(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Qa.runKernel(Ws,o,l);return i?ko(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),Au=oi({bincount_:function(e,t,n){const r=ai(e,"x","bincount"),s=ai(t,"weights","bincount");dr("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),dr(n>=0,(()=>`size must be non-negative, but got ${n}.`)),dr(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Qa.runKernel("Bincount",a,i)}}),Ru=oi({lessEqual_:function(e,t){let n=ai(e,"a","lessEqual"),r=ai(t,"b","lessEqual");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("LessEqual",s)}}),Du=oi({round_:function(e){const t={x:ai(e,"x","round")};return Qa.runKernel(Hs,t)}});function Fu(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Qa.runKernel("Range",{},s)}oi({threshold_:function(e,t="binary",n=!1,r=.5){const s=ai(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=ol(Jl([r]),255);if(dr(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),dr(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),dr("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),dr("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=Hl(s,[1,1,1],-1);const e=ol(i,.2989),t=ol(o,.587),n=ol(l,.114);u=ho(ho(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=Jl([-1]),u=Jl([0]),c=Jl([0]);for(let h=0;h<e.size-1;h++){n=Bl(e,0,h+1),r=Bl(e,h+1),i=Go(ul(n),t),o=Go(ul(r),t);const d=ul(ol(n,Fu(0,n.size)));s=Go(d,ul(n));const p=Zo(r.shape,n.size),f=ho(Fu(0,r.size),p),g=ol(r,f);a=Go(ul(g),ul(r));const m=ll(s,a),b=ll(s,a),y=ol(i,o);c=ol(ol(y,m),b);const w=tl(c,u);u=tu(w,c,u),l=tu(w,Jl([h]),l)}return l}(Au(Gi(Du(u),"int32"),ci([]),256),a));const h=n?Ru(u,c):tl(u,c);return Gi(ol(h,255),"int32")}}),oi({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=ai(e,"image","transform","float32"),o=ai(t,"transforms","transform","float32");dr(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),dr(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),dr(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Qa.runKernel("Transform",l,u)}});const _u=oi({bandPart_:function(e,t,n){dr(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),dr(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=ai(e,"a","bandPart");dr(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=ko(Fu(0,a,1,"int32"),[-1,1]),l=Fu(0,i,1,"int32"),u=ll(o,l),c=hl(Ru(u,lo(+t,"int32")),nl(u,lo(-n,"int32"))),h=$l([a,i],r.dtype);return ko(Xl(Ql(ko(r,[-1,a,i])).map((e=>tu(c,e,h)))),s)}}),Ou=oi({pow_:function(e,t){let n=ai(e,"base","pow"),r=ai(t,"exp","pow");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel("Pow",s)}});function Lu(e,t,n=null){if(0===e.rank)return co(e);if(1!==e.rank&&null===n)return Lu(ko(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return ul(co(e),n);if(t===1/0)return il(co(e),n);if(t===-1/0)return ml(co(e),n);if("euclidean"===t||2===t)return Kl(ul(Ou(co(e),lo(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return il(ul(co(e),n[0]),n[1]-1);if(t===1/0)return il(ul(co(e),n[1]),n[0]);if(t===-1/0)return ml(ul(co(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return Kl(ul(xl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const Mu=oi({norm_:function(e,t="euclidean",n=null,r=!1){const s=Lu(e=ai(e,"x","norm"),t,n);let a=s.shape;if(r){const t=xr(n,e.shape);a=yl(s.shape,t)}return ko(s,a)}}),zu=oi({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,dr(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)dr(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Hl(e,e.shape[0],0).map((e=>ql(e,[0])));dr(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Qa.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ol(ul(ol(n[r],e)),n[r]);e=ll(e,t)}return Go(e,Mu(e,"euclidean"))})));return t?Xl(n,0):n}});function Bu(e,t=!1){return Qa.tidy((()=>{dr(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=Jo(n),a=ji(e);const i=$u([[1]],[1,1]);let o=ji(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Qa.tidy((()=>{const t=Bl(a,[e,e],[n-e,1]),l=Mu(t),u=Bl(a,[e,e],[1,1]),c=tu(tl(u,0),$u([[-1]]),$u([[1]])),h=ll(u,ol(c,l)),d=Go(t,h);o=1===d.shape[0]?ji(i):Ao([i,Bl(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=kl(Go(vu(c,h),l)),f=Bl(a,[e,0],[n-e,r]),g=ol(p,o),m=ru(o);if(0===e)a=ll(f,vu(g,vu(m,f)));else{const t=ll(f,vu(g,vu(m,f)));a=Ao([Bl(a,[0,0],[e,r]),t],0)}const b=ru(g),y=Bl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=ll(y,vu(vu(y,o),b));else{const t=ll(y,vu(vu(y,o),b));s=Ao([Bl(s,[0,0],[n,e]),t],1)}return[o,a,s]})),ao([t,l,u])}return!t&&n>r&&(s=Bl(s,[0,0],[n,r]),a=Bl(a,[0,0],[r,r])),[s,a]}))}const Pu=oi({qr_:function(e,t=!1){if(dr(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return Bu(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=Ql(ko(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=Bu(e,t);s.push(n),a.push(r)})),[ko(Xl(s,0),e.shape),ko(Xl(a,0),e.shape)]}}});var Uu;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(Uu||(Uu={}));const Wu=oi({computeWeightedLoss_:function(e,t,n=Uu.SUM_BY_NONZERO_WEIGHTS){const r=ai(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=ai(t,"weights","computeWeightedLoss"));const a=null==s?r:ol(r,s);if(n===Uu.NONE)return a;if(n===Uu.SUM)return ul(a);if(n===Uu.MEAN){if(null==s)return gl(a);{const e=r.size/s.size,t=Go(ul(a),ul(s));return e>1?Go(t,lo(e)):t}}if(n===Uu.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Go(ul(a),lo(r.size));{const e=ol(s,El(r.shape)),t=Gi(ul(Il(e,lo(0))),"float32");return Go(ul(a),t)}}throw Error(`Unknown reduction: ${n}`)}});oi({absoluteDifference_:function(e,t,n,r=Uu.SUM_BY_NONZERO_WEIGHTS){const s=ai(e,"labels","absoluteDifference"),a=ai(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=ai(n,"weights","absoluteDifference")),pr(s.shape,a.shape,"Error in absoluteDifference: ");const o=co(ll(s,a));return Wu(o,i,r)}}),oi({cosineDistance_:function(e,t,n,r,s=Uu.SUM_BY_NONZERO_WEIGHTS){const a=ai(e,"labels","cosineDistance"),i=ai(t,"predictions","cosineDistance");let o=null;null!=r&&(o=ai(r,"weights","cosineDistance")),pr(a.shape,i.shape,"Error in cosineDistance: ");const l=lo(1),u=ll(l,ul(ol(a,i),n,!0));return Wu(u,o,s)}}),oi({hingeLoss_:function(e,t,n,r=Uu.SUM_BY_NONZERO_WEIGHTS){let s=ai(e,"labels","hingeLoss");const a=ai(t,"predictions","hingeLoss");let i=null;null!=n&&(i=ai(n,"weights","hingeLoss")),pr(s.shape,a.shape,"Error in hingeLoss: ");const o=lo(1);s=ll(ol(lo(2),s),o);const l=_l(ll(o,ol(s,a)));return Wu(l,i,r)}}),oi({huberLoss_:function(e,t,n,r=1,s=Uu.SUM_BY_NONZERO_WEIGHTS){const a=ai(e,"labels","huberLoss"),i=ai(t,"predictions","huberLoss");let o=null;null!=n&&(o=ai(n,"weights","huberLoss")),pr(a.shape,i.shape,"Error in huberLoss: ");const l=lo(r),u=co(ll(i,a)),c=bl(u,l),h=ll(u,c),d=ho(ol(lo(.5),xl(c)),ol(l,h));return Wu(d,o,s)}}),oi({logLoss_:function(e,t,n,r=1e-7,s=Uu.SUM_BY_NONZERO_WEIGHTS){const a=ai(e,"labels","logLoss"),i=ai(t,"predictions","logLoss");let o=null;null!=n&&(o=ai(n,"weights","logLoss")),pr(a.shape,i.shape,"Error in logLoss: ");const l=lo(1),u=lo(r),c=kl(ol(a,sl(ho(i,u)))),h=ol(ll(l,a),sl(ho(ll(l,i),u))),d=ll(c,h);return Wu(d,o,s)}});const Vu=oi({squaredDifference_:function(e,t){let n=ai(e,"a","squaredDifference"),r=ai(t,"b","squaredDifference");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel(aa,s,{})}});oi({meanSquaredError_:function(e,t,n,r=Uu.SUM_BY_NONZERO_WEIGHTS){const s=ai(e,"labels","meanSquaredError"),a=ai(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=ai(n,"weights","meanSquaredError")),pr(s.shape,a.shape,"Error in meanSquaredError: ");const o=Vu(s,a);return Wu(o,i,r)}});const Gu=oi({log1p_:function(e){const t={x:ai(e,"x","log1p")};return Qa.runKernel(Es,t)}});oi({sigmoidCrossEntropy_:function(e,t,n,r=0,s=Uu.SUM_BY_NONZERO_WEIGHTS){let a=ai(e,"multiClassLabels","sigmoidCrossEntropy");const i=ai(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ai(n,"weights","sigmoidCrossEntropy")),pr(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=lo(r),t=lo(1),n=lo(.5);a=ho(ol(a,ll(t,e)),ol(n,e))}const l=function(e,t){const n=ai(e,"labels","sigmoidCrossEntropyWithLogits"),r=ai(t,"logits","sigmoidCrossEntropyWithLogits");pr(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=_l(r),a=ol(r,n),i=Gu(al(kl(co(r))));return ho(ll(s,a),i)}(a,i);return Wu(l,o,s)}});const ju=oi({logSumExp_:function(e,t=null,n=!1){const r=ai(e,"x","logSumExp"),s=xr(t,r.shape),a=il(r,s,!0),i=ll(r,a),o=al(i),l=ul(o,s),u=sl(l),c=ho(ko(a,u.shape),u);if(n){const e=yl(c.shape,s);return ko(c,e)}return c}});oi({softmaxCrossEntropy_:function(e,t,n,r=0,s=Uu.SUM_BY_NONZERO_WEIGHTS){let a=ai(e,"onehotLabels","softmaxCrossEntropy");const i=ai(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ai(n,"weights","softmaxCrossEntropy")),pr(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=lo(r),t=lo(1),n=lo(a.shape[1]);a=ho(ol(a,ll(t,e)),Go(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);return oo(((e,t,r)=>{const s=ju(t,[n],!0),a=ll(Gi(t,"float32"),s);r([e,a]);const i=kl(ol(a,e));return{value:ul(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=yl(e.shape,[n]);return[ol(ko(e,a),ll(Gi(r,"float32"),al(s))),ol(ko(e,a),ll(al(s),Gi(r,"float32")))]}}}))(e,t)}(a,i);return Wu(l,o,s)}}),oi({sparseFillEmptyRows_:function(e,t,n,r){const s=ai(e,"indices","sparseFillEmptyRows"),a=ai(t,"values","sparseFillEmptyRows"),i=ai(n,"denseShape","sparseFillEmptyRows"),o=ai(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Qa.runKernel("SparseFillEmptyRows",l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),oi({sparseReshape_:function(e,t,n){const r=ai(e,"inputIndices","sparseReshape"),s=ai(t,"inputShape","sparseReshape"),a=ai(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Qa.runKernel("SparseReshape",i);return{outputIndices:o[0],outputShape:o[1]}}});const Hu={bandPart:_u,gramSchmidt:zu,qr:Pu};class Ku extends uo{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=Qa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Qa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:so((()=>nu(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:so((()=>nu(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;so((()=>{const e=ho(ol(a,this.rho),ol(xl(s),1-this.rho)),t=ol(Go(Kl(ho(i,this.epsilon)),Kl(ho(a,this.epsilon))),s),n=ho(ol(i,this.rho),ol(xl(t),1-this.rho));a.assign(e),i.assign(n);const o=ho(ol(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(ao(this.accumulatedGrads.map((e=>e.variable))),ao(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Ku.className="Adadelta",no(Ku);class qu extends uo{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Qa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:so((()=>Zo(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;so((()=>{const e=ho(a,xl(s));a.assign(e);const t=ho(ol(Go(s,Kl(ho(e,Qa.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&ao(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}qu.className="Adagrad",no(qu);class Xu extends uo{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],so((()=>{this.accBeta1=lo(t).variable(),this.accBeta2=lo(n).variable()})),null==r&&(this.epsilon=Qa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);so((()=>{const n=ll(1,this.accBeta1),r=ll(1,this.accBeta2);t.forEach(((t,s)=>{const a=Qa.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:so((()=>nu(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:so((()=>nu(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedSecondMoment[s].variable,u=ho(ol(o,this.beta1),ol(i,1-this.beta1)),c=ho(ol(l,this.beta2),ol(xl(i),1-this.beta2)),h=Go(u,n),d=Go(c,r);o.assign(u),l.assign(c);const p=ho(ol(Go(h,ho(Kl(d),this.epsilon)),-this.learningRate),a);a.assign(p)})),this.accBeta1.assign(ol(this.accBeta1,this.beta1)),this.accBeta2.assign(ol(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&ao(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&ao(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),so((()=>{this.accBeta1.assign(Ou(this.beta1,this.iterations_+1)),this.accBeta2.assign(Ou(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Xu.className="Adam",no(Xu);class Yu extends uo{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],so((()=>{this.iteration=lo(0).variable(),this.accBeta1=lo(t).variable()})),null==r&&(this.epsilon=Qa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);so((()=>{const n=ll(1,this.accBeta1),r=Go(-this.learningRate,ho(ol(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=Qa.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:nu(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:nu(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,l=this.accumulatedWeightedInfNorm[s].variable,u=ho(ol(o,this.beta1),ol(i,1-this.beta1)),c=ol(l,this.beta2),h=co(i),d=fl(c,h);o.assign(u),l.assign(d);const p=ho(ol(Go(r,n),Go(u,ho(d,this.epsilon))),a);a.assign(p)})),this.iteration.assign(ho(this.iteration,1)),this.accBeta1.assign(ol(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&ao(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&ao(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Yu.className="Adamax",no(Yu);class Ju extends uo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=Qa.registeredVariables[t];so((()=>{const e=ho(ol(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=io(lo(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ju.className="SGD",no(Ju);class Zu extends Ju{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=lo(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Qa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:so((()=>nu(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&so((()=>{let e;const t=ho(ol(this.m,s),a);e=this.useNesterov?ho(ol(this.c,ho(a,ol(t,this.m))),r):ho(ol(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&ao(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Zu.className="Momentum",no(Zu);class Qu extends uo{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=Qa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Qa.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:so((()=>nu(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:so((()=>nu(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:so((()=>nu(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;so((()=>{const e=ho(ol(i,this.decay),ol(xl(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=ho(ol(t,this.decay),ol(a,1-this.decay)),l=Go(ol(a,this.learningRate),Kl(ll(e,ho(xl(s),this.epsilon)))),u=ho(ol(o,this.momentum),l);i.assign(e),t.assign(s),o.assign(u);const c=ll(r,u);r.assign(c)}else{const e=ho(ol(i,this.decay),ol(xl(a),1-this.decay)),t=ho(ol(o,this.momentum),Go(ol(a,this.learningRate),Kl(ho(e,this.epsilon))));i.assign(e),o.assign(t);const n=ll(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&ao(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&ao(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&ao(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Qu.className="RMSProp",no(Qu);class ec{static sgd(e){return new Ju(e)}static momentum(e,t,n=!1){return new Zu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Qu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Xu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Ku(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Yu(e,t,n,r,s)}static adagrad(e,t=.1){return new qu(e,t)}}const tc={sgd:ec.sgd,momentum:ec.momentum,adadelta:ec.adadelta,adagrad:ec.adagrad,rmsprop:ec.rmsprop,adamax:ec.adamax,adam:ec.adam},nc="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function rc(){return new Promise((e=>nc((()=>e()))))}za().prototype.abs=function(){return this.throwIfDisposed(),co(this)};const sc=oi({acos_:function(e){const t={x:ai(e,"x","acos")};return Qa.runKernel(Ur,t)}});za().prototype.acos=function(){return this.throwIfDisposed(),sc(this)};const ac=oi({acosh_:function(e){const t={x:ai(e,"x","acosh")};return Qa.runKernel(Wr,t)}});za().prototype.acosh=function(){return this.throwIfDisposed(),ac(this)},za().prototype.add=function(e){return this.throwIfDisposed(),ho(this,e)},za().prototype.all=function(e,t){return this.throwIfDisposed(),po(this,e,t)},za().prototype.any=function(e,t){return this.throwIfDisposed(),fo(this,e,t)},za().prototype.argMax=function(e){return this.throwIfDisposed(),go(this,e)};const ic=oi({argMin_:function(e,t=0){const n={x:ai(e,"x","argMin")},r={axis:t};return Qa.runKernel(jr,n,r)}});za().prototype.argMin=function(e){return this.throwIfDisposed(),ic(this,e)},za().prototype.asScalar=function(){return this.throwIfDisposed(),dr(1===this.size,(()=>"The array must have only 1 element.")),ko(this,[])},za().prototype.asType=function(e){return this.throwIfDisposed(),Gi(this,e)},za().prototype.as1D=function(){return this.throwIfDisposed(),ko(this,[this.size])},za().prototype.as2D=function(e,t){return this.throwIfDisposed(),ko(this,[e,t])},za().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ko(this,[e,t,n])},za().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ko(this,[e,t,n,r])},za().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ko(this,[e,t,n,r,s])};const oc=oi({asin_:function(e){const t={x:ai(e,"x","asin")};return Qa.runKernel(Hr,t)}});za().prototype.asin=function(){return this.throwIfDisposed(),oc(this)};const lc=oi({asinh_:function(e){const t={x:ai(e,"x","asinh")};return Qa.runKernel(Kr,t)}});za().prototype.asinh=function(){return this.throwIfDisposed(),lc(this)};const uc=oi({atan_:function(e){const t={x:ai(e,"x","atan")};return Qa.runKernel(qr,t)}});za().prototype.atan=function(){return this.throwIfDisposed(),uc(this)};const cc=oi({atan2_:function(e,t){let n=ai(e,"a","atan2"),r=ai(t,"b","atan2");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel(Yr,s)}});za().prototype.atan2=function(e){return this.throwIfDisposed(),cc(this,e)};const hc=oi({atanh_:function(e){const t={x:ai(e,"x","atanh")};return Qa.runKernel(Xr,t)}});za().prototype.atanh=function(){return this.throwIfDisposed(),hc(this)},za().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),Io(this,e,t,n,r)};const dc=oi({batchToSpaceND_:function(e,t,n){const r=ai(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));dr(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),dr(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),dr(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return Qa.runKernel(es,a,i)}});za().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),dc(this,e,t)},za().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),$o(this,e,t,n,r,s)},za().prototype.broadcastTo=function(e){return this.throwIfDisposed(),eu(this,e)},za().prototype.cast=function(e){return this.throwIfDisposed(),Gi(this,e)};const pc=oi({ceil_:function(e){const t={x:ai(e,"x","ceil")};return Qa.runKernel(ns,t)}});za().prototype.ceil=function(){return this.throwIfDisposed(),pc(this)},za().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),To(this,e,t)},za().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ma&&(e=[e]),Ao([this,...e],t)},za().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Lo(this,e,t,n,r,s,a)},za().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),zo(this,e,t,n,r,s)},za().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Oo(this,e,t,n,r,s,a)};const fc=oi({cos_:function(e){const t={x:ai(e,"x","cos")};return Qa.runKernel("Cos",t)}});za().prototype.cos=function(){return this.throwIfDisposed(),fc(this)};const gc=oi({cosh_:function(e){const t={x:ai(e,"x","cosh")};return Qa.runKernel(us,t)}});za().prototype.cosh=function(){return this.throwIfDisposed(),gc(this)};const mc=oi({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:ai(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return Qa.runKernel(cs,s,a)}});za().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),mc(this,e,t,n)};const bc=oi({depthToSpace_:function(e,t,n="NHWC"){const r=ai(e,"x","depthToSpace"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];dr(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),dr(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),dr(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},l={blockSize:t,dataFormat:n};return Qa.runKernel("DepthToSpace",o,l)}});za().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),bc(this,e,t)},za().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Wo(this,e,t,n,r,s,a)};const yc=oi({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=ai(e,"x","dilation2d"),o=ai(t,"filter","dilation2d");dr(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),dr(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),dr("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=ko(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:r,dilations:s},d=Qa.runKernel(ds,c,h);return u?ko(d,[d.shape[1],d.shape[2],d.shape[3]]):d}});za().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),yc(this,e,t,n,r,s)};const wc=oi({divNoNan_:function(e,t){let n=ai(e,"a","div"),r=ai(t,"b","div");[n,r]=Ha(n,r);const s=Go(n,r),a=nu(s),i=qo(r,a);return tu(i,a,s)}});za().prototype.divNoNan=function(e){return this.throwIfDisposed(),wc(this,e)},za().prototype.div=function(e){return this.throwIfDisposed(),Go(this,e)};const xc=oi({dot_:function(e,t){const n=ai(e,"t1","dot"),r=ai(t,"t2","dot");dr(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(dr(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=ko(n,[1,-1]),t=ko(r,[-1,1]),s=vu(e,t);return ko(s,[])}if(1===n.rank&&2===r.rank){const e=ko(n,[1,-1]),t=ko(r,[r.shape[0],r.shape[1]]),s=vu(e,t);return ko(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ko(r,[-1,1]),t=vu(n,e);return ko(t,[t.size])}{const e=ko(r,[r.shape[0],r.shape[1]]);return vu(n,e)}}});za().prototype.dot=function(e){return this.throwIfDisposed(),xc(this,e)},za().prototype.elu=function(){return this.throwIfDisposed(),jo(this)},za().prototype.equal=function(e){return this.throwIfDisposed(),qo(this,e)};const vc=oi({erf_:function(e){let t=ai(e,"x","erf");dr("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Gi(t,"float32"));const n={x:t};return Qa.runKernel("Erf",n)}});za().prototype.erf=function(){return this.throwIfDisposed(),vc(this)},za().prototype.exp=function(){return this.throwIfDisposed(),al(this)},za().prototype.expandDims=function(e){return this.throwIfDisposed(),Xo(this,e)};const kc=oi({expm1_:function(e){const t={x:ai(e,"x","expm1")};return Qa.runKernel(gs,t)}});za().prototype.expm1=function(){return this.throwIfDisposed(),kc(this)},za().prototype.fft=function(){return this.throwIfDisposed(),ou(this)},za().prototype.flatten=function(){return this.throwIfDisposed(),ko(this,[this.size])},za().prototype.floor=function(){return this.throwIfDisposed(),Qo(this)},za().prototype.floorDiv=function(e){return this.throwIfDisposed(),Vo(this,e)},za().prototype.gather=function(e,t){return this.throwIfDisposed(),el(this,e,t)},za().prototype.greaterEqual=function(e){return this.throwIfDisposed(),nl(this,e)},za().prototype.greater=function(e){return this.throwIfDisposed(),tl(this,e)},za().prototype.ifft=function(){return this.throwIfDisposed(),uu(this)},za().prototype.irfft=function(){return this.throwIfDisposed(),cu(this)};const Ic=oi({isFinite_:function(e){const t={x:ai(e,"x","isFinite")};return Qa.runKernel(ks,t)}});za().prototype.isFinite=function(){return this.throwIfDisposed(),Ic(this)};const Sc=oi({isInf_:function(e){const t={x:ai(e,"x","isInf")};return Qa.runKernel(Is,t)}});za().prototype.isInf=function(){return this.throwIfDisposed(),Sc(this)};const $c=oi({isNaN_:function(e){const t={x:ai(e,"x","isNaN")};return Qa.runKernel(Ss,t)}});za().prototype.isNaN=function(){return this.throwIfDisposed(),$c(this)},za().prototype.leakyRelu=function(e){return this.throwIfDisposed(),rl(this,e)},za().prototype.lessEqual=function(e){return this.throwIfDisposed(),Ru(this,e)};const Ec=oi({less_:function(e,t){let n=ai(e,"a","less"),r=ai(t,"b","less");[n,r]=Ha(n,r),Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("Less",s)}});za().prototype.less=function(e){return this.throwIfDisposed(),Ec(this,e)};const Cc=oi({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=ai(e,"x","localResponseNormalization");dr(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),dr(yr(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=ko(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:r,beta:s},c=Qa.runKernel("LRN",l,u);return o?ko(c,[c.shape[1],c.shape[2],c.shape[3]]):c}});za().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Cc(this,e,t,n,r)};const Nc=oi({logSigmoid_:function(e){const t=ai(e,"x","logSigmoid");return oo((e=>({value:kl(jl(kl(e))),gradFunc:t=>ol(t,zl(kl(e)))})))(t)}});za().prototype.logSigmoid=function(){return this.throwIfDisposed(),Nc(this)},za().prototype.logSoftmax=function(e){return this.throwIfDisposed(),cl(this,e)},za().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),ju(this,e,t)},za().prototype.log=function(){return this.throwIfDisposed(),sl(this)},za().prototype.log1p=function(){return this.throwIfDisposed(),Gu(this)},za().prototype.logicalAnd=function(e){return this.throwIfDisposed(),hl(this,e)};const Tc=oi({logicalNot_:function(e){const t={x:ai(e,"x","logicalNot","bool")};return Qa.runKernel("LogicalNot",t)}});za().prototype.logicalNot=function(){return this.throwIfDisposed(),Tc(this)};const Ac=oi({logicalOr_:function(e,t){const n=ai(e,"a","logicalOr","bool"),r=ai(t,"b","logicalOr","bool");Ko(n.shape,r.shape);const s={a:n,b:r};return Qa.runKernel("LogicalOr",s)}});za().prototype.logicalOr=function(e){return this.throwIfDisposed(),Ac(this,e)};const Rc=oi({logicalXor_:function(e,t){const n=ai(e,"a","logicalXor","bool"),r=ai(t,"b","logicalXor","bool");return Ko(n.shape,r.shape),hl(Ac(e,t),Tc(hl(e,t)))}});za().prototype.logicalXor=function(e){return this.throwIfDisposed(),Rc(this,e)},za().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),vu(this,e,t,n)},za().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),dl(this,e,t,n,r)},za().prototype.max=function(e,t){return this.throwIfDisposed(),il(this,e,t)},za().prototype.maximum=function(e){return this.throwIfDisposed(),fl(this,e)},za().prototype.mean=function(e,t){return this.throwIfDisposed(),gl(this,e,t)},za().prototype.min=function(e,t){return this.throwIfDisposed(),ml(this,e,t)},za().prototype.minimum=function(e){return this.throwIfDisposed(),bl(this,e)};const Dc=oi({mirrorPad_:function(e,t,n){dr("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=ai(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");dr(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)dr(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),dr(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return Qa.runKernel(Ds,i,a)}});za().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Dc(this,e,t)};const Fc=oi({mod_:function(e,t){let n=ai(e,"a","mod"),r=ai(t,"b","mod");[n,r]=Ha(n,r);const s={a:n,b:r};return Qa.runKernel("Mod",s)}});za().prototype.mod=function(e){return this.throwIfDisposed(),Fc(this,e)},za().prototype.mul=function(e){return this.throwIfDisposed(),ol(this,e)},za().prototype.neg=function(){return this.throwIfDisposed(),kl(this)},za().prototype.norm=function(e,t,n){return this.throwIfDisposed(),Mu(this,e,t,n)},za().prototype.notEqual=function(e){return this.throwIfDisposed(),Il(this,e)},za().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Sl(this,e,t,n)},za().prototype.onesLike=function(){return this.throwIfDisposed(),Cl(this)},za().prototype.pad=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)};const _c=oi({spaceToBatchND_:function(e,t,n){const r=ai(e,"x","spaceToBatchND");dr(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),dr(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),dr(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return Qa.runKernel(na,s,a)}}),Oc=oi({pool_:function(e,t,n,r,s,a){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const i=ai(e,"x","maxPool");let o=i,l=!1;3===i.rank&&(l=!0,o=ko(i,[1,i.shape[0],i.shape[1],i.shape[2]])),dr(vo(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const u=function(e,t,n,r,s,a,i="channelsLast"){const[o,l]=bo(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return mo(e,u,n,r,s,a,!1,i)}(o.shape,t,a,s,r),c=[u.dilationHeight,u.dilationWidth];let h;h="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([u.filterHeight,u.filterWidth],c):[[0,0],[0,0]];const d=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([u.inHeight,u.inWidth],c,h),g=d?r:"valid",m=d?o:_c(o,c,p),b=("avg"===n?()=>Io(m,t,a,g):()=>dl(m,t,a,g))(),y=d?b:dc(b,c,f);return l?ko(y,[y.shape[1],y.shape[2],y.shape[3]]):y}});za().prototype.pool=function(e,t,n,r,s){return this.throwIfDisposed(),Oc(this,e,t,n,r,s)},za().prototype.pow=function(e){return this.throwIfDisposed(),Ou(this,e)},za().prototype.prelu=function(e){return this.throwIfDisposed(),Tl(this,e)};const Lc=oi({prod_:function(e,t=null,n=!1){let r=ai(e,"x","prod");"bool"===r.dtype&&(r=Gi(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Qa.runKernel("Prod",s,a)}});za().prototype.prod=function(e,t){return this.throwIfDisposed(),Lc(this,e,t)};const Mc=oi({reciprocal_:function(e){const t={x:ai(e,"x","reciprocal")};return Qa.runKernel(Bs,t)}});za().prototype.reciprocal=function(){return this.throwIfDisposed(),Mc(this)},za().prototype.relu=function(){return this.throwIfDisposed(),_l(this)},za().prototype.relu6=function(){return this.throwIfDisposed(),du(this)},za().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ko(this,e.shape)},za().prototype.reshape=function(e){return this.throwIfDisposed(),ko(this,e)},za().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Nu(this,e,t,n)},za().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),Tu(this,e,t,n)},za().prototype.reverse=function(e){return this.throwIfDisposed(),Ol(this,e)},za().prototype.rfft=function(){return this.throwIfDisposed(),lu(this)},za().prototype.round=function(){return this.throwIfDisposed(),Du(this)};const zc=oi({rsqrt_:function(e){const t={x:ai(e,"x","rsqrt")};return Qa.runKernel(Ks,t)}});za().prototype.rsqrt=function(){return this.throwIfDisposed(),zc(this)},za().prototype.selu=function(){return this.throwIfDisposed(),Ll(this)},za().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Ml(this,e,t,n,r,s,a)},za().prototype.sigmoid=function(){return this.throwIfDisposed(),zl(this)};const Bc=oi({sign_:function(e){const t={x:ai(e,"x","sign")};return Qa.runKernel(Zs,t)}});za().prototype.sign=function(){return this.throwIfDisposed(),Bc(this)};const Pc=oi({sin_:function(e){const t={x:ai(e,"x","sin")};return Qa.runKernel("Sin",t)}});za().prototype.sin=function(){return this.throwIfDisposed(),Pc(this)};const Uc=oi({sinh_:function(e){const t={x:ai(e,"x","sinh")};return Qa.runKernel(Js,t)}});za().prototype.sinh=function(){return this.throwIfDisposed(),Uc(this)},za().prototype.slice=function(e,t){return this.throwIfDisposed(),Bl(this,e,t)},za().prototype.softmax=function(e){return this.throwIfDisposed(),Gl(this,e)},za().prototype.softplus=function(){return this.throwIfDisposed(),jl(this)},za().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},za().prototype.split=function(e,t){return this.throwIfDisposed(),Hl(this,e,t)},za().prototype.sqrt=function(){return this.throwIfDisposed(),Kl(this)},za().prototype.square=function(){return this.throwIfDisposed(),xl(this)},za().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Vu(this,e)},za().prototype.squeeze=function(e){return this.throwIfDisposed(),ql(this,e)},za().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ma?[this,e]:[this,...e];return Xl(n,t)},za().prototype.step=function(e){return this.throwIfDisposed(),pu(this,e)};const Wc=oi({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,l=0){const u={x:ai(e,"x","stridedSlice")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return Qa.runKernel("StridedSlice",u,c)}});za().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Wc(this,e,t,n,r,s,a,i,o)},za().prototype.sub=function(e){return this.throwIfDisposed(),ll(this,e)},za().prototype.sum=function(e,t){return this.throwIfDisposed(),ul(this,e,t)};const Vc=oi({tan_:function(e){const t={x:ai(e,"x","tan")};return Qa.runKernel("Tan",t)}});za().prototype.tan=function(){return this.throwIfDisposed(),Vc(this)},za().prototype.tanh=function(){return this.throwIfDisposed(),Yl(this)},za().prototype.tile=function(e){return this.throwIfDisposed(),Yo(this,e)},za().prototype.toBool=function(){return this.throwIfDisposed(),Gi(this,"bool")},za().prototype.toFloat=function(){return this.throwIfDisposed(),Gi(this,"float32")},za().prototype.toInt=function(){return this.throwIfDisposed(),Gi(this,"int32")};const Gc=oi({topk_:function(e,t=1,n=!0){const r=ai(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,l]=Qa.runKernel("TopK",a,i);return{values:o,indices:l}}});za().prototype.topk=function(e,t){return this.throwIfDisposed(),Gc(this,e,t)},za().prototype.transpose=function(e){return this.throwIfDisposed(),ru(this,e)};const jc=oi({unique_:function(e,t=0){const n=ai(e,"x","unique","string_or_numeric");dr(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=Qa.runKernel("Unique",r,s);return{values:a,indices:i}}});za().prototype.unique=function(e){return this.throwIfDisposed(),jc(this,e)};const Hc=oi({unsortedSegmentSum_:function(e,t,n){const r=ai(e,"x","unsortedSegmentSum"),s=ai(t,"segmentIds","unsortedSegmentSum","int32");dr(yr(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return Qa.runKernel(ca,a,i)}});za().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),Hc(this,e,t)},za().prototype.unstack=function(e){return this.throwIfDisposed(),Ql(this,e)},za().prototype.where=function(e,t){return this.throwIfDisposed(),tu(e,this,t)},za().prototype.zerosLike=function(){return this.throwIfDisposed(),nu(this)};const Kc={kernelName:"Abs",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,pu(Gi(n,"float32"),-1))}}},qc={kernelName:Ur,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=xl(Gi(n,"float32")),r=Kl(ll(lo(1),t));return kl(Go(e,r))}}}},Xc={kernelName:Wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Kl(ll(xl(Gi(n,"float32")),1));return Go(e,t)}}}},Yc={kernelName:Vr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{let t=e;const r=Ho(n.shape,s);return r.length>0&&(t=ul(t,r)),ko(t,n.shape)},b:()=>{let t=e;const n=Ho(r.shape,s);return n.length>0&&(t=ul(t,n)),ko(t,r.shape)}}}},Jc={kernelName:Gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(n)}}},Zc={kernelName:jr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>nu(n)}}},Qc={kernelName:Hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,Kl(ll(lo(1),xl(Gi(n,"float32")))))}}},eh={kernelName:Kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=Kl(ho(lo(1),xl(Gi(n,"float32"))));return Go(e,t)}}}},th={kernelName:Yr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=ho(xl(n),xl(r));let a=ol(e,Go(r,t));const i=Ho(n.shape,s);return i.length>0&&(a=ul(a,i)),ko(a,n.shape)},b:()=>{const t=ho(xl(n),xl(r));let a=kl(ol(e,Go(n,t)));const i=Ho(r.shape,s);return i.length>0&&(a=ul(a,i)),ko(a,r.shape)}}}},nh={kernelName:qr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,ho(xl(Gi(n,"float32")),1))}}},rh={kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,ll(lo(1),xl(Gi(n,"float32"))))}}},sh=oi({avgPool3dGrad_:function(e,t,n,r,s,a){const i=ai(e,"dy","avgPool3dGrad"),o=ai(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=ko(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=ko(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),dr(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),dr(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),null!=a&&dr(yr(s),(()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const h={dy:l,input:u},d={filterSize:n,strides:r,pad:s,dimRoundingMode:a},p=Qa.runKernel("AvgPool3DGrad",h,d);return c?ko(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),ah={kernelName:Zr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>sh(e,r,s,a,i,o)}}},ih=oi({avgPoolGrad_:function(e,t,n,r,s){const a=ai(e,"dy","avgPoolGrad"),i=ai(t,"input","avgPoolGrad");dr(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=ko(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=ko(a,[1,a.shape[0],a.shape[1],a.shape[2]])),dr(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),dr(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:r,pad:s},d=Qa.runKernel("AvgPoolGrad",c,h);return u?ko(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),oh={kernelName:Jr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>ih(e,r,s,a,i)}}},lh={kernelName:Qr,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>vu(e,s,!1,!1),b:()=>vu(e,r,!0,!1)}:a&&!i?{a:()=>vu(s,e,!1,!0),b:()=>vu(r,e,!1,!1)}:{a:()=>vu(s,e,!0,!0),b:()=>vu(e,r,!0,!0)}:{a:()=>vu(e,s,!1,!0),b:()=>vu(r,e,!0,!1)}}},uh={kernelName:es,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>_c(e,r,s)}}},ch={kernelName:"BroadcastTo",gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>ul(e,o,!0)}}},hh={kernelName:ts,gradFunc:e=>({x:()=>e.clone()})},dh={kernelName:ns,gradFunc:e=>({x:()=>nu(e)})},ph={kernelName:rs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>tu(hl(nl(r,s),Ru(r,a)),e,nu(e))}}},fh={kernelName:ss,inputsToSave:["x"],gradFunc:Kc.gradFunc},gh={kernelName:as,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=xr(s,t[0].shape)[0],i=r.map((e=>e[a]));return Hl(e,i,a).map((e=>()=>e))}},mh={kernelName:is,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return dr(xo(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Mo(r.shape,e,s,i,o,l),filter:()=>hu(r,e,s.shape,i,o,l)}}},bh={kernelName:os,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Oo(e,s,a,i,o,1,l),filter:()=>hu(e,r,s.shape,a,i,o,l)}}},yh=oi({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ko(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ko(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),dr(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),dr(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),dr(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),dr(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),dr(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:r,pad:s,filterShape:n};return Qa.runKernel("Conv3DBackpropFilterV2",o,l)}}),wh={kernelName:ls,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;dr(xo(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Po(i.shape,e,o,s,a),filter:()=>yh(i,e,o.shape,s,a)}}},xh={kernelName:"Cos",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(kl(Pc(Gi(n,"float32"))),e)}}},vh={kernelName:us,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(Uc(Gi(n,"float32")),e)}}},kh={kernelName:cs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=function(e,t){if(function(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}([s],r.rank);let n=mc(e,s,a,!i);return null!=t&&(n=ru(n,t)),n}}}},Ih={kernelName:hs,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;dr(xo(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return dr(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),dr(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),dr(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),dr(vo(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),null!=i&&dr(yr(a),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`)),{x:()=>xu(l.shape,e,u,s,a,r,i),filter:()=>wu(l,e,u.shape,s,a,r,i)}}},Sh={kernelName:ds,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>Qa.runKernel("Dilation2DBackpropInput",a,n),filter:()=>Qa.runKernel("Dilation2DBackpropFilter",i,n)}}},$h={kernelName:"Elu",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>Qa.runKernel("EluGrad",r)}}},Eh={kernelName:"Erf",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ol(al(kl(xl(n))),2/Math.sqrt(Math.PI));return{x:()=>ol(e,r)}}},Ch={kernelName:"Exp",outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,n)}}},Nh={kernelName:fs,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ko(e,n.shape)}}},Th={kernelName:gs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,al(n))}}},Ah={kernelName:ms,gradFunc:e=>({x:()=>nu(e)})},Rh={kernelName:bs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=Go(e,Gi(r,"float32")),a=Ho(n.shape,s);return a.length>0?ko(ul(t,a),n.shape):t},b:()=>{let t=ol(e,Gi(n,"float32"));const a=Ho(r.shape,s);a.length>0&&(t=ko(ul(t,a),r.shape));const i=xl(r);return kl(Go(t,Gi(i,"float32")))}}}},Dh={kernelName:ys,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,l=null==o?lo(1):o,u=Ho(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=ll(s,a),d=ol(e,l),p=zc(ho(i,lo(r))),f=ol(ol(ol(p,p),p),lo(-.5));return{x:()=>1===a.rank?ko(ol(ol(e,Yo(ko(p,[1,1,1,a.shape[0]]),c)),l),s.shape):ko(ol(ol(e,p),l),s.shape),mean:()=>{let e=ol(ol(p,lo(-1)),d);return 1===a.rank&&(e=ul(e,u)),ko(e,a.shape)},variance:()=>{let e=ol(ol(f,h),d);return 1===a.rank&&(e=ul(e,u)),ko(e,a.shape)},scale:()=>{const t=ol(h,p);let n=ol(e,t);return 1===a.rank&&(n=ul(n,u)),ko(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=ul(t,u)),ko(t,a.shape)}}}},Fh={kernelName:ws,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=xr(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=_h(0,l),d=_h(l+1,l+1+c),p=Oh([o,[n],u]),f=ko(e,p),g=ko(s,[n]),m=Oh([[l],h,d]),b=ru(f,m);let y=Hc(b,g,r.shape[i]);const w=wl(m);return y=ru(y,w),y},indices:()=>s}}};function _h(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Oh(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Lh={kernelName:xs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>nu(n),b:()=>nu(r)}}},Mh={kernelName:vs,gradFunc:e=>({x:()=>Gi(e,"float32")})},zh={kernelName:ks,gradFunc:e=>({x:()=>nu(e)})},Bh={kernelName:Is,gradFunc:e=>({x:()=>nu(e)})},Ph={kernelName:Ss,gradFunc:e=>({x:()=>nu(e)})},Uh={kernelName:$s,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=tl(r,0);return{x:()=>tu(a,e,ol(e,s))}}},Wh={kernelName:Es,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,ho(n,1))}}},Vh={kernelName:"Log",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,Gi(n,"float32"))}}},Gh={kernelName:"LogSoftmax",inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=al(r);return ll(e,ol(ul(e,s,!0),t))}}}},jh=oi({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:r,bias:s,alpha:a,beta:i};return Qa.runKernel("LRNGrad",o,l)}}),Hh={kernelName:"LRN",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>jh(r,s,e,a,i,o,l)}}};function Kh(e,t,n,r){return t.rank<n.rank&&(t=ko(t,yl(t.shape,r))),e.rank<n.rank&&(e=ko(e,yl(e.shape,r))),{x:()=>ol(e,Gi(qo(n,t),e.dtype))}}const qh={kernelName:"Max",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=Kh(e,t[1],a,xr(s,a.shape));return{x:()=>i.x()}}},Xh={kernelName:Cs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ol(e,Gi(nl(n,r),"float32")),b:()=>ol(e,Gi(Ec(n,r),"float32"))}}},Yh=oi({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=ai(e,"dy","maxPool3dGrad"),l=ai(t,"input","maxPool3dGrad"),u=ai(n,"output","maxPool3dGrad");let c=o,h=l,d=u,p=!1;4===l.rank&&(p=!0,c=ko(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ko(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),d=ko(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),dr(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),dr(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),dr(5===d.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${d.rank}.`)),null!=i&&dr(yr(a),(()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const f={dy:c,input:h,output:d},g={filterSize:r,strides:s,pad:a,dimRoundingMode:i},m=Qa.runKernel("MaxPool3DGrad",f,g);return p?ko(m,[m.shape[1],m.shape[2],m.shape[3],m.shape[4]]):m}}),Jh={kernelName:Ts,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Yh(e,r,s,a,i,o,l)}}},Zh=oi({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=ai(e,"dy","maxPoolGrad"),l=ai(t,"input","maxPoolGrad"),u=ai(n,"output","maxPoolGrad");dr(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),dr(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),dr(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),null!=i&&dr(yr(a),(()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`));const c={dy:o,input:l,output:u},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return Qa.runKernel("MaxPoolGrad",c,h)}}),Qh={kernelName:Ms,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Bl(e,a,r.shape)}}},ed={kernelName:na,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>dc(e,r,s)}}},td={kernelName:ra,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>Ao(e,r)}}},nd=[Kc,qc,Xc,Yc,{kernelName:"AddN",saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},Jc,Zc,Qc,eh,th,nh,rh,ah,oh,lh,uh,ch,hh,dh,ph,fh,gh,bh,mh,wh,xh,vh,kh,Ih,Sh,{kernelName:ps,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=Go(e,Gi(r,"float32")),a=Ho(n.shape,s);return a.length>0?ko(ul(t,a),n.shape):t},b:()=>{let t=ol(e,Gi(n,"float32"));const a=Ho(r.shape,s);a.length>0&&(t=ko(ul(t,a),r.shape));const i=xl(r);return kl(Go(t,Gi(i,"float32")))}}}},$h,Eh,Ch,Nh,Th,Rh,Ah,Dh,Fh,Lh,Mh,zh,Bh,Ph,Uh,Wh,Vh,Gh,Hh,qh,qh,Xh,Jh,{kernelName:Ns,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Zh(e,r,s,a,i,o)}}},{kernelName:As,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=xr(s,r.shape),i=mr(function(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=ko(e,t);return Go(ol(n,El(r.shape,"float32")),i)}}}},{kernelName:"Min",inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=Kh(e,i,a,xr(s,a.shape));return{x:()=>o.x()}}},{kernelName:Rs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>ol(e,Gi(Ru(n,r),"float32")),b:()=>ol(e,Gi(tl(n,r),"float32"))}}},{kernelName:Ds,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>Bl(e,a,r.shape)}}},{kernelName:"Mod",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=Ho(n.shape,s);return t.length>0?ko(ul(e,t),n.shape):e},b:()=>{const t=ol(e,kl(Qo(Go(n,r)))),a=Ho(r.shape,s);return a.length>0?ko(ul(t,a),r.shape):t}}}},{kernelName:Fs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{const t=ol(e,Gi(r,"float32")),a=Ho(n.shape,s);return a.length>0?ko(ul(t,a),n.shape):t},b:()=>{const t=ol(e,Gi(n,"float32")),a=Ho(r.shape,s);return a.length>0?ko(ul(t,a),r.shape):t}}}},{kernelName:"Neg",gradFunc:e=>({x:()=>kl(e)})},{kernelName:Os,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>$l(n.shape,"float32")}}},{kernelName:_s,gradFunc:e=>({x:()=>nu(e)})},{kernelName:Ls,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return Ql(e,r).map((e=>()=>e))}},Qh,Qh,{kernelName:"Pow",inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Ko(a.shape,i.shape);return{a:()=>{const t=Gi(i,"float32");let n=ol(e,ol(t,Ou(a,ll(t,lo(1)))));const r=Ho(a.shape,o);return r.length>0&&(n=ul(n,r)),ko(n,a.shape)},b:()=>{const t=tl(a,0),n=tu(t,sl(a),nu(a));let r=ol(e,ol(s,n));const l=Ho(i.shape,o);return l.length>0&&(r=ul(r,l)),ko(r,i.shape)}}}},{kernelName:zs,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=tl(n,0);return{x:()=>tu(s,e,ol(e,r)),alpha:()=>{let t=tu(s,nu(e),ol(e,n));const a=Ho(r.shape,e.shape);return a.length>0&&(t=ul(t,a)),ko(t,r.shape)}}}},{kernelName:Bs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,kl(xl(n)))}}},{kernelName:Gs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=ol(Ru(n,6),pu(n));return{x:()=>ol(e,Gi(r,"float32"))}}},{kernelName:Ps,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,Gi(pu(n),"float32"))}}},{kernelName:Us,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ko(e,n.shape)}}},{kernelName:Vs,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Qa.runKernel("ResizeBilinearGrad",s,n)}}},{kernelName:Ws,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>Qa.runKernel("ResizeNearestNeighborGrad",s,n)}}},{kernelName:js,gradFunc:(e,t,n)=>{const{dims:r}=n,s=xr(r,e.shape);return{x:()=>Ol(e,s)}}},{kernelName:Hs,gradFunc:e=>({x:()=>nu(e)})},{kernelName:Ks,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>kl(Go(e,ol(Ou(n,1.5),2)))}}},{kernelName:qs,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Gi(nu(n),"float32"),t:()=>ol(e,Gi(n,e.dtype)),e:()=>ol(e,Gi(Tc(n),e.dtype))}}},{kernelName:Xs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=tl(n,lo(0)),r=lo(1.7580993408473768),s=lo(1.0507009873554805),a=ol(e,s),i=ol(ol(e,r),al(Gi(n,"float32")));return tu(t,a,i)}}}},{kernelName:Qs,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,ol(n,ll(lo(1),n)))}}},{kernelName:Zs,gradFunc:e=>({x:()=>nu(e)})},{kernelName:"Sin",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(fc(Gi(n,"float32")),e)}}},{kernelName:Js,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(gc(Gi(n,"float32")),e)}}},{kernelName:Ys,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,l]=function(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{dr(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(dr(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}(r,s,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>Nl(e,u)}}},{kernelName:sa,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=ol(e,r);return{logits:()=>ll(a,ol(ul(a,[s],!0),r))}}},{kernelName:ea,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,zl(n))}}},ed,ed,td,td,{kernelName:ta,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,ol(Kl(Gi(n,"float32")),2))}}},{kernelName:aa,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=lo(2);return{a:()=>ol(e,ol(s,ll(n,r))),b:()=>ol(e,ol(s,ll(r,n)))}}},{kernelName:"Square",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(e,ol(Gi(n,"float32"),2))}}},{kernelName:da,gradFunc:e=>({x:()=>nu(e)})},{kernelName:"Sub",inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Ko(n.shape,r.shape);return{a:()=>{let t=e;const r=Ho(n.shape,s);return r.length>0&&(t=ul(t,r)),ko(t,n.shape)},b:()=>{let t=e;const n=Ho(r.shape,s);return n.length>0&&(t=ul(t,n)),ko(kl(t),r.shape)}}}},{kernelName:"Sum",inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;xr(a,r.shape).forEach((e=>{s[e]=1}));const i=ko(e,s),o=ol(i,El(r.shape,"float32"));return{x:()=>o}}},{kernelName:"Tan",inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Go(e,xl(fc(n)))}}},{kernelName:ia,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ol(ll(lo(1),xl(n)),e)}}},{kernelName:oa,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=nu(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=ho(t,Bl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=ho(t,Bl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=ho(t,Bl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=ho(t,Bl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:la,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=wl(s);return{x:()=>ru(e,a)}}},{kernelName:ua,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Xl(e,s)}}},{kernelName:ca,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=fl(t,nu(t)),r=el(e,n);let s=nl(t,lo(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=Xo(s,e+1);s=hl(s,El(r.shape,"bool"));const i=nu(r);return tu(s,r,i)}(e,n)}}},{kernelName:ha,gradFunc:e=>({x:()=>nu(e)})}];for(const e of nd)va(e);let rd;function sd(){return null==rd&&(rd=Qa.backend.epsilon()),rd}class ad extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ad.prototype)}}class id extends Error{constructor(e){super(e),Object.setPrototypeOf(this,id.prototype)}}class od extends Error{constructor(e){super(e),Object.setPrototypeOf(this,od.prototype)}}class ld extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ld.prototype)}}class ud extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ud.prototype)}}function cd(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function hd(e,t){if(!e)throw new ud(t)}function dd(e,t){let n=0;for(const r of e)r===t&&n++;return n}function pd(e){return 1===e.length?e[0]:e}function fd(e){return Array.isArray(e)?e:[e]}function gd(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function md(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let bd={};function yd(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function wd(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>wd(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?wd(t):e[n]=t.value)}}}function xd(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in bd)a=bd[s];else if(a=t[s],null==a)throw new od(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new od(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in bd?[o,l]=bd.className:i in t&&([o,l]=t[i]),null==o)throw new od(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(bd))e[t]=bd[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},bd);for(const e of Object.keys(n))bd[e]=n[e];wd(a.config);const r=l(o,a.config,n,s);return bd=Object.assign({},t),r}{const e=Object.assign({},bd);for(const e of Object.keys(n))bd[e]=n[e];const t=new o(a.config);return bd=Object.assign({},e),t}}}function vd(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function kd(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function Id(e){if(null==e)throw new od(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Sd(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new od(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function $d(e,t,n=0,r=1/0){return hd(n>=0),hd(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function Ed(e,t){Array.isArray(e)?(dr(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>Ed(e,`element ${n+1} of ${t}`)))):dr(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${Cd(e)}.`))}function Cd(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>Cd(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Nd(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Td(e,t){return so((()=>Kl(ul(ol(e,e),t,!0))))}class Ad extends eo{getConfig(){return{}}}class Rd extends Ad{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>{const t=Td(e,this.axis),n=To(t,0,this.maxValue);return ol(e,Go(n,ho(sd(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}Rd.className="MaxNorm",no(Rd);class Dd extends Ad{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>Go(e,ho(sd(),Td(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Dd.className="UnitNorm",no(Dd);class Fd extends Ad{apply(e){return _l(e)}}Fd.className="NonNeg",no(Fd);class _d extends Ad{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return so((()=>{const t=Td(e,this.axis),n=ho(ol(this.rate,To(t,this.minValue,this.maxValue)),ol(1-this.rate,t));return ol(e,Go(n,ho(sd(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}_d.className="MinMaxNorm",no(_d);const Od={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Ld(e){return yd(e)}function Md(e,t={}){return xd(e,to.getMap().classNameMap,t,"constraint")}function zd(e){return null==e?null:"string"==typeof e?Md({className:e in Od?Od[e]:e,config:{}}):e instanceof Ad?e:Md(e)}const Bd=["channelsFirst","channelsLast"],Pd=["nearest","bilinear"],Ud=["valid","same","causal"],Wd=["max","avg"],Vd=["sum","mul","concat","ave"],Gd=new Map;function jd(e){Sd(Bd,"DataFormat",e)}function Hd(e){Sd(Ud,"PaddingMode",e)}function Kd(e){Sd(Wd,"PoolMode",e)}const qd=[];function Xd(e,t){qd.push(e);try{const e=t();return qd.pop(),e}catch(e){throw qd.pop(),e}}function Yd(e){if(!Qd(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===qd.length?"":qd.join("/")+"/")+e}function Jd(e){if(!Qd(e))throw new Error("Not a valid tensor name: '"+e+"'");Gd.has(e)||Gd.set(e,0);const t=Gd.get(e);if(Gd.set(e,Gd.get(e)+1),t>0){const n=`${e}_${t}`;return Gd.set(n,1),n}return e}const Zd=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qd(e){return!!e.match(Zd)}function ep(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function tp(e){return Jl(e=Array.isArray(e)?new Float32Array(e):e)}function np(e){return ml(tp(e)).dataSync()[0]}function rp(e){return il(tp(e)).dataSync()[0]}function sp(e,t){if(t<e)throw new od(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function ap(e,t){return e.asType(t)}function ip(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),e.reshape(n)}function op(e,t,n){return so((()=>{switch(e.rank){case 1:return Pl(e,t,n);case 2:return Ul(e,[t,0],[n,e.shape[1]]);case 3:return Wl(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Vl(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return Bl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return Bl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new od(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function lp(e,t,n){return so((()=>{switch(e.rank){case 1:return Pl(e,t,n);case 2:return Ul(e,[0,t],[e.shape[0],n]);case 3:return Wl(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Vl(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new od(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function up(e,t,n,r){return so((()=>{switch(e.rank){case 1:return Pl(e,t,n);case 2:switch(r){case 1:return op(e,t,n);case 2:return lp(e,t,n);default:throw new od(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return op(e,t,n);case 2:return Wl(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return lp(e,t,n);default:throw new od(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return op(e,t,n);case 2:return Vl(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Vl(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return lp(e,t,n);default:throw new od(`The axis is not within the rank of the tensor ${r}`)}default:throw new od(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function cp(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),Ao(e,t)}function hp(e,t){switch(e.rank){case 1:return Ro([e,t]);case 2:return Do([e,t],0);case 3:return Fo([e,t],0);case 4:return _o([e,t],0);default:throw new od(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function dp(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new od(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return Yo(e,t)}function pp(e,t=0,n=1,r,s){return Dl(e,t,n,r,s)}function fp(e,t,n,r){if(e.rank<2||t.rank<2)throw new ld(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new ld(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return ku({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bp(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=e.reshape([-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=t.transpose(c).reshape([l,-1]);const h=[...s,...u];return ku({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?bp(e.rank,r,"channelsLast"):null,activation:n}).reshape(h)}}function gp(e,t,n){return so((()=>(t=Array.isArray(t)?Jl(t,"int32"):t.toInt(),el(e,t,n))))}function mp(e){return ol(e,e)}function bp(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new od(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1,1]):t.reshape([1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,1,r[0]]):t.reshape([1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1,1]):t.reshape([1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,1,r[0]]):t.reshape([1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?t.reshape([1,r[0],1]):t.reshape([1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?t.reshape([1,1,r[0]]):t.reshape([1].concat(r))}else if(e<3)return t;throw new od(`Unsupported input rank by biasAdd: ${t.rank}`)}function yp(e,t,n){return so((()=>(null==n&&(n="channelsLast"),jd(n),e.add(bp(e.rank,t,n)))))}function wp(e,t,n,r){return so((()=>su(e,t,n,r)))}function xp(e,t,n=!1){return n?e():t()}const vp=["fanIn","fanOut","fanAvg"],kp=["normal","uniform","truncatedNormal"];class Ip extends eo{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Sp extends Ip{apply(e,t){return $l(e,t)}}Sp.className="Zeros",no(Sp);class $p extends Ip{apply(e,t){return El(e,t)}}$p.className="Ones",no($p);class Ep extends Ip{constructor(e){if(super(),"object"!=typeof e)throw new od(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new od(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return so((()=>ol(lo(this.value),El(e,t))))}getConfig(){return{value:this.value}}}Ep.className="Constant",no(Ep);class Cp extends Ip{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Fl(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}Cp.className="RandomUniform",no(Cp);class Np extends Ip{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ld(`randomNormal does not support dType ${t}.`);return pp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Np.className="RandomNormal",no(Np);class Tp extends Ip{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ld(`truncatedNormal does not support dType ${t}.`);return Zl(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Tp.className="TruncatedNormal",no(Tp);class Ap extends Ip{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return so((()=>{if(2!==e.length||e[0]!==e[1])throw new od("Identity matrix initializer can only be used for 2D square matrices.");return ol(this.gain,Jo(e[0]))}))}getConfig(){return{gain:this.gain}}}Ap.className="Identity",no(Ap);class Rp extends Ip{constructor(e){if(super(),e.scale<0)throw new od(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Sd(vp,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Sd(kp,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(jd(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=ep(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=ep(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=ep(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new ld(`${this.getClassName()} does not support dType ${t}.`);return Zl(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return Fl(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Rp.className="VarianceScaling",no(Rp);class Dp extends Rp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}Dp.className="GlorotUniform",no(Dp);class Fp extends Rp{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}Fp.className="GlorotNormal",no(Fp);class _p extends Rp{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}_p.className="HeNormal",no(_p);class Op extends Rp{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}Op.className="HeUniform",no(Op);class Lp extends Rp{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}Lp.className="LeCunNormal",no(Lp);class Mp extends Rp{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Rp.className}}Mp.className="LeCunNormal",no(Mp);class zp extends Ip{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new ld("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return so((()=>{if(e.length<2)throw new ld("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=pp(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Hu.gramSchmidt(t);return e[0]>e[1]&&(n=n.transpose()),ol(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}zp.className="Orthogonal",no(zp);const Bp={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function Pp(e,t={}){return xd(e,to.getMap().classNameMap,t,"initializer")}function Up(e){return yd(e)}function Wp(e){if("string"==typeof e){const t=e in Bp?Bp[e]:e;if("GlorotNormal"===t)return new Fp;if("GlorotUniform"===t)return new Dp;if("HeNormal"===t)return new _p;if("HeUniform"===t)return new Op;if("LeCunNormal"===t)return new Lp;if("LeCunUniform"===t)return new Mp;{const e={};return e.className=t,e.config={},Pp(e)}}return e instanceof Ip?e:Pp(e)}let Vp=0;function Gp(){return Vp++}const jp={};function Hp(e=""){return e in jp||(jp[e]=0),jp[e]+=1,e+jp[e].toString()}function Kp(e){return Array.isArray(e)&&Array.isArray(e[0])}function qp(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Xp(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new od(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function Yp(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return(e=e)[0];throw new od(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Jp(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class Zp{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Gp(),n=null==n?"Variable":n,this.originalName=Yd(n),this.name=Jd(this.originalName),this.trainable_=r,this.constraint=s,this.val=function(e,t=!0,n,r){return Qa.makeVariable(e,t,n,r)}(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Qp(e){return e.map((e=>e.read()))}function ef(e){e.forEach((e=>{e[0].write(e[1])}))}class tf{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class nf{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Gp(),null!=a&&(this.originalName=Yd(a),this.name=Jd(this.originalName)),this.rank=t.length}}let rf=0;class sf{constructor(e,t){this.callArgs=t,this.id=rf++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let af=0;class of extends eo{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=af++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=gd(e)+"_"+Hp(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new id(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new od(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return pd(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return pd(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new ad(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new ad(`Layer ${this.name} is not connected, no input to return.`);return pd(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new ad(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new ad(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return pd(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=fd(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=fd(this.inputSpec);if(e.length!==t.length)throw new od(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new od(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new od(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new od(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new od(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new od(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new od(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=fd(e);let r=!0;for(const e of n)if(!(e instanceof nf)){r=!1;break}let s=!0;for(const e of n)if(e instanceof nf){s=!1;break}if(r===s)throw new od("Arguments to apply() must be all SymbolicTensors or all Tensors");return Xd(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of fd(e))t.push(n.shape);this.build(pd(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=fd(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=pd(a),null!=this.activityRegularizer)throw new ld("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=fd(e);const t=[];for(const n of e)t.push(n.shape);return pd(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new nf(a,n,this,fd(e),t,this.name,r))):new nf(a,r,this,fd(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new ld("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new ad(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new ad(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new id(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Jp(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Qp(e?this.trainableWeights:this.weights)}setWeights(e){so((()=>{const t=this.weights;if(t.length!==e.length)throw new od(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Qp(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!br(a.shape,o.shape))throw new od(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ef(n)}))}addWeight(e,t,n,r,s,a,i){if(-1!==this._addedWeightNames.indexOf(e))throw new od(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=Wp("zeros"));const o=r.apply(t,n),l=new Zp(o,n,e,a,i);return o.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=fd(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=fd(e);t=fd(t),n=fd(n),r=fd(r),s=qp(s),a=qp(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new sf({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function lf(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=lf(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class uf extends of{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Hp("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new od("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new od("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new od("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new nf(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new sf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new od(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}async function cf(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];ao(r)}}function hf(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var df;uf.className="InputLayer",no(uf),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(df||(df={}));class pf{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class ff{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class gf extends pf{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=so((()=>ho(this.totals[e],ol(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:so((()=>{const n=ol(Go(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),io(t[e])})))}}class mf extends pf{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class bf extends pf{constructor(e,t){if(super(),this.currentEpoch=0,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Sr(this.yieldEvery)&&(this.maybeWait=function(e,t){let n,r=Ia();return(...s)=>{const a=Ia();return a-r<t||(r=a,n=e(...s)),n}}(this.maybeWait.bind(this),this.yieldEvery)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await cf(n),r.push(this.yield(e,t,n))),r.push(rc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await cf(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await cf(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(rc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await cf(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await cf(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(rc()):Sr(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await cf(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await cf(e),await this.trainEnd(e))}}function yf(e,t){return null==e&&(e={}),e instanceof pf?[e]:Array.isArray(e)&&e[0]instanceof pf?e:fd(e).map((e=>new bf(e,t)))}class wf{constructor(){}static registerCallbackConstructor(e,t){dr(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),wf.checkForDuplicate(t),null==wf.constructors[e]&&(wf.constructors[e]=[]),wf.constructors[e].push(t)}static checkForDuplicate(e){for(const t in wf.constructors)wf.constructors[+t].forEach((t=>{if(t===e)throw new od("Duplicate callback constructor.")}))}static clear(){wf.constructors={}}static createCallbacks(e){const t=[];for(const n in wf.constructors){const r=+n;e>=r&&t.push(...wf.constructors[r])}return t.map((e=>new e))}}function xf(e,t,n,r,s,a,i,o,l){const u=new mf,c=[new gf,...wf.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new ff(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function vf(e,t={},n=!1){return xd(e,to.getMap().classNameMap,t,"layer",n)}function kf(e,t){return so((()=>{"float32"!==e.dtype&&(e=e.asType("float32"));const n=ul(mp(e),t,!0),r=Zo(n.shape,sd()),s=Kl(fl(n,r));return Go(e,s)}))}function If(e,t){return so((()=>gl(mp(ll(t,e)),-1)))}function Sf(e,t){return so((()=>gl(co(ll(t,e)),-1)))}function $f(e,t){return so((()=>{const n=ll(e,t),r=To(co(e),sd(),Number.MAX_VALUE),s=co(Go(n,r));return ol(100,gl(s,-1))}))}function Ef(e,t,n=!1){return so((()=>{if(n)t=Gl(t);else{const e=ul(t,t.shape.length-1,!0);t=Go(t,e)}return t=To(t,sd(),1-sd()),kl(ul(ol(e.toFloat(),sl(t)),t.shape.length-1))}))}function Cf(e,t,n=!1){return so((()=>{const r=Qo(function(e){const t=[ep(e.shape)];return e.reshape(t)}(e)).toInt(),s=(t=To(t,sd(),1-sd())).shape;return Ef(Sl(r,s[s.length-1]).reshape(s),t,n)}))}function Nf(e,t){return so((()=>{let n;return n=To(t,sd(),1-sd()),n=sl(Go(n,ll(1,n))),gl(function(e,t){if(!br(e.shape,t.shape))throw new od(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return so((()=>{const n=t.relu(),r=t.abs().neg();return n.sub(t.mul(e)).add(r.exp().log1p())}))}(e,n),-1)}))}function Tf(e,t){return so((()=>{const n=kf(e,-1),r=kf(t,-1),s=ol(n,r);return kl(ul(s,-1))}))}wf.constructors={};const Af={meanSquaredError:If,meanAbsoluteError:Sf,meanAbsolutePercentageError:$f,meanSquaredLogarithmicError:function(e,t){return so((()=>{const n=To(t,sd(),Number.MAX_VALUE),r=sl(ho(1,n)),s=To(e,sd(),Number.MAX_VALUE),a=sl(ho(1,s));return gl(mp(ll(r,a)),-1)}))},squaredHinge:function(e,t){return so((()=>{const n=fl(0,ll(1,ol(e,t)));return gl(mp(n),-1)}))},hinge:function(e,t){return so((()=>{const n=fl(0,ll(1,ol(e,t)));return gl(n,-1)}))},categoricalHinge:function(e,t){return so((()=>{const n=ul(ol(e,t),-1),r=il(ol(ll(1,e),t),-1);return fl(0,ho(1,ll(r,n)))}))},logcosh:function(e,t){return so((()=>{const n=Math.log(2),r=ll(t,e),s=ll(ho(r,jl(ol(-2,r))),n);return gl(s,-1)}))},categoricalCrossentropy:Ef,sparseCategoricalCrossentropy:Cf,binaryCrossentropy:Nf,kullbackLeiblerDivergence:function(e,t){return so((()=>{const n=To(e,sd(),1),r=To(t,sd(),1);return ul(ol(e,sl(Go(n,r))),-1)}))},poisson:function(e,t){return so((()=>{const n=sl(ho(sd(),t));return gl(ll(t,ol(e,n)),-1)}))},cosineProximity:Tf};function Rf(e){if("string"==typeof e){if(e in Af)return Af[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new od(t)}return e}function Df(e,t){return so((()=>{const n=ol(.5,Cl(t)),r=ap(tl(t,n),e.dtype);return gl(qo(e,r),-1)}))}function Ff(e,t){return so((()=>ap(qo(go(e,-1),go(t,-1)),"float32")))}function _f(e,t){return Nf(e,t)}function Of(e,t){return e.rank===t.rank&&(e=e.squeeze([e.rank-1])),(t=t.argMax(-1)).dtype!==e.dtype&&(t=t.asType(e.dtype)),qo(e,t).asType("float32")}const Lf=Ef,Mf=Cf,zf={binaryAccuracy:Df,categoricalAccuracy:Ff,precision:function(e,t){return so((()=>{const n=function(e,t){return so((()=>hl(e.equal(1),t.equal(1)).sum().cast("float32")))}(e,t),r=function(e,t){return so((()=>hl(e.equal(0),t.equal(1)).sum().cast("float32")))}(e,t),s=n.add(r);return tu(tl(s,0),n.div(s),0).cast("float32")}))},categoricalCrossentropy:Lf,sparseCategoricalCrossentropy:Mf,mse:If,MSE:If,mae:Sf,MAE:Sf,mape:$f,MAPE:$f,cosine:Tf};function Bf(e){if("string"==typeof e&&e in zf)return zf[e];if("string"!=typeof e&&null!=e)return e;throw new od(`Unknown metric ${e}`)}function Pf(e){if(hd(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Af))if(Af[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(zf))if(zf[n]===e){t=n;break}return void 0!==t?t:e.name}}function Uf(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Wf(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Wf(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Wf(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Wf(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Vf(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Gf(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Vf([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function jf(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];Vf([`${i} (${o})`,s,e.countParams().toString(),l],t,r);for(let e=1;e<a.length;++e)Vf(["","","",a[e]],t,r)}function Hf(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function Kf(e,t){if(null===e)return null;if("string"==typeof e)return md(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Hf(t,s,r)?n.push(r):n.push(Kf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=md(n);t[e]=Kf(r,e)}}return t}}function qf(e,t){if(null==e)return null;if("string"==typeof e)return gd(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];Hf(t,s,r)?n.push(r):n.push(qf(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[gd(n)]="name"!==n&&"className"!==n||"string"!=typeof r?qf(r,n):r}return t}}class Xf{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Xf)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new od(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Gi(t,e.dtype)}catch(n){throw new od(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof nf){if(null==this.id2Value[e.id])throw new od(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new od(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof nf){if(null==this.id2Value[e.id])throw new od(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new od(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&ao(this.id2Mask)}}const Yf={},Jf={};function Zf(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,d;if(null==Yf[c]){const e=function(e,t){dr(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=eg(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=eg(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:Qf(r)}}(i,t);h=e.sorted,d=e.recipientCounts,Yf[c]=h,Jf[c]=d}h=Yf[c],d={},s||Object.assign(d,Jf[c]);const p=new Xf(t);for(let e=0;e<h.length;++e){if(null!=r){const e=ro().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof uf)continue;const u=[],c=[],f=[];let g=!1;for(const e of a.inputs){const n=p.getValue(e),r=p.getMask(e);u.push(n),c.push(r),null!=r&&(g=!0),s||(d[e.name]--,0!==d[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}g&&((n=n||{}).mask=c[0]);const m=fd(i.apply(u,n));let b=null;i.supportsMasking&&(b=i.computeMask(u,c));const y=tg(a),w=Array.isArray(y)?y:[y];for(let e=0;e<w.length;++e){p.hasKey(w[e])||p.add(w[e],m[e],Array.isArray(b)?b[0]:b);const t=o.indexOf(w[e].name);-1!==t&&(l[t]=m[e])}s||ao(f)}return p.disposeMasks(),a?l:l[0]}function Qf(e){const t={};for(const n in e)t[n]=e[n].size;return t}function eg(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function tg(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class ng extends of{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Hp(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],kd(this.inputs).length!==this.inputs.length)throw new od(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);kd(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;hd(0===n,"input layer has >1 nodes"),hd(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof uf))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,l)=>{null!=r&&null!=s&&null!=l||(r=e.sourceLayer,s=e.nodeIndex,l=e.tensorIndex);const u=r.inboundNodes[s];if(-1!==n.indexOf(u))throw new id(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(ng.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const r=u.inputTensors[e],s=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const d={};for(const e in r){const t=r[e];t in d||(d[t]=[]),d[t].push(s[e])}let p=Object.keys(d).map((e=>parseInt(e,10))).sort(vd);this.layers=[];for(const e of p){const t=d[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof ng&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=d,p=Object.keys(h).map((e=>parseInt(e,10))).sort(vd);const f=this.inputs.slice(),g=[];for(const e of p)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new id(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${g}`);for(const e of t.outputTensors)f.push(e);g.push(e.name)}}this.nodesByDepth=h;const m=this.layers.map((e=>e.name));for(const e of m){const t=m.filter((t=>t===e)).length;if(1!==t)throw new id(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(m))}this.outboundNodes=[],this.inboundNodes=[],new sf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new od("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new od(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new od(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new od(`${e.length} of ${r} weights are not set: ${e}`)}ef(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion="tfjs-layers 3.6.0",t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=qf(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return so((()=>{e=fd(e);const n=new Xf;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Zf(this.outputs,n,t)}))}computeMask(e,t){return so((()=>{let n;return e=fd(e),n=null==t?cd(null,e.length):fd(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=qp(e);if(t.length!==this.inputLayers.length)throw new od(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(vd);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=qp(t.computeOutputShape(pd(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];hd(t in n),s.push(n[t])}return pd(s)}runInternalGraph(e,t){null==t&&(t=cd(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(vd);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=fd(t.call(e,u)),l=fd(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=fd(t.call(r,u)),l=fd(t.computeMask(r,i));if(t.activityRegularizer)throw new ld("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=l[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){hd(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof ng?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=ng.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new od(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new od("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new od(`No such layer: ${e}`)}calculateLosses(){return so((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=ng.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=ng.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let l=t[ng.nodeKey(s,a)];null==l&&(l=0),e.push([s.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=ng.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=ng.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],l=a[1],u=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(pd(n),r)}function l(e){const n=e.name,a=vf(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new od(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!Id(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],d=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];hd(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];hd(t in s);const a=s[t].inboundNodes[n].outputTensors;d.push(a[r])}return new e({inputs:h,outputs:d,name:u})}get stateful(){if(this._stateful)throw new od("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){so((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function rg(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function sg(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=so((()=>{if(1===e.shape.length)return e.clone();if(2===e.shape.length){if(e.shape[1]>1){const t=1;return e.argMax(t)}if(1===e.shape[1])return e.reshape([e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());ao(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Jl(s,"float32")}return null}function ag(e,t){return ol(e,t)}function ig(e,t){let n,r;const s=t;n=s.xs,r=s.ys,dr(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=og("input",e.inputNames,n),i=og("output",e.outputNames,r),o=a[0].shape[0];dr(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),dr(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)dr(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)dr(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function og(e,t,n){if(n instanceof Ma)return[n];if(Array.isArray(n))return dr(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new od(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function lg(e){return"function"==typeof e.iterator}function ug(e){dr(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function cg(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>op(e,t,n-t))):op(e,t,n-t)}function hg(e,t){return so((()=>null==e?null:Array.isArray(e)?e.map((e=>hg(e,t))):gp(e,"int32"===t.dtype?t:t.toInt())))}function dg(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function pg(e){const t=[];e instanceof Ma&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ip(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function fg(e,t){if(null==e)return;const n=[];if(t instanceof Ma)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ma)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function gg(e){return Array.isArray(e)}function mg(e){return!function(e){return e instanceof Ma}(e)&&!gg(e)}function bg(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(gg(e)&&e.length>0)t=!0;else if(mg(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new od(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(mg(e)){e=e,a=[];for(const n of t){if(null==e[n])throw new od(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(gg(e)){if((e=e).length!==t.length)throw new od(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(e=e,t.length>1)throw new od(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=pg(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new od(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l>=0&&o!==l)throw new od(`Error when checking ${s}: expected ${t[e]} to have shape [${n[e]}], but got array with shape [${i.shape}].`)}}return a}function yg(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new od(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new od(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new od(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new od(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class wg extends ng{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new od("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Vf(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?Gf(o[e],n,r):jf(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?Jp(e.collectedTrainableWeights):Jp(e.trainableWeights),t}(e),u=Jp(e.nonTrainableWeights);r(`Total params: ${l+u}`),r(`Trainable params: ${l}`),r(`Non-trainable params: ${u}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>tc.adagrad(.01),Adadelta:()=>tc.adadelta(1,.95,sd()),Adam:()=>tc.adam(.001,.9,.999,sd()),Adamax:()=>tc.adamax(.002,.9,.999,sd(),0),RMSProp:()=>tc.rmsprop(.001,.9,0,sd()),SGD:()=>tc.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new od(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof uo))throw new od("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new od(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Rf(e)))}else{const n=Rf(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new od(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Rf(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Xd("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Xd("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Nf?-1!==["accuracy","acc"].indexOf(i)?r=Df:-1!==["crossentropy","ce"].indexOf(i)&&(r=_f):this.lossFunctions[e]===Cf?-1!==["accuracy","acc"].indexOf(i)?r=Of:-1!==["crossentropy","ce"].indexOf(i)&&(r=Mf):-1!==["accuracy","acc"].indexOf(i)?r=Ff:-1!==["crossentropy","ce"].indexOf(i)&&(r=Lf),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Bf(i);a=e,n=""+Pf(i)}let t;Xd(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;ug(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return pd(this.testLoop(i,a,r,n.verbose,n.steps))}finally{fg(s[0],e),fg(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new ld("Verbose mode is not implemented yet.");dr(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!r||l<n.batches;){const t=await i.next();if(a=so((()=>{if(t.value){const{xs:n,ys:r}=ig(e,t.value),i=n.concat(r),u=so((()=>s(i)));if(ao(i),0===l)for(let e=0;e<u.length;++e)a.push(lo(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=so((()=>ho(a[e],ol(c,t)))),l>0&&ao(n)}ao(u),o+=c,++l}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=Go(a[e],o),ao(t)}return pd(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new od(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new od(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new od("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new Xf;if(e instanceof Ma&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new od(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new od(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=Zf(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=cd(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new od(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return so((()=>{const r=this.checkNumSamples(e);if(n)throw new ld("Verbose predictLoop() is not implemented yet.");const s=dg(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t)so((()=>{const n=s[t][0],r=s[t][1],a=cg(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new Xf(i);return Zf(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return pd(a.map((e=>Ao(e,0))))}))}predict(e,t={}){const n=pg(e);yg(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return ug(r),this.predictLoop(n,r)}finally{fg(n,e)}}predictOnBatch(e){yg(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new id("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Cf?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=kd(e.map((e=>e.shape[0])));r.sort();const s=kd(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new od(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new od(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!br(r,s))throw new od(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=bg(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=bg(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[If,Nf,Ef];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Ef&&1===a.shape[a.shape.length-1])throw new od(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new od(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new od(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=r){const e=rg(r,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await sg(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,r=0,s){return so((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new ld("Verbose mode is not implemented yet.");if(null!=s)throw new ld("steps mode in testLoop() is not implemented yet");{const r=dg(a,n),s=Jl(sp(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],l=op(s,a,o-a),u=hg(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(lo(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ho(i[e],ol(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=Go(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;dd(e,r)>1&&(s+=`_${dd(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Xf(e),o=Zf(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=ag(n,s[e]));const a=gl(n);t.push(a),l=0===e?n:ho(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=gl(t(r[s],o[s]))}io(n),a.push(n)}return l=gl(l),this.calculateLosses().forEach((e=>{l=ho(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>so((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new Xf(a),o=Zf(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=gl(r(s[e],o[e]));n=0===e?a:ho(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=gl(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,l,u,c;e.isTraining=!0;try{const h=null==r.batchSize?32:r.batchSize;ug(h);const d=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,d,h);s=p[0],a=p[1],c=p[2];let f,g=!1;if(null!=r.validationData&&r.validationData.length>0){if(g=!0,2!==r.validationData.length)throw 3===r.validationData.length?new ld("validationData including sample weights is not supported yet."):new od(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,h);l=n[0],u=n[1],f=l.concat(u)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){g=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];l=cg(s,e,t),s=cg(s,0,e),u=cg(a,e,t),a=cg(a,0,e),f=l.concat(u)}else null!=r.validationSteps&&(g=!0);const m=s.concat(a).concat(c);e.checkTrainableWeightsConsistency();const b=e.makeTrainFunction(),y=e.getDedupedMetricsNames();let w,x;g?(e.makeTestFunction(),w=e.testFunction,x=y.slice().concat(y.map((e=>"val_"+e)))):(w=null,f=[],x=y.slice());const v=yf(r.callbacks,r.yieldEvery);return await async function(e,t,n,r,s,a,i,o,l,u,c,h,d,p,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==d&&(d=0);let g=!1;null!=l&&null!=u&&(g=!0);const m=e.checkNumSamples(n,s,p,"steps_per_epoch");let b;null!=m&&(b=sp(0,m)),null==i&&(i=1);const{callbackList:y,history:w}=xf(o,i,a,d,m,p,s,g,h);y.setModel(e),e.history=w,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=d;i<a;++i){await y.onEpochBegin(i);const a={};{if("batch"===c)throw new ld("batch shuffling is not implemneted yet");c&&hr(b);const i=Jl(b),o=dg(m,s);for(let c=0;c<o.length;++c){const h={};if(await y.onBatchBegin(c,h),so((()=>{const d=o[c][0],p=o[c][1],f=op(i,d,p-d);h.batch=c,h.size=p-d;const m=hg(n,f),b=t(m);for(let e=0;e<r.length;++e){const t=r[e],n=b[e];h[t]=n,io(n)}if(c===o.length-1&&g){const t=e.testLoop(l,u,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];io(s),a["val_"+n]=s}}})),await y.onBatchEnd(c,h),hf(h),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,a),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,b,m,y,h,r.epochs,r.verbose,v,w,f,r.shuffle,x,r.initialEpoch,null)}finally{e.isTraining=!1,fg(s,t),fg(a,n),fg(l,i),fg(u,o),null!=c&&ao(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(dr(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),dr(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),dr(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),dr(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),dr(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(lg(n.validationData))dr(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new ld("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=s?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=yf(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:d,history:p}=xf(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,u);d.setModel(e),e.history=p,await d.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,g=await t.iterator();for(;f<n.epochs;){const u={};await d.onEpochBegin(f);let c=0,h=0;for(r||(g=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await g.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=ig(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await d.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=rg(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await sg(s[e],null,t[e]))}const u=r.concat(s).concat(i),p=o(u);ao(u);for(let e=0;e<l.length;++e){const t=l[e],n=p[e];a[t]=n,io(n)}await d.onBatchEnd(h,a),hf(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=lg(n.validationData)?fd(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):fd(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await d.onEpochEnd(f,u),f++,e.stopTraining_)break}return await d.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return ao(a),pd(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=ro().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-ro().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=gd(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>gd(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=gd(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[gd(Pf(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>gd(Pf(e))));{const e={};for(const t in this.metrics)e[t]=gd(Pf(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=vf(Kf(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=md(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>md(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=md(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>md(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=md(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=(n=e,wi.getSaveHandlers(n));if(0===t.length)throw new od(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new od(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}var n;if(null==e.save)throw new od("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const r=await di(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:"TensorFlow.js tfjs-layers v3.6.0",convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:n}=await di(await this.optimizer.getWeights(),e);r.specs.push(...n),r.data=mi([r.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Uf(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=r.data,s.weightSpecs=r.specs,e.save(s)}setUserDefinedMetadata(e){Uf(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}wg.className="Model",no(wg);class xg extends wg{}async function vg(e,t){if(null==t&&(t={}),"string"==typeof e){const s=(n=e,r=t,wi.getLoadHandlers(n,r));if(0===s.length)s.push(function(e,t){return Qi(e,t)}(e,t));else if(s.length>1)throw new od(`Found more than one (${s.length}) load handlers for URL '${e}'`);e=s[0]}var n,r;return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new od("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=vf(Kf(s),void 0,i),l=r.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new od("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=function(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=mr(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=hi[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=yi()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*o}else if("string"===i){const t=mr(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=hi[i],a=e.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=ci(e,o,"float32"),i=ci(r,o,"float32");n[t]=li(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[t]=ci(u,o,i))}return n}(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),ao(e),ao(t.map((e=>e.tensor)))}return o}(e,0,t)}xg.className="Functional",no(xg);class kg extends wg{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Hp("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new od(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof kg||e instanceof wg;let n;if(t){if(n=e,1!==n.outputs.length)throw new od("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new od("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new od("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=function(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new od("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new uf({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new od(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new od("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=lf(this.outputs[0])}this.inboundNodes=[],new sf({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:cd(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(Yp(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new wg({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new id("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new id("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new id("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new id("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new od("Legacy serialization format not supported yet.");s=t}else dr(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof kg))throw new ld(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=vf(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new od("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new od("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ig(e){return new wg(e)}function Sg(e,t){return null==t&&(t={}),vg(e,t)}kg.className="Sequential",no(kg);class $g extends eo{getConfig(){return{}}}class Eg extends $g{apply(e,t=1){return function(e,t=1){if(1!==t)throw new ld(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return jo(e)}(e,t)}}Eg.className="elu",no(Eg);class Cg extends $g{apply(e){return Ll(e)}}Cg.className="selu",no(Cg);class Ng extends $g{apply(e){return _l(e)}}Ng.className="relu",no(Ng);class Tg extends $g{apply(e){return so((()=>bl(6,_l(e))))}}Tg.className="relu6",no(Tg);class Ag extends $g{apply(e){return e}}Ag.className="linear",no(Ag);class Rg extends $g{apply(e){return zl(e)}}Rg.className="sigmoid",no(Rg);class Dg extends $g{apply(e){return function(e){return so((()=>{const t=ho(.5,ol(.2,e));return To(t,0,1)}))}(e)}}Dg.className="hardSigmoid",no(Dg);class Fg extends $g{apply(e){return jl(e)}}Fg.className="softplus",no(Fg);class _g extends $g{apply(e){return function(e){return so((()=>Go(e,co(e).add(1))))}(e)}}_g.className="softsign",no(_g);class Og extends $g{apply(e){return Yl(e)}}Og.className="tanh",no(Og);class Lg extends $g{apply(e,t=-1){return Gl(e,t)}}Lg.className="softmax",no(Lg);class Mg extends $g{apply(e,t=-1){return cl(e,t)}}Mg.className="logSoftmax",no(Mg);class zg extends $g{apply(e,t=1){return so((()=>zl(e.mul(t)).mul(e)))}}zg.className="swish",no(zg);class Bg extends $g{apply(e){return so((()=>ol(e,Yl(jl(e)))))}}function Pg(e){return e.getClassName()}function Ug(e,t={}){return xd(e,to.getMap().classNameMap,t,"activation")}function Wg(e){if(null==e){return Ug({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},Ug(t)}return e instanceof $g?e:Ug(e)}Bg.className="mish",no(Bg);class Vg extends eo{}class Gg extends Vg{constructor(e){super(),function(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return so((()=>{let t=$l([1]);return this.hasL1&&(t=ho(t,ul(ol(this.l1,co(e))))),this.hasL2&&(t=ho(t,ul(ol(this.l2,mp(e))))),t.asScalar()}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Gg.className="L1L2",no(Gg);const jg={l1l2:"L1L2"};function Hg(e){return yd(e)}function Kg(e,t={}){return xd(e,to.getMap().classNameMap,t,"regularizer")}function qg(e){return null==e?null:"string"==typeof e?Kg({className:e in jg?jg[e]:e,config:{}}):e instanceof Vg?e:Kg(e)}class Xg extends of{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Xp(e);let n=_l(e);return null!=this.maxValue&&(n=To(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Xg.className="ReLU",no(Xg);class Yg extends of{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xp(e);return rl(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Yg.className="LeakyReLU",no(Yg);class Jg extends of{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Wp(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=qg(e.alphaRegularizer),this.alphaConstraint=zd(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new od(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=Yp(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new tf({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Xp(e),Tl(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Up(this.alphaInitializer),alphaRegularizer:Hg(this.alphaRegularizer),alphaConstraint:Ld(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Jg.className="PReLU",no(Jg);class Zg extends of{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new ld(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Xp(e);return jo(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Zg.className="ELU",no(Zg);class Qg extends of{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Xp(e);return n.mul(ap(n.greater(this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Qg.className="ThresholdedReLU",no(Qg);class em extends of{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Lg).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Xp(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function tm(e,t,n){if("number"==typeof e)return cd(e,t);if(e.length!==t)throw new od(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new od(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function nm(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function rm(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+rp([n-t,0]);else{if("same"!==r)throw new od(`Unsupport padding mode: ${r}.`);e*=t}return e}function sm(e,t){return so((()=>(jd(t),"channelsFirst"===t?ru(e,[0,2,3,1]):e)))}function am(e,t){return so((()=>(jd(t),"channelsFirst"===t?ru(e,[0,2,3,4,1]):e)))}function im(e,t,n,r=[1,1],s="valid",a,i,o=null){return so((()=>{if(null==a&&(a="channelsLast"),jd(a),3!==e.rank&&4!==e.rank)throw new od(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new od(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=sm(e,a);if("causal"===s)throw new ld("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=yu({x:l,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=ru(l,[0,3,1,2])),l}))}em.className="Softmax",no(em);class om extends of{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",om.verifyArgs(t),this.rank=e,Ed(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new ld(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=tm(t.kernelSize,e,"kernelSize"),this.strides=tm(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Hd(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,jd(this.dataFormat),this.activation=Wg(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Wp(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=zd(t.biasConstraint),this.biasRegularizer=qg(t.biasRegularizer),this.activityRegularizer=qg(t.activityRegularizer),this.dilationRate=tm(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new od(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new od(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new od(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(hd("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!$d(e.kernelSize,"number",1,3))throw new od(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Pg(this.activation),useBias:this.useBias,biasInitializer:Up(this.biasInitializer),biasRegularizer:Hg(this.biasRegularizer),activityRegularizer:Hg(this.activityRegularizer),biasConstraint:Ld(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class lm extends om{constructor(e,t){super(e,t),this.kernel=null,lm.verifyArgs(t),this.filters=t.filters,Ed(this.filters,"filters"),this.kernelInitializer=Wp(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=zd(t.kernelConstraint),this.kernelRegularizer=qg(t.kernelRegularizer)}build(e){e=Yp(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new od(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return so((()=>{let t;e=Xp(e);const n=null==this.bias?null:this.bias.read(),r=Nd(this.activation.getClassName());if(null!=r&&2===this.rank)t=im(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return so((()=>{if(null==a&&(a="channelsLast"),jd(a),3!==e.shape.length)throw new od(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new od(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new od(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=ru(e,[0,2,1])),"causal"===s)throw new ld("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Lo(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=yp(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=im(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new ld("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return so((()=>{if(null==a&&(a="channelsLast"),jd(a),4!==e.rank&&5!==e.rank)throw new od(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new od(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=am(e,a);if("causal"===s)throw new ld("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Bo(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=yp(o,n)),"channelsFirst"===a&&(o=ru(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=Yp(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=nm(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:Up(this.kernelInitializer),kernelRegularizer:Hg(this.kernelRegularizer),kernelConstraint:Ld(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new od(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class um extends lm{constructor(e){super(2,e),um.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!$d(e.kernelSize,"number",1,2))throw new od(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}um.className="Conv2D",no(um);class cm extends lm{constructor(e){super(3,e),cm.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new od(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}cm.className="Conv3D",no(cm);class hm extends um{constructor(e){if(super(e),this.inputSpec=[new tf({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new od(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=Yp(e)).length)throw new od("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new od("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tf({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t=Xp(e);if(4!==t.shape.length)throw new od(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],d=[r,rm(i,c,l,this.padding),rm(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ru(t,[0,2,3,1]));let p=zo(t,this.kernel.read(),d,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=ru(p,[0,3,1,2])),null!=this.bias&&(p=yp(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p}))}computeOutputShape(e){const t=(e=Yp(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[r]=rm(t[r],o,a,this.padding),t[s]=rm(t[s],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}hm.className="Conv2DTranspose",no(hm);class dm extends cm{constructor(e){if(super(e),this.inputSpec=[new tf({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new od(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=Yp(e)).length)throw new od("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new od("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new tf({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t=Xp(e);if(5!==t.shape.length)throw new od(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],l=n[s],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],d=this.kernelSize[2],p=this.strides[0],f=this.strides[1],g=this.strides[2],m=[r,rm(o,p,c,this.padding),rm(l,f,h,this.padding),rm(u,g,d,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=ru(t,[0,2,3,4,1]));let b=Uo(t,this.kernel.read(),m,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(b=ru(b,[0,4,1,2,3])),null!==this.bias&&(b=yp(b,this.bias.read(),this.dataFormat)),null!==this.activation&&(b=this.activation.apply(b)),b}))}computeOutputShape(e){const t=(e=Yp(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=rm(t[r],u,i,this.padding),t[s]=rm(t[s],c,o,this.padding),t[a]=rm(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}dm.className="Conv3DTranspose",no(dm);class pm extends lm{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new od("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new od("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new od(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Wp(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=qg(t.depthwiseRegularizer),this.depthwiseConstraint=zd(t.depthwiseConstraint),this.pointwiseInitializer=Wp(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=qg(t.pointwiseRegularizer),this.pointwiseConstraint=zd(t.pointwiseConstraint)}build(e){if((e=Yp(e)).length<this.rank+2)throw new od(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new od(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new tf({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return so((()=>{let t;if(e=Xp(e),1===this.rank)throw new ld("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=ru(e,[0,2,3,1])),t=Ml(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=yp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=ru(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Up(this.depthwiseInitializer),e.pointwiseInitializer=Up(this.pointwiseInitializer),e.depthwiseRegularizer=Hg(this.depthwiseRegularizer),e.pointwiseRegularizer=Hg(this.pointwiseRegularizer),e.depthwiseConstraint=Ld(this.depthwiseConstraint),e.pointwiseConstraint=Ld(this.pointwiseConstraint),e}}pm.className="SeparableConv";class fm extends pm{constructor(e){super(2,e)}}fm.className="SeparableConv2D",no(fm);class gm extends lm{constructor(e){super(1,e),gm.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!$d(e.kernelSize,"number",1,1))throw new od(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}gm.className="Conv1D",no(gm);class mm extends of{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return so((()=>{if(e=Xp(e),"channelsLast"===this.dataFormat){const t=up(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return up(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=up(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return up(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}mm.className="Cropping2D",no(mm);class bm extends of{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jd(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Sd(Pd,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return so((()=>{let t=Xp(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=ru(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r]);return ru(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?t.resizeNearestNeighbor([e,r]):t.resizeBilinear([e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}bm.className="UpSampling2D",no(bm);class ym extends om{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Wp(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=zd(e.depthwiseConstraint),this.depthwiseRegularizer=qg(e.depthwiseRegularizer)}build(e){if((e=Yp(e)).length<4)throw new od(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new od(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return so((()=>{null==s&&(s="channelsLast"),jd(s);let i=sm(e,s);if(4!==e.rank)throw new od(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new od(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Wo(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=ru(i,[0,3,1,2])),i}))}(e=Xp(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=yp(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=Yp(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=nm(t,this.kernelSize[0],this.padding,this.strides[0]),a=nm(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Up(this.depthwiseInitializer),e.depthwiseRegularizer=Hg(this.depthwiseRegularizer),e.depthwiseConstraint=Ld(this.depthwiseRegularizer),e}}function wm(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new od("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function xm(e,t,n,r=!1,s,a,i=!1,o=!1){return so((()=>{const l=t.shape.length;if(l<3)throw new od(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(sp(2,l));if(t=ru(t,u),null!=a)throw new ld("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=s.asType("bool").asType("float32")).rank===l-1&&(s=Xo(s,-1)),s=ru(s,u)),r&&(t=Ol(t,0),null!=s&&(s=Ol(s,0)));const c=[];let h,d=n;const p=t.shape[0],f=Ql(t);let g,m;null!=s&&(g=Ql(s));for(let t=0;t<p;++t){const n=f[t],r=so((()=>e(n,d)));if(null==s)h=r[0],d=r[1];else{const e=so((()=>{const e=g[t],n=Cl(e).sub(e);return{output:r[0].mul(e).add(d[0].mul(n)),newStates:d.map(((t,s)=>r[1][s].mul(e).add(t.mul(n))))}}));h=e.output,d=e.newStates}o&&c.push(h)}return o&&(m=Xl(c,1)),[h,m,d]}))}ym.className="DepthwiseConv2D",no(ym);class vm extends of{constructor(e){let t;if(super(e),null==e.cell)throw new od("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Tm({cells:e.cell}):e.cell,null==t.stateSize)throw new od("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new tf({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?sp(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Kp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return so((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new ld("Constants support is not implemented in RNN yet.");Kp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new tf({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!br(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new od(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new tf({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){so((()=>{if(!this.stateful)throw new ad("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new od("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>$l([n,e]))):this.states_=[$l([n,this.cell.stateSize])];else if(null==e)ao(this.states_),null!=this.keptStates&&(ao(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>$l([n,e]))):this.states_[0]=$l([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new od(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):ao(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!br(r.shape,a))throw new od(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>io(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=wm(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new tf({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof nf){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return so((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=Xp(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new od(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=xm(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return so((()=>{let t=$l(e.shape);return t=ul(t,[1,2]),t=ip(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?dp(t,[1,e]):t)):this.cell.stateSize>1?[dp(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===vm.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=vf(t.cell,n);return new e(Object.assign(t,{cell:r}))}}vm.className="RNN",no(vm);class km extends of{}class Im extends km{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ed(this.units,"units"),this.activation=Wg(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qg(e.kernelRegularizer),this.recurrentRegularizer=qg(e.recurrentRegularizer),this.biasRegularizer=qg(e.biasRegularizer),this.kernelConstraint=zd(e.kernelConstraint),this.recurrentConstraint=zd(e.recurrentConstraint),this.biasConstraint=zd(e.biasConstraint),this.dropout=np([1,rp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=np([1,rp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=Yp(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{if(2!==(e=e).length)throw new od(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Am({ones:()=>Cl(e),rate:this.dropout,training:r})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Am({ones:()=>Cl(n),rate:this.recurrentDropout,training:r}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=fp(null!=a?ol(e,a):e,this.kernel.read()),null!=this.bias&&(s=yp(s,this.bias.read())),null!=i&&(n=ol(n,i));let o=ho(s,fp(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Pg(this.activation),useBias:this.useBias,kernelInitializer:Up(this.kernelInitializer),recurrentInitializer:Up(this.recurrentInitializer),biasInitializer:Up(this.biasInitializer),kernelRegularizer:Hg(this.kernelRegularizer),recurrentRegularizer:Hg(this.recurrentRegularizer),biasRegularizer:Hg(this.biasRegularizer),activityRegularizer:Hg(this.activityRegularizer),kernelConstraint:Ld(this.kernelConstraint),recurrentConstraint:Ld(this.recurrentConstraint),biasConstraint:Ld(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Im.className="SimpleRNNCell",no(Im);class Sm extends vm{constructor(e){e.cell=new Im(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(ao(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ao(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Sm.className="SimpleRNN",no(Sm);class $m extends km{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new od("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Ed(this.units,"units"),this.activation=Wg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=qg(e.kernelRegularizer),this.recurrentRegularizer=qg(e.recurrentRegularizer),this.biasRegularizer=qg(e.biasRegularizer),this.kernelConstraint=zd(e.kernelConstraint),this.recurrentConstraint=zd(e.recurrentConstraint),this.biasConstraint=zd(e.biasConstraint),this.dropout=np([1,rp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=np([1,rp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=Yp(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return so((()=>{if(2!==(e=e).length)throw new od(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Am({ones:()=>Cl(e),rate:this.dropout,training:n,count:3})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Am({ones:()=>Cl(r),rate:this.recurrentDropout,training:n,count:3}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=ol(e,s[0]));let u=fp(e,this.kernel.read());this.useBias&&(u=yp(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ol(r,a[0]));const c=this.recurrentKernel.read(),[h,d]=Hl(c,[2*this.units,this.units],c.rank-1),p=fp(r,h),[f,g,m]=Hl(u,3,u.rank-1),[b,y]=Hl(p,2,p.rank-1);i=this.recurrentActivation.apply(ho(f,b)),o=this.recurrentActivation.apply(ho(g,y));const w=fp(ol(o,r),d);l=this.activation.apply(ho(m,w));const x=ho(ol(i,r),ol(ho(1,kl(i)),l));return[x,x]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Pg(this.activation),recurrentActivation:Pg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Up(this.kernelInitializer),recurrentInitializer:Up(this.recurrentInitializer),biasInitializer:Up(this.biasInitializer),kernelRegularizer:Hg(this.kernelRegularizer),recurrentRegularizer:Hg(this.recurrentRegularizer),biasRegularizer:Hg(this.biasRegularizer),activityRegularizer:Hg(this.activityRegularizer),kernelConstraint:Ld(this.kernelConstraint),recurrentConstraint:Ld(this.recurrentConstraint),biasConstraint:Ld(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}$m.className="GRUCell",no($m);class Em extends vm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new $m(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(ao(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ao(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Em.className="GRU",no(Em);class Cm extends km{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Ed(this.units,"units"),this.activation=Wg(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Wg(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Wp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Wp(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Wp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=qg(e.kernelRegularizer),this.recurrentRegularizer=qg(e.recurrentRegularizer),this.biasRegularizer=qg(e.biasRegularizer),this.kernelConstraint=zd(e.kernelConstraint),this.recurrentConstraint=zd(e.recurrentConstraint),this.biasConstraint=zd(e.biasConstraint),this.dropout=np([1,rp([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=np([1,rp([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=Yp(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Ip{apply(t,r){const s=e.apply([n]),a=(new $p).apply([n]),i=e.apply([2*n]);return hp(hp(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return so((()=>{const n=null!=t.training&&t.training;if(3!==(e=e).length)throw new od(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Am({ones:()=>Cl(e),rate:this.dropout,training:n,count:4})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Am({ones:()=>Cl(r),rate:this.recurrentDropout,training:n,count:4}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=ol(e,a[0]));let h=fp(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=ol(r,i[0])),h=ho(h,fp(r,this.recurrentKernel.read())),this.useBias&&(h=yp(h,this.bias.read()));const[d,p,f,g]=Hl(h,4,h.rank-1);o=this.recurrentActivation.apply(d),l=this.recurrentActivation.apply(p),u=ho(ol(l,s),ol(o,this.activation.apply(f))),c=this.recurrentActivation.apply(g);const m=ol(c,this.activation.apply(u));return[m,m,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Pg(this.activation),recurrentActivation:Pg(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Up(this.kernelInitializer),recurrentInitializer:Up(this.recurrentInitializer),biasInitializer:Up(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Hg(this.kernelRegularizer),recurrentRegularizer:Hg(this.recurrentRegularizer),biasRegularizer:Hg(this.biasRegularizer),activityRegularizer:Hg(this.activityRegularizer),kernelConstraint:Ld(this.kernelConstraint),recurrentConstraint:Ld(this.recurrentConstraint),biasConstraint:Ld(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Cm.className="LSTMCell",no(Cm);class Nm extends vm{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Cm(e),super(e)}call(e,t){return so((()=>{null!=this.cell.dropoutMask&&(ao(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ao(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Nm.className="LSTM",no(Nm);class Tm extends km{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return so((()=>{let n=(e=e).slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;Kp(e)&&(e=e[0]),e=e,this.cells.forEach(((n,r)=>{Xd(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(vf(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Qp(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}ef(t)}}function Am(e){const{ones:t,rate:n,training:r=!1,count:s=1}=e,a=()=>wp(t(),n),i=()=>xp(a,t,r);return!s||s<=1?io(i().clone()):Array(s).fill(void 0).map(i).map((e=>io(e.clone())))}Tm.className="StackedRNNCells",no(Tm);class Rm extends vm{constructor(e){if(e.unroll)throw new ld("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new ld("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new tf({ndim:5})]}call(e,t){return so((()=>{if(null!=this.cell.dropoutMask&&(ao(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(ao(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new od("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return so((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=$l([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){so((()=>{if(!this.stateful)throw new ad("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new od("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>$l(s))):this.states_=[$l(s)];else if(null==e)ao(this.states_),null!=this.keptStates&&(ao(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>$l(s))):this.states_[0]=$l(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new od(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):ao(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!br(n.shape,r))throw new od(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>io(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=nm(l,r[0],s,a[0],i[0]),h=nm(u,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}Rm.className="ConvRNN2D";class Dm extends Cm{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Ed(this.filters,"filters"),this.kernelSize=tm(n,2,"kernelSize"),this.kernelSize.forEach((e=>Ed(e,"kernelSize"))),this.strides=tm(r||1,2,"strides"),this.strides.forEach((e=>Ed(e,"strides"))),this.padding=s||"valid",Hd(this.padding),this.dataFormat=a||"channelsLast",jd(this.dataFormat),this.dilationRate=tm(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>Ed(e,"dilationRate")))}build(e){var t;e=Yp(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new od(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Ip{apply(e,t){return cp([n.apply([r]),El([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return so((()=>{if(3!==e.length)throw new od(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Am({ones:()=>Cl(r),rate:this.dropout,training:n,count:4}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?ol(t[n],e):e;let l=o(r,i,0),u=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Am({ones:()=>Cl(s),rate:this.recurrentDropout,training:n,count:4}));const d=this.recurrentDropoutMask;let p=o(s,d,0),f=o(s,d,1),g=o(s,d,2),m=o(s,d,3);const[b,y,w,x]=Hl(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Hl(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,b,v,this.padding),u=this.inputConv(u,y,k,this.padding),c=this.inputConv(c,w,I,this.padding),h=this.inputConv(h,x,S,this.padding);const[$,E,C,N]=Hl(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,$),f=this.recurrentConv(f,E),g=this.recurrentConv(g,C),m=this.recurrentConv(m,N);const T=this.recurrentActivation.apply(ho(l,p)),A=this.recurrentActivation.apply(ho(u,f)),R=ho(ol(A,a),ol(T,this.activation.apply(ho(c,g)))),D=ol(this.recurrentActivation.apply(ho(h,m)),this.activation.apply(R));return[D,D,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=Oo(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?yp(s,n,this.dataFormat):s}recurrentConv(e,t){return Oo(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Dm.className="ConvLSTM2DCell",no(Dm);class Fm extends Rm{constructor(e){const t=new Dm(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Fm.className="ConvLSTM2D",no(Fm);class _m extends of{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return xp((()=>wp(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}_m.className="Dropout",no(_m);class Om extends _m{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Om.className="SpatialDropout1D",no(Om);class Lm extends of{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Ed(this.units,"units"),this.activation=Wg(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Wp(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Wp(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=zd(e.kernelConstraint),this.biasConstraint=zd(e.biasConstraint),this.kernelRegularizer=qg(e.kernelRegularizer),this.biasRegularizer=qg(e.biasRegularizer),this.activityRegularizer=qg(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=Yp(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=Yp(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e),r=Nd(this.activation.getClassName());let s;return null!=r?s=fp(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=fp(n,this.kernel.read()),null!=this.bias&&(s=yp(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:Pg(this.activation),useBias:this.useBias,kernelInitializer:Up(this.kernelInitializer),biasInitializer:Up(this.biasInitializer),kernelRegularizer:Hg(this.kernelRegularizer),biasRegularizer:Hg(this.biasRegularizer),activityRegularizer:Hg(this.activityRegularizer),kernelConstraint:Ld(this.kernelConstraint),biasConstraint:Ld(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Lm.className="Dense",no(Lm);class Mm extends of{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=Yp(e);for(const t of e.slice(1))if(null==t)throw new od(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],ep(e,1)]}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Xp(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=n.transpose(e)}return function(e){if(e.rank<=1)throw new od(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],ep(e.shape,1)];return e.reshape(t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Mm.className="Flatten",no(Mm);class zm extends of{constructor(e){super(e),this.supportsMasking=!0,this.activation=Wg(e.activation)}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e);return this.activation.apply(n)}))}getConfig(){const e={activation:Pg(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}zm.className="Activation",no(zm);class Bm extends of{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return so((()=>{return e=Xp(e),t=e,n=this.n,so((()=>{if(2!==t.shape.length)throw new od(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return dp(ip(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Bm.className="RepeatVector",no(Bm);class Pm extends of{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new od("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=ep(e);if(null!==a){if(0===s||i%s!=0)throw new od(n);r[a]=i/s}else if(i!==s)throw new od(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return n.reshape(s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}Pm.className="Reshape",no(Pm);class Um extends of{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=sp(1,e.dims.length+1);if(!br(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new tf({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=Yp(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return ru(Xp(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Um.className="Permute",no(Um);class Wm extends of{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Xp(e);return fo(Il(n,this.maskValue),-1)}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e),r=fo(Il(n,this.maskValue),-1,!0);return n.mul(r.asType(n.dtype))}))}}Wm.className="Masking",no(Wm);class Vm extends of{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(fd(e.inputLength))}this.inputDim=e.inputDim,Ed(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Ed(this.outputDim,"outputDim"),this.embeddingsInitializer=Wp(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=qg(e.embeddingsRegularizer),this.activityRegularizer=qg(e.activityRegularizer),this.embeddingsConstraint=zd(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return so((()=>this.maskZero?(e=Xp(e),Il(e,nu(e))):null))}computeOutputShape(e){if(e=Yp(e),null==this.inputLength)return[...e,this.outputDim];const t=fd(this.inputLength);if(t.length!==e.length-1)throw new od(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new od(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return so((()=>{this.invokeCallHook(e,t);let n=Xp(e);return"int32"!==n.dtype&&(n=ap(n,"int32")),gp(this.embeddings.read(),n.as1D()).reshape(Yp(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Up(this.embeddingsInitializer),embeddingsRegularizer:Hg(this.embeddingsRegularizer),activityRegularizer:Hg(this.activityRegularizer),embeddingsConstraint:Ld(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Vm.className="Embedding",no(Vm);class Gm extends of{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new ld}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new od("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[Yp(e)]),(e=e).length<2)throw new od(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=kd(t),t.length>1)throw new od(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===kd(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return so((()=>{if(e=e,this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=rp(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ip(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=r.reshape([s].concat(ep(e.slice(1))));i=ru(i,[1,0]),i=i.reshape(a),t.push(i),n=!0}else if(e>1){const s=sp(1,e).concat([0]);t.push(ru(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ru(r.reshape([-1,t]),[1,0]).reshape(n)}else if(s>1){const e=[s-1].concat(sp(0,s-1));r=ru(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==(e=e)[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=kd(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return so((()=>{if(null==t)return null;if(!Array.isArray(t))throw new od("`mask` should be an Array");if(!Array.isArray(e))throw new od("`inputs` should be an Array");if(t.length!==e.length)throw new od(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:Xo(e,0))))[0];for(let e=1;e<t.length-1;++e)n=hl(n,t[e]);return n}))}}class jm extends Gm{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ho(t,e[n]);return t}))}}jm.className="Add",no(jm);class Hm extends Gm{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ol(t,e[n]);return t}))}}Hm.className="Multiply",no(Hm);class Km extends Gm{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ho(t,e[n]);return ol(1/e.length,t)}))}}Km.className="Average",no(Km);class qm extends Gm{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=fl(t,e[n]);return t}))}}qm.className="Maximum",no(qm);class Xm extends Gm{constructor(e){super(e)}mergeFunction(e){return so((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=bl(t,e[n]);return t}))}}Xm.className="Minimum",no(Xm);class Ym extends Gm{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new od("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(br(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new od("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return so((()=>cp(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new od("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new od("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new od("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new od(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return so((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Cl(e[n]).asType("bool")):t[n].rank<e[n].rank?r.push(Xo(t[n],-1)):r.push(t[n]);const s=Ao(r,this.axis);return po(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Jm(e,t){for(;e<0;)e+=t;return e}Ym.className="Concatenate",no(Ym);class Zm extends Gm{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){dr(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new ld("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new od(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new od(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>Jm(t,e[n].shape.length))):[Jm(this.axes,n.shape.length),Jm(this.axes,r.shape.length)],this.normalize&&(n=kf(n,t[0]),r=kf(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new ld("batchDot is not implemented for tensors of 4D or higher rank yet");if(dr(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),dr(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new ld("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return so((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=t.reshape(t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=e.reshape(e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?e.mul(t).sum(a[0]):e.transpose([1,0]).mul(t).sum(a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=e.matMul(t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=i.squeeze(t)}return 1===i.shape.length&&(i=i.expandDims(1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Jm(this.axes,e.length),Jm(this.axes,t.length)],n}computeOutputShape(e){dr(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new ld("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Zm.className="Dot",no(Zm);class Qm extends of{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e);return xp((()=>pp(n.shape,0,this.stddev).add(n)),(()=>n),t.training||!1)}))}}Qm.className="GaussianNoise",no(Qm);class eb extends of{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return so((()=>{this.invokeCallHook(e,t);const n=Xp(e);return this.rate>0&&this.rate<1?xp((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return n.mul(pp(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}eb.className="GaussianDropout",no(eb);class tb extends of{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Xp(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return so((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e);return xp((()=>{const t=Xp(e),r=-1.7580993408473766;let s=nl(Fl(n),this.rate);s=ap(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate;return t.mul(s).add(s.add(-1).mul(r)).mul(a).add(i)}),(()=>Xp(e)),t.training||!1)}return e}))}}function nb(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=Eo(e,t,n,r,s,a);else if(3===e.rank)i=Co(e,t,n,r,s,a);else{if(4!==e.rank)throw new ld(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=No(e,t,n,r,s,a)}return i}tb.className="AlphaDropout",no(tb);class rb extends of{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wp(e.betaInitializer||"zeros"),this.gammaInitializer=Wp(e.gammaInitializer||"ones"),this.movingMeanInitializer=Wp(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Wp(e.movingVarianceInitializer||"ones"),this.betaConstraint=zd(e.betaConstraint),this.gammaConstraint=zd(e.gammaConstraint),this.betaRegularizer=qg(e.betaRegularizer),this.gammaRegularizer=qg(e.gammaRegularizer)}build(e){e=Yp(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new od(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new tf({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return so((()=>{const n=null!=t.training&&t.training,r=Xp(e),s=r.shape,a=s.length,i=sp(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=cd(1,a);l[o]=s[o];const u=i.slice();u.sort();const c=!br(u,sp(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=this.movingMean.read().reshape(l),t=this.movingVariance.read().reshape(l),n=this.center?this.beta.read().reshape(l):null,s=this.scale?this.gamma.read().reshape(l):null;return nb(r,e,t,n,s,this.epsilon)}return nb(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,d,p]=function(e,t,n,r,s=.001){return br(r.slice().sort(),sp(0,e.rank-1))?function(e,t,n,r,s=.001){return so((()=>{const a=vl(e,r),i=a.mean,o=a.variance;return[nb(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return so((()=>{const a=vl(e,r),i=a.mean,o=a.variance,l=[];for(const t of sp(0,e.rank))-1!==r.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=i.reshape(l),c=o.reshape(l),h=null==t?null:t.reshape(l),d=null==n?null:n.reshape(l);return[nb(e,u,c,d,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{so((()=>{const r=1-n,s=e.read(),a=s.sub(t).mul(r);e.write(s.sub(a))}))};return(()=>{f(this.movingMean,d,this.momentum),f(this.movingVariance,p,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Up(this.betaInitializer),gammaInitializer:Up(this.gammaInitializer),movingMeanInitializer:Up(this.movingMeanInitializer),movingVarianceInitializer:Up(this.movingVarianceInitializer),betaRegularizer:Hg(this.betaRegularizer),gammaRegularizer:Hg(this.gammaRegularizer),betaConstraint:Ld(this.betaConstraint),gammaConstraint:Ld(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}rb.className="BatchNormalization",no(rb);class sb extends of{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Wp(e.betaInitializer||"zeros"),this.gammaInitializer=Wp(e.gammaInitializer||"ones"),this.betaRegularizer=qg(e.betaRegularizer),this.gammaRegularizer=qg(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=Yp(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==kd(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=Xp(e),r=n.shape,s=r.length;return so((()=>{let{mean:e,variance:t}=vl(n,this.axis,!0);const a=cd(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s&&this.axis!==[s-1]?e.reshape(a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(u.push(r[e]),c.push(1)):(u.push(1),c.push(r[e]));return e=e.tile(u),t=t.tile(u),o=o.tile(c),l=l.tile(c),nb(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Up(this.betaInitializer),gammaInitializer:Up(this.gammaInitializer),betaRegularizer:Hg(this.betaRegularizer),gammaRegularizer:Hg(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}sb.className="LayerNormalization",no(sb);class ab extends of{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new od(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new od(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new od(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new tf({ndim:4})]}computeOutputShape(e){let t,n;return e=Yp(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return so((()=>{return t=Xp(e),n=this.padding,r=this.dataFormat,so((()=>{if(4!==t.rank)throw new od(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new od("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new od(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],Nl(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function ib(e,t,n,r,s,a){return so((()=>{let i;jd(s),Kd(a),Hd(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=sm(e,s);const o="same"===r?"same":"valid";return i="max"===a?dl(e,t,n,o):Io(e,t,n,o),"channelsFirst"===s&&(i=ru(i,[0,3,1,2])),i}))}function ob(e,t,n,r,s,a){return so((()=>{let i;jd(s),Kd(a),Hd(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=am(e,s);const o="same"===r?"same":"valid";return i="max"===a?pl(e,t,n,o):So(e,t,n,o),"channelsFirst"===s&&(i=ru(i,[0,4,1,2,3])),i}))}ab.className="ZeroPadding2D",no(ab);class lb extends of{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new od(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Ed(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new od(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Ed(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Hd(this.padding),this.inputSpec=[new tf({ndim:3})]}computeOutputShape(e){const t=nm((e=Yp(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return so((()=>{this.invokeCallHook(e,t),e=ip(Xp(e),2);const n=this.poolingFunction(Xp(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return ql(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class ub extends lb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ib(e,t,n,r,s,"max")}}ub.className="MaxPooling1D",no(ub);class cb extends lb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ib(e,t,n,r,s,"avg")}}cb.className="AveragePooling1D",no(cb);class hb extends of{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new od(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Ed(this.poolSize,"poolSize"),Ed(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jd(this.dataFormat),Hd(this.padding),this.inputSpec=[new tf({ndim:4})]}computeOutputShape(e){e=Yp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=nm(t,this.poolSize[0],this.padding,this.strides[0]),n=nm(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return so((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class db extends hb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ib(e,t,n,r,s,"max")}}db.className="MaxPooling2D",no(db);class pb extends hb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ib(e,t,n,r,s,"avg")}}pb.className="AveragePooling2D",no(pb);class fb extends of{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new od(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Ed(this.poolSize,"poolSize"),Ed(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jd(this.dataFormat),Hd(this.padding),this.inputSpec=[new tf({ndim:5})]}computeOutputShape(e){e=Yp(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=nm(t,this.poolSize[0],this.padding,this.strides[0]),n=nm(n,this.poolSize[1],this.padding,this.strides[1]),r=nm(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return so((()=>(this.invokeCallHook(e,t),this.poolingFunction(Xp(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class gb extends fb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ob(e,t,n,r,s,"max")}}gb.className="MaxPooling3D",no(gb);class mb extends fb{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return jd(s),Hd(r),ob(e,t,n,r,s,"avg")}}mb.className="AveragePooling3D",no(mb);class bb extends of{constructor(e){super(e),this.inputSpec=[new tf({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new ld}}class yb extends bb{constructor(e){super(e||{})}call(e,t){return so((()=>{const t=Xp(e);return gl(t,1)}))}}yb.className="GlobalAveragePooling1D",no(yb);class wb extends bb{constructor(e){super(e||{})}call(e,t){return so((()=>{const t=Xp(e);return il(t,1)}))}}wb.className="GlobalMaxPooling1D",no(wb);class xb extends of{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,jd(this.dataFormat),this.inputSpec=[new tf({ndim:4})]}computeOutputShape(e){return e=e,"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new ld}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class vb extends xb{call(e,t){return so((()=>{const t=Xp(e);return"channelsLast"===this.dataFormat?gl(t,[1,2]):gl(t,[2,3])}))}}vb.className="GlobalAveragePooling2D",no(vb);class kb extends xb{call(e,t){return so((()=>{const t=Xp(e);return"channelsLast"===this.dataFormat?il(t,[1,2]):il(t,[2,3])}))}}kb.className="GlobalMaxPooling2D",no(kb);class Ib extends of{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=vf(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Sb extends Ib{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=Yp(e)).length<3)throw new od(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=Yp(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return so((()=>xm(((e,n)=>[Xp(this.layer.call(e,t)),[]]),e=Xp(e),[],!1,null,null,!1,!0)[1]))}}Sb.className="TimeDistributed",no(Sb);class $b extends Ib{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=vf(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=vf(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,Sd(Vd,"BidirectionalMergeMode",s),e.weights)throw new ld("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),s=s,this.returnState?(r=s.slice(1),t=s[0]):t=s[0],t=t,"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):pd(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=wm(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new od("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new tf({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new ld("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof nf;for(const e of a)if(e instanceof nf!==o)throw new od("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return so((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Ol(s,1)),"concat"===this.mergeMode?i=cp([r,s]):"sum"===this.mergeMode?i=ho(r,s):"ave"===this.mergeMode?i=ol(.5,ho(r,s)):"mul"===this.mergeMode?i=ol(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Xd(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Xd(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=vf(t.layer);if(delete t.layer,null!=t.numConstants)throw new ld("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}$b.className="Bidirectional",no($b);var Eb=function(e,t){return(Eb=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},Cb=function(){return(Cb=Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var s in t=arguments[n])Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e}).apply(this,arguments)};function Nb(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{l(r.next(e))}catch(e){a(e)}}function o(e){try{l(r.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((r=r.apply(e,t||[])).next())}))}function Tb(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(s=(s=i.trys).length>0&&s[s.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}function Ab(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function Rb(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,s,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(s)throw s.error}}return i}function Db(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(Rb(arguments[t]));return e}function Fb(e){return Nb(this,void 0,void 0,(function(){var t,r,a,i,o;return Tb(this,(function(l){switch(l.label){case 0:return t="file://",0!==e.indexOf("http://")&&0!==e.indexOf("https://")?[3,3]:[4,fetch(e)];case 1:return[4,l.sent().json()];case 2:return[2,l.sent()];case 3:return 0!==e.indexOf(t)?[3,5]:(r=n(127),a=(0,s.promisify)(r.readFile),o=(i=JSON).parse,[4,a(e.slice(t.length),{encoding:"utf-8"})]);case 4:return[2,o.apply(i,[l.sent()])];case 5:throw new Error("Unsupported URL scheme in metadata URL: "+e+". Supported schemes are: http://, https://, and (node.js-only) file://")}}))}))}var _b=null;function Ob(e){return null==_b&&(_b=(0,r.y3$)().epsilon()),(0,r.lub)((function(){var t=(0,r.Gi7)(e),n=t.mean,s=t.variance;return(0,r.hiC)((0,r.luU)(e,n),(0,r.IHx)((0,r._b3)(s),_b))}))}function Lb(e){return Nb(this,void 0,void 0,(function(){return Tb(this,(function(t){return[2,navigator.mediaDevices.getUserMedia({audio:null==e||e,video:!1})]}))}))}var Mb=function(){function e(e){var t=this;if(null==e)throw new Error("Required configuration object is missing for BrowserFftFeatureExtractor constructor");if(null==e.spectrogramCallback)throw new Error("spectrogramCallback cannot be null or undefined");if(!(e.numFramesPerSpectrogram>0))throw new Error("Invalid value in numFramesPerSpectrogram: "+e.numFramesPerSpectrogram);if(e.suppressionTimeMillis<0)throw new Error("Expected suppressionTimeMillis to be >= 0, but got "+e.suppressionTimeMillis);if(this.suppressionTimeMillis=e.suppressionTimeMillis,this.spectrogramCallback=e.spectrogramCallback,this.numFrames=e.numFramesPerSpectrogram,this.sampleRateHz=e.sampleRateHz||44100,this.fftSize=e.fftSize||1024,this.frameDurationMillis=this.fftSize/this.sampleRateHz*1e3,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.overlapFactor=e.overlapFactor,this.includeRawAudio=e.includeRawAudio,r.D5U.assert(this.overlapFactor>=0&&this.overlapFactor<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+t.overlapFactor})),this.columnTruncateLength>this.fftSize)throw new Error("columnTruncateLength "+this.columnTruncateLength+" exceeds fftSize ("+this.fftSize+").");this.audioContextConstructor=window.AudioContext||window.webkitAudioContext}return e.prototype.start=function(e){return Nb(this,void 0,void 0,(function(){var t,n,r;return Tb(this,(function(s){switch(s.label){case 0:if(null!=this.frameIntervalTask)throw new Error("Cannot start already-started BrowserFftFeatureExtractor");return t=this,[4,Lb(e)];case 1:return t.stream=s.sent(),this.audioContext=new this.audioContextConstructor({sampleRate:this.sampleRateHz}),n=this.audioContext.createMediaStreamSource(this.stream),this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=0,n.connect(this.analyser),this.freqDataQueue=[],this.freqData=new Float32Array(this.fftSize),this.includeRawAudio&&(this.timeDataQueue=[],this.timeData=new Float32Array(this.fftSize)),r=Math.max(1,Math.round(this.numFrames*(1-this.overlapFactor))),this.tracker=new Pb(r,Math.round(this.suppressionTimeMillis/this.frameDurationMillis)),this.frameIntervalTask=setInterval(this.onAudioFrame.bind(this),this.fftSize/this.sampleRateHz*1e3),[2]}}))}))},e.prototype.onAudioFrame=function(){return Nb(this,void 0,void 0,(function(){var e,t,n,s;return Tb(this,(function(a){switch(a.label){case 0:return this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0?[2]:(this.freqDataQueue.push(this.freqData.slice(0,this.columnTruncateLength)),this.includeRawAudio&&(this.analyser.getFloatTimeDomainData(this.timeData),this.timeDataQueue.push(this.timeData.slice())),this.freqDataQueue.length>this.numFrames&&this.freqDataQueue.shift(),this.tracker.tick()?(e=zb(this.freqDataQueue),t=Bb(e,[1,this.numFrames,this.columnTruncateLength,1]),n=void 0,this.includeRawAudio&&(s=zb(this.timeDataQueue),n=Bb(s,[1,this.numFrames*this.fftSize])),[4,this.spectrogramCallback(t,n)]):[3,2]);case 1:a.sent()&&this.tracker.suppress(),(0,r.B90)([t,n]),a.label=2;case 2:return[2]}}))}))},e.prototype.stop=function(){return Nb(this,void 0,void 0,(function(){return Tb(this,(function(e){if(null==this.frameIntervalTask)throw new Error("Cannot stop because there is no ongoing streaming activity.");return clearInterval(this.frameIntervalTask),this.frameIntervalTask=null,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop(),[2]}))}))},e.prototype.setConfig=function(e){throw new Error("setConfig() is not implemented for BrowserFftFeatureExtractor.")},e.prototype.getFeatures=function(){throw new Error("getFeatures() is not implemented for BrowserFftFeatureExtractor. Use the spectrogramCallback field of the constructor config instead.")},e}();function zb(e){var t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((function(e,r){return n.set(e,r*t)})),n}function Bb(e,t){var n=new Float32Array(r.D5U.sizeFromShape(t));return n.set(e,n.length-e.length),(0,r.XeE)(n,t)}var Pb=function(){function e(e,t){var n=this;this.period=e,this.suppressionTime=null==t?0:t,this.counter=0,r.D5U.assert(this.period>0,(function(){return"Expected period to be positive, but got "+n.period}))}return e.prototype.tick=function(){return this.counter++,this.counter%this.period==0&&(null==this.suppressionOnset||this.counter-this.suppressionOnset>this.suppressionTime)},e.prototype.suppress=function(){this.suppressionOnset=this.counter},e}();function Ub(e){var t=0;e.forEach((function(e){t+=e.byteLength}));var n=new Uint8Array(t),r=0;return e.forEach((function(e){n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Wb(e){if(null==e)throw new Error("Received null or undefind string");for(var t=unescape(encodeURIComponent(e)),n=new Uint8Array(t.length),r=0;r<t.length;++r)n[r]=t.charCodeAt(r);return n.buffer}function Vb(e){if(null==e)throw new Error("Received null or undefind buffer");var t=new Uint8Array(e);return decodeURIComponent(escape(String.fromCharCode.apply(String,Db(t))))}var Gb="TFJSSCDS",jb="_background_noise_",Hb=function(){function e(e){if(this.examples={},this.label2Ids={},null!=e)for(var t=function(e){r.D5U.assert(null!=e,(function(){return"Received null or undefined buffer"}));var t=0,n=Vb(e.slice(t,Gb.length));r.D5U.assert(n===Gb,(function(){return"Deserialization error: Invalid descriptor"})),t+=Gb.length,t+=4;var s=new Uint32Array(e,t,1),a=t+=4;t=a+s[0];var i=Vb(e.slice(a,t));return{manifest:JSON.parse(i),data:e.slice(t)}}(e),n=0,s=0;s<t.manifest.length;++s){var a=t.manifest[s],i=a.spectrogramNumFrames*a.spectrogramFrameSize;null!=a.rawAudioNumSamples&&(i+=a.rawAudioNumSamples),i*=4,this.addExample(qb({spec:a,data:t.data.slice(n,n+i)})),n+=i}}return e.prototype.addExample=function(e){r.D5U.assert(null!=e,(function(){return"Got null or undefined example"})),r.D5U.assert(null!=e.label&&e.label.length>0,(function(){return"Expected label to be a non-empty string, but got "+JSON.stringify(e.label)}));var t=function(){function e(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return e()+e()+"-"+e()+"-"+e()+"-"+e()+"-"+e()+e()+e()}();return this.examples[t]=e,e.label in this.label2Ids||(this.label2Ids[e.label]=[]),this.label2Ids[e.label].push(t),t},e.prototype.merge=function(e){var t,n,s,a;r.D5U.assert(e!==this,(function(){return"Cannot merge a dataset into itself"}));var i=e.getVocabulary();try{for(var o=Ab(i),l=o.next();!l.done;l=o.next()){var u=l.value,c=e.getExamples(u);try{for(var h=(s=void 0,Ab(c)),d=h.next();!d.done;d=h.next()){var p=d.value;this.addExample(p.example)}}catch(e){s={error:e}}finally{try{d&&!d.done&&(a=h.return)&&a.call(h)}finally{if(s)throw s.error}}}}catch(e){t={error:e}}finally{try{l&&!l.done&&(n=o.return)&&n.call(o)}finally{if(t)throw t.error}}},e.prototype.getExampleCounts=function(){var e={};for(var t in this.examples){var n=this.examples[t];n.label in e||(e[n.label]=0),e[n.label]++}return e},e.prototype.getExamples=function(e){var t=this;r.D5U.assert(null!=e,(function(){return"Expected label to be a string, but got "+JSON.stringify(e)})),r.D5U.assert(e in this.label2Ids,(function(){return'No example of label "'+e+'" exists in dataset'}));var n=[];return this.label2Ids[e].forEach((function(e){n.push({uid:e,example:t.examples[e]})})),n},e.prototype.getData=function(e,t){var n=this;r.D5U.assert(this.size()>0,(function(){return"Cannot get spectrograms as tensors because the dataset is empty"}));var s=this.getVocabulary();null!=e?r.D5U.assert(-1!==s.indexOf(e),(function(){return"Label "+e+" is not in the vocabulary ("+JSON.stringify(s)+")"})):r.D5U.assert(s.length>1,(function(){return"One-hot encoding of labels requires the vocabulary to have at least two words, but it has only "+s.length+" word."})),null==t&&(t={});var a,i,o=this.getSortedUniqueNumFrames();1===o.length?(a=null==t.numFrames?o[0]:t.numFrames,i=null==t.hopFrames?1:t.hopFrames):(a=t.numFrames,r.D5U.assert(null!=a&&Number.isInteger(a)&&a>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence numFrames is required. But it is not provided."})),r.D5U.assert(a<=o[0],(function(){return"numFrames ("+a+") exceeds the minimum numFrames ("+o[0]+") among the examples of the Dataset."})),i=t.hopFrames,r.D5U.assert(null!=i&&Number.isInteger(i)&&i>0,(function(){return"There are "+o.length+" unique lengths among the "+n.size()+" examples of this Dataset, hence hopFrames is required. But it is not provided."})));var l=null==t.normalize||t.normalize;return(0,r.lub)((function(){for(var o,u,c,h=[],d=[],p=[],f=0;f<s.length;++f){var g=s[f];if(null==e||g===e){var m=n.label2Ids[g],b=function(s){var o,u,m=n.examples[s].spectrogram,b=m.frameSize;null==c?c=b:r.D5U.assert(b===c,(function(){return"Mismatch in frameSize  ("+b+" vs "+c+")"}));var y=m.data.length/b,w=null;g!==jb&&(w=null==m.keyFrameIndex?Yb(m).dataSync()[0]:m.keyFrameIndex);var x=(0,r.wOQ)(m.data,[y,b,1]),v=Xb(y,w,a,i),k=function(n){var s=(0,r.lub)((function(){var e=(0,r.tPi)(x,[n[0],0,0],[n[1]-n[0],-1,-1]);return l?Ob(e):e}));t.getDataset?d.push(s.dataSync()):h.push(s),null==e&&p.push(f)};try{for(var I=(o=void 0,Ab(v)),S=I.next();!S.done;S=I.next())k(S.value)}catch(e){o={error:e}}finally{try{S&&!S.done&&(u=I.return)&&u.call(I)}finally{if(o)throw o.error}}(0,r.B90)(x)};try{for(var y=(o=void 0,Ab(m)),w=y.next();!w.done;w=y.next())b(w.value)}catch(e){o={error:e}}finally{try{w&&!w.done&&(u=y.return)&&u.call(y)}finally{if(o)throw o.error}}}}null!=t.augmentByMixingNoiseRatio&&n.augmentByMixingNoise(t.getDataset?d:h,p,t.augmentByMixingNoiseRatio);var x=null==t.shuffle||t.shuffle;if(t.getDataset){var v=null==t.datasetBatchSize?32:t.datasetBatchSize,k=null==t.datasetValidationSplit?.15:t.datasetValidationSplit;r.D5U.assert(k>0&&k<1,(function(){return"Invalid dataset validation split: "+k}));var I=d.map((function(e,t){return[e,p[t]]}));r.D5U.shuffle(I),d=I.map((function(e){return e[0]}));var S=I.map((function(e){return e[1]})),$=function(e,t,n){var s,a,i,o,l,u,c,h;r.D5U.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n}));for(var d=!Array.isArray(e[0]),p=t,f=[],g=0;g<p.length;++g){var m=p[g];null==f[m]&&(f[m]=[]),f[m].push(g)}var b=f.length,y=[],w=[];for(f.map((function(e){return r.D5U.shuffle(e)})),g=0;g<b;++g)for(var x=f[g],v=Math.round(x.length*(1-n)),k=0;k<x.length;++k)k<v?y.push(x[k]):w.push(x[k]);if(d){var I=[],S=[],$=[],E=[];try{for(var C=Ab(y),N=C.next();!N.done;N=C.next()){var T=N.value;I.push(e[T]),S.push(t[T])}}catch(e){s={error:e}}finally{try{N&&!N.done&&(a=C.return)&&a.call(C)}finally{if(s)throw s.error}}try{for(var A=Ab(w),R=A.next();!R.done;R=A.next())T=R.value,$.push(e[T]),E.push(t[T])}catch(e){i={error:e}}finally{try{R&&!R.done&&(o=A.return)&&o.call(A)}finally{if(i)throw i.error}}return{trainXs:I,trainYs:S,valXs:$,valYs:E}}I=[],S=[],$=[],E=[];try{for(var D=Ab(y),F=D.next();!F.done;F=D.next())T=F.value,I.push(e[T]),S.push(t[T])}catch(e){l={error:e}}finally{try{F&&!F.done&&(u=D.return)&&u.call(D)}finally{if(l)throw l.error}}try{for(var _=Ab(w),O=_.next();!O.done;O=_.next())T=O.value,$.push(e[T]),E.push(t[T])}catch(e){c={error:e}}finally{try{O&&!O.done&&(h=_.return)&&h.call(_)}finally{if(c)throw c.error}}return{trainXs:I,trainYs:S,valXs:$,valYs:E}}(d,S,k),E=$.trainXs,C=$.trainYs,N=$.valXs,T=$.valYs,A=lr({xs:or(E).map((function(e){return(0,r.wOQ)(e,[a,c,1])})),ys:or(C).map((function(e){return(0,r.L9e)((0,r.lfX)([e],s.length),[0])}))});x&&(A=A.shuffle(d.length)),A=A.batch(v).prefetch(4);var R=lr({xs:or(N).map((function(e){return(0,r.wOQ)(e,[a,c,1])})),ys:or(T).map((function(e){return(0,r.L9e)((0,r.lfX)([e],s.length),[0])}))});return[A,R=R.batch(v).prefetch(4)]}if(x){var D=[];h.forEach((function(e,t){D.push({x:e,y:p[t]})})),r.D5U.shuffle(D),h=D.map((function(e){return e.x})),p=D.map((function(e){return e.y}))}var F=null==e?(0,r.pju)((0,r.lfX)((0,r.RRF)(p,"int32"),s.length),"float32"):void 0;return{xs:(0,r.knu)(h),ys:F}}))},e.prototype.augmentByMixingNoise=function(e,t,n){var s,a;if(null==e||0===e.length)throw new Error("Cannot perform augmentation because data is null or empty");for(var i=e[0]instanceof Float32Array,o=this.getVocabulary(),l=[],u=[],c=0;c<t.length;++c)o[t[c]]===jb?l.push(c):u.push(c);if(0===l.length)throw new Error("Cannot perform augmentation by mixing with noise when there is no example with label _background_noise_");var h=[],d=[],p=function(s){var a=l[function(e,t){return Math.floor((t-0)*Math.random())+0}(0,l.length)],o=i?(0,r.RRF)(e[s]):e[s],u=i?(0,r.RRF)(e[a]):e[a],c=(0,r.lub)((function(){return Ob((0,r.IHx)(o,(0,r.dC7)(u,n)))}));i?h.push(c.dataSync()):h.push(c),d.push(t[s])};try{for(var f=Ab(u),g=f.next();!g.done;g=f.next())p(g.value)}catch(e){s={error:e}}finally{try{g&&!g.done&&(a=f.return)&&a.call(f)}finally{if(s)throw s.error}}console.log("Data augmentation: mixing noise: added "+h.length+" examples"),h.forEach((function(t){return e.push(t)})),t.push.apply(t,Db(d))},e.prototype.getSortedUniqueNumFrames=function(){for(var e,t,n=new Set,r=this.getVocabulary(),s=0;s<r.length;++s){var a=r[s],i=this.label2Ids[a];try{for(var o=(e=void 0,Ab(i)),l=o.next();!l.done;l=o.next()){var u=l.value,c=this.examples[u].spectrogram,h=c.data.length/c.frameSize;n.add(h)}}catch(t){e={error:t}}finally{try{l&&!l.done&&(t=o.return)&&t.call(o)}finally{if(e)throw e.error}}}var d=Db(n);return d.sort(),d},e.prototype.removeExample=function(e){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var t=this.examples[e].label;delete this.examples[e];var n=this.label2Ids[t].indexOf(e);this.label2Ids[t].splice(n,1),0===this.label2Ids[t].length&&delete this.label2Ids[t]},e.prototype.setExampleKeyFrameIndex=function(e,t){if(!(e in this.examples))throw new Error("Nonexistent example UID: "+e);var n=this.examples[e].spectrogram,s=n.data.length/n.frameSize;r.D5U.assert(t>=0&&t<s&&Number.isInteger(t),(function(){return"Invalid keyFrameIndex: "+t+". Must be >= 0, < "+s+", and an integer."})),n.keyFrameIndex=t},e.prototype.size=function(){return Object.keys(this.examples).length},e.prototype.durationMillis=function(){var e=0;for(var t in this.examples){var n=this.examples[t].spectrogram,r=23.22|n.frameDurationMillis;e+=n.data.length/n.frameSize*r}return e},e.prototype.empty=function(){return 0===this.size()},e.prototype.clear=function(){this.examples={}},e.prototype.getVocabulary=function(){var e=new Set;for(var t in this.examples){var n=this.examples[t];e.add(n.label)}var r=Db(e);return r.sort(),r},e.prototype.serialize=function(e){var t,n,s,a,i=this.getVocabulary();r.D5U.assert(!this.empty(),(function(){return"Cannot serialize empty Dataset"})),null!=e&&(Array.isArray(e)||(e=[e]),e.forEach((function(e){if(-1===i.indexOf(e))throw new Error('Word label "'+e+'" does not exist in the vocabulary of this dataset. The vocabulary is: '+JSON.stringify(i)+".")})));var o=[],l=[];try{for(var u=Ab(i),c=u.next();!c.done;c=u.next()){var h=c.value;if(null==e||-1!==e.indexOf(h)){var d=this.label2Ids[h];try{for(var p=(s=void 0,Ab(d)),f=p.next();!f.done;f=p.next()){var g=f.value,m=Kb(this.examples[g]);o.push(m.spec),l.push(m.data)}}catch(e){s={error:e}}finally{try{f&&!f.done&&(a=p.return)&&a.call(p)}finally{if(s)throw s.error}}}}}catch(e){t={error:e}}finally{try{c&&!c.done&&(n=u.return)&&n.call(u)}finally{if(t)throw t.error}}return function(e){var t=Wb(JSON.stringify(e.manifest)),n=Wb(Gb),r=new Uint32Array([1]),s=new Uint32Array([t.byteLength]);return Ub([Ub([n,r.buffer,s.buffer]),t,e.data])}({manifest:o,data:Ub(l)})},e}();function Kb(e){var t=null!=e.rawAudio,n={label:e.label,spectrogramNumFrames:e.spectrogram.data.length/e.spectrogram.frameSize,spectrogramFrameSize:e.spectrogram.frameSize};null!=e.spectrogram.keyFrameIndex&&(n.spectrogramKeyFrameIndex=e.spectrogram.keyFrameIndex);var r=e.spectrogram.data.buffer.slice(0);return t&&(n.rawAudioNumSamples=e.rawAudio.data.length,n.rawAudioSampleRateHz=e.rawAudio.sampleRateHz,r=Ub([r,e.rawAudio.data.buffer])),{spec:n,data:r}}function qb(e){var t={frameSize:e.spec.spectrogramFrameSize,data:new Float32Array(e.data.slice(0,4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))};null!=e.spec.spectrogramKeyFrameIndex&&(t.keyFrameIndex=e.spec.spectrogramKeyFrameIndex);var n={label:e.spec.label,spectrogram:t};return null!=e.spec.rawAudioNumSamples&&(n.rawAudio={sampleRateHz:e.spec.rawAudioSampleRateHz,data:new Float32Array(e.data.slice(4*e.spec.spectrogramFrameSize*e.spec.spectrogramNumFrames))}),n}function Xb(e,t,n,s){if(r.D5U.assert(Number.isInteger(e)&&e>0,(function(){return"snippetLength must be a positive integer, but got "+e})),null!=t&&r.D5U.assert(Number.isInteger(t)&&t>=0,(function(){return"focusIndex must be a non-negative integer, but got "+t})),r.D5U.assert(Number.isInteger(n)&&n>0,(function(){return"windowLength must be a positive integer, but got "+n})),r.D5U.assert(Number.isInteger(s)&&s>0,(function(){return"windowHop must be a positive integer, but got "+s})),r.D5U.assert(n<=e,(function(){return"windowLength ("+n+") exceeds snippetLength ("+e+")"})),r.D5U.assert(t<e,(function(){return"focusIndex ("+t+") equals or exceeds snippetLength ("+e+")"})),n===e)return[[0,e]];var a=[];if(null==t){for(var i=0;i+n<=e;)a.push([i,i+n]),i+=s;return a}var o=Math.floor(n/2),l=t-o;for(l<0?l=0:l+n>e&&(l=e-n);!(l-s<0||t>=l-s+n);)l-=s;for(;l+n<=e&&!(t<l);)a.push([l,l+n]),l+=s;return a}function Yb(e){return(0,r.lub)((function(){return(0,r.NqF)(function(e){return(0,r.lub)((function(){var t=e.data.length/e.frameSize,n=(0,r.odF)(e.data,[t,e.frameSize]);return(0,r.J69)(n,-1)}))}(e))}))}var Jb="0.5.4",Zb="tfjs-speech-commands-saved-model-metadata",Qb={localStorage:"undefined"==typeof window?null:window.localStorage},ey=.25,ty=function(){function e(t,n,s){this.MODEL_URL_PREFIX="https://storage.googleapis.com/tfjs-models/tfjs/speech-commands/v"+function(e){return e.split(".").slice(0,2).join(".")}(Jb)+"/browser_fft",this.SAMPLE_RATE_HZ=44100,this.FFT_SIZE=1024,this.DEFAULT_SUPPRESSION_TIME_MILLIS=0,this.streaming=!1,this.transferRecognizers={},r.D5U.assert(null==n&&null==s||null!=n&&null!=s,(function(){return"modelURL and metadataURL must be both provided or both not provided."})),null==n?(null==t?t=e.DEFAULT_VOCABULARY_NAME:r.D5U.assert(-1!==e.VALID_VOCABULARY_NAMES.indexOf(t),(function(){return"Invalid vocabulary name: '"+t+"'"})),this.vocabulary=t,this.modelArtifactsOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/model.json",this.metadataOrURL=this.MODEL_URL_PREFIX+"/"+this.vocabulary+"/metadata.json"):(r.D5U.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided"})),this.modelArtifactsOrURL=n,this.metadataOrURL=s),this.parameters={sampleRateHz:this.SAMPLE_RATE_HZ,fftSize:this.FFT_SIZE}}return e.prototype.listen=function(e,t){return Nb(this,void 0,void 0,(function(){var n,s,a,i,o,l=this;return Tb(this,(function(u){switch(u.label){case 0:if(this.streaming)throw new Error("Cannot start streaming again when streaming is ongoing.");return[4,this.ensureModelLoaded()];case 1:if(u.sent(),null==t&&(t={}),n=null==t.probabilityThreshold?0:t.probabilityThreshold,t.includeEmbedding&&(n=0),r.D5U.assert(n>=0&&n<=1,(function(){return"Invalid probabilityThreshold value: "+n})),s=null!=t.invokeCallbackOnNoiseAndUnknown&&t.invokeCallbackOnNoiseAndUnknown,t.includeEmbedding&&(s=!0),t.suppressionTimeMillis<0)throw new Error("suppressionTimeMillis is expected to be >= 0, but got "+t.suppressionTimeMillis);return a=null==t.overlapFactor?.5:t.overlapFactor,r.D5U.assert(a>=0&&a<1,(function(){return"Expected overlapFactor to be >= 0 and < 1, but got "+a})),i=function(a,i){return Nb(l,void 0,void 0,(function(){var i,o,l,u,c,h,d,p,f,g,m;return Tb(this,(function(b){switch(b.label){case 0:return i=Ob(a),t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,2];case 1:return b.sent(),m=Rb(this.modelWithEmbeddingOutput.predict(i),2),o=m[0],l=m[1],[3,3];case 2:o=this.model.predict(i),b.label=3;case 3:return[4,o.data()];case 4:return u=b.sent(),[4,(c=o.argMax(-1)).data()];case 5:return h=b.sent()[0],d=Math.max.apply(Math,Db(u)),(0,r.B90)([o,c,i]),d<n?[2,!1]:[3,6];case 6:return p=void 0,t.includeSpectrogram?(f={},[4,a.data()]):[3,8];case 7:f.data=b.sent(),f.frameSize=this.nonBatchInputShape[1],p=f,b.label=8;case 8:return g=!0,s||this.words[h]!==jb&&"_unknown_"!==this.words[h]||(g=!1),g&&e({scores:u,spectrogram:p,embedding:l}),[2,g]}}))}))},o=null==t.suppressionTimeMillis?this.DEFAULT_SUPPRESSION_TIME_MILLIS:t.suppressionTimeMillis,this.audioDataExtractor=new Mb({sampleRateHz:this.parameters.sampleRateHz,numFramesPerSpectrogram:this.nonBatchInputShape[0],columnTruncateLength:this.nonBatchInputShape[1],suppressionTimeMillis:o,spectrogramCallback:i,overlapFactor:a}),[4,this.audioDataExtractor.start(t.audioTrackConstraints)];case 2:return u.sent(),this.streaming=!0,[2]}}))}))},e.prototype.ensureModelLoaded=function(){return Nb(this,void 0,void 0,(function(){var e,t,n,s,a=this;return Tb(this,(function(i){switch(i.label){case 0:return null!=this.model?[2]:[4,this.ensureMetadataLoaded()];case 1:return i.sent(),"string"!=typeof this.modelArtifactsOrURL?[3,3]:[4,Sg(this.modelArtifactsOrURL)];case 2:return e=i.sent(),[3,5];case 3:return[4,Sg(r.io.fromMemory(this.modelArtifactsOrURL.modelTopology,this.modelArtifactsOrURL.weightSpecs,this.modelArtifactsOrURL.weightData))];case 4:e=i.sent(),i.label=5;case 5:if(1!==e.inputs.length)throw new Error("Expected model to have 1 input, but got a model with "+e.inputs.length+" inputs");if(4!==e.inputs[0].shape.length)throw new Error("Expected model to have an input shape of rank 4, but got an input shape of rank "+e.inputs[0].shape.length);if(1!==e.inputs[0].shape[3])throw new Error("Expected model to have an input shape with 1 as the last dimension, but got input shape"+JSON.stringify(e.inputs[0].shape[3])+"}");if(2!==(t=e.outputShape).length)throw new Error("Expected loaded model to have an output shape of rank 2,but received shape "+JSON.stringify(t));if(t[1]!==this.words.length)throw new Error("Mismatch between the last dimension of model's output shape ("+t[1]+") and number of words ("+this.words.length+").");return this.model=e,this.freezeModel(),this.nonBatchInputShape=e.inputs[0].shape.slice(1),this.elementsPerExample=1,e.inputs[0].shape.slice(1).forEach((function(e){return a.elementsPerExample*=e})),this.warmUpModel(),n=this.parameters.fftSize/this.parameters.sampleRateHz*1e3,s=e.inputs[0].shape[1],this.parameters.spectrogramDurationMillis=s*n,[2]}}))}))},e.prototype.ensureModelWithEmbeddingOutputCreated=function(){return Nb(this,void 0,void 0,(function(){var e,t;return Tb(this,(function(n){switch(n.label){case 0:return null!=this.modelWithEmbeddingOutput?[2]:[4,this.ensureModelLoaded()];case 1:for(n.sent(),t=this.model.layers.length-2;t>=0;--t)if("Dense"===this.model.layers[t].getClassName()){e=this.model.layers[t];break}if(null==e)throw new Error("Failed to find second last dense layer in the original model.");return this.modelWithEmbeddingOutput=Ig({inputs:this.model.inputs,outputs:[this.model.outputs[0],e.output]}),[2]}}))}))},e.prototype.warmUpModel=function(){var e=this;(0,r.lub)((function(){for(var t=(0,r.lls)([1].concat(e.nonBatchInputShape)),n=0;n<3;++n)e.model.predict(t)}))},e.prototype.ensureMetadataLoaded=function(){return Nb(this,void 0,void 0,(function(){var e,t,n;return Tb(this,(function(r){switch(r.label){case 0:return null!=this.words?[2]:"string"!=typeof this.metadataOrURL?[3,2]:[4,Fb(this.metadataOrURL)];case 1:return t=r.sent(),[3,3];case 2:t=this.metadataOrURL,r.label=3;case 3:if(null==(e=t).wordLabels){if(null==(n=e.words))throw new Error('Cannot find field "words" or "wordLabels" in metadata JSON file');this.words=n}else this.words=e.wordLabels;return[2]}}))}))},e.prototype.stopListening=function(){return Nb(this,void 0,void 0,(function(){return Tb(this,(function(e){switch(e.label){case 0:if(!this.streaming)throw new Error("Cannot stop streaming when streaming is not ongoing.");return[4,this.audioDataExtractor.stop()];case 1:return e.sent(),this.streaming=!1,[2]}}))}))},e.prototype.isListening=function(){return this.streaming},e.prototype.wordLabels=function(){return this.words},e.prototype.params=function(){return this.parameters},e.prototype.modelInputShape=function(){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognize(), or listen().");return this.model.inputs[0].shape},e.prototype.recognize=function(e,t){return Nb(this,void 0,void 0,(function(){var n,s,a,i,o,l,u,c,h,d,p,f,g;return Tb(this,(function(m){switch(m.label){case 0:return null==t&&(t={}),[4,this.ensureModelLoaded()];case 1:return m.sent(),null!=e?[3,3]:[4,this.recognizeOnline()];case 2:n=m.sent(),e=n.data,m.label=3;case 3:if(e instanceof r.esB)this.checkInputTensorShape(e),a=e,s=e.shape[0];else{if(e.length%this.elementsPerExample)throw new Error("The length of the input Float32Array "+e.length+" is not divisible by the number of tensor elements per per example expected by the model "+this.elementsPerExample+".");s=e.length/this.elementsPerExample,a=(0,r.yXz)(e,[s].concat(this.nonBatchInputShape))}return o={scores:null},t.includeEmbedding?[4,this.ensureModelWithEmbeddingOutputCreated()]:[3,5];case 4:return m.sent(),l=this.modelWithEmbeddingOutput.predict(a),i=l[0],o.embedding=l[1],[3,6];case 5:i=this.model.predict(a),m.label=6;case 6:return 1!==s?[3,8]:(u=o,[4,i.data()]);case 7:return u.scores=m.sent(),[3,10];case 8:return c=(0,r.HHK)(i),h=c.map((function(e){return e.data()})),d=o,[4,Promise.all(h)];case 9:d.scores=m.sent(),(0,r.B90)(c),m.label=10;case 10:return t.includeSpectrogram?(p=o,f={},e instanceof r.esB?[4,e.data()]:[3,12]):[3,14];case 11:return g=m.sent(),[3,13];case 12:g=e,m.label=13;case 13:p.spectrogram=(f.data=g,f.frameSize=this.nonBatchInputShape[1],f),m.label=14;case 14:return(0,r.B90)(i),[2,o]}}))}))},e.prototype.recognizeOnline=function(){return Nb(this,void 0,void 0,(function(){var e=this;return Tb(this,(function(t){return[2,new Promise((function(t,n){e.audioDataExtractor=new Mb({sampleRateHz:e.parameters.sampleRateHz,numFramesPerSpectrogram:e.nonBatchInputShape[0],columnTruncateLength:e.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n){return Nb(e,void 0,void 0,(function(){var e,r,s;return Tb(this,(function(a){switch(a.label){case 0:return e=Ob(n),[4,this.audioDataExtractor.stop()];case 1:return a.sent(),r=t,s={},[4,e.data()];case 2:return r.apply(void 0,[(s.data=a.sent(),s.frameSize=this.nonBatchInputShape[1],s)]),e.dispose(),[2,!1]}}))}))},overlapFactor:0}),e.audioDataExtractor.start()}))]}))}))},e.prototype.createTransfer=function(e){if(null==this.model)throw new Error("Model has not been loaded yet. Load model by calling ensureModelLoaded(), recognizer(), or listen().");r.D5U.assert(null!=e&&"string"==typeof e&&e.length>1,(function(){return"Expected the name for a transfer-learning recognized to be a non-empty string, but got "+JSON.stringify(e)})),r.D5U.assert(null==this.transferRecognizers[e],(function(){return"There is already a transfer-learning model named '"+e+"'"}));var t=new ny(e,this.parameters,this.model);return this.transferRecognizers[e]=t,t},e.prototype.freezeModel=function(){var e,t;try{for(var n=Ab(this.model.layers),r=n.next();!r.done;r=n.next())r.value.trainable=!1}catch(t){e={error:t}}finally{try{r&&!r.done&&(t=n.return)&&t.call(n)}finally{if(e)throw e.error}}},e.prototype.checkInputTensorShape=function(e){var t=this.model.inputs[0].shape.length;if(e.shape.length!==t)throw new Error("Expected input Tensor to have rank "+t+", but got rank "+e.shape.length+" that differs ");var n=e.shape.slice(1),s=this.model.inputs[0].shape.slice(1);if(!r.D5U.arraysEqual(n,s))throw new Error("Expected input to have shape [null,"+s+"], but got shape [null,"+n+"]")},e.VALID_VOCABULARY_NAMES=["18w","directional4w"],e.DEFAULT_VOCABULARY_NAME="18w",e}(),ny=function(e){function t(t,n,s){var a=e.call(this)||this;return a.name=t,a.parameters=n,a.baseModel=s,r.D5U.assert(null!=t&&"string"==typeof t&&t.length>0,(function(){return"The name of a transfer model must be a non-empty string, but got "+JSON.stringify(t)})),a.nonBatchInputShape=a.baseModel.inputs[0].shape.slice(1),a.words=null,a.dataset=new Hb,a}return function(e,t){function n(){this.constructor=e}Eb(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}(t,e),t.prototype.collectExample=function(e,t){return Nb(this,void 0,void 0,(function(){var n,s,a,i,o=this;return Tb(this,(function(l){if(r.D5U.assert(!this.streaming,(function(){return"Cannot start collection of transfer-learning example because a streaming recognition or transfer-learning example collection is ongoing"})),r.D5U.assert(null!=e&&"string"==typeof e&&e.length>0,(function(){return"Must provide a non-empty string when collecting transfer-learning example"})),null==t&&(t={}),null!=t.durationMultiplier&&null!=t.durationSec)throw new Error("durationMultiplier and durationSec are mutually exclusive, but are both specified.");return null!=t.durationSec?(r.D5U.assert(t.durationSec>0,(function(){return"Expected durationSec to be > 0, but got "+t.durationSec})),s=this.parameters.fftSize/this.parameters.sampleRateHz,n=Math.ceil(t.durationSec/s)):null!=t.durationMultiplier?(r.D5U.assert(t.durationMultiplier>=1,(function(){return"Expected duration multiplier to be >= 1, but got "+t.durationMultiplier})),n=Math.round(this.nonBatchInputShape[0]*t.durationMultiplier)):n=this.nonBatchInputShape[0],null!=t.snippetDurationSec&&(r.D5U.assert(t.snippetDurationSec>0,(function(){return"snippetDurationSec is expected to be > 0, but got "+t.snippetDurationSec})),r.D5U.assert(null!=t.onSnippet,(function(){return"onSnippet must be provided if snippetDurationSec is provided."}))),null!=t.onSnippet&&r.D5U.assert(null!=t.snippetDurationSec,(function(){return"snippetDurationSec must be provided if onSnippet is provided."})),a=this.parameters.fftSize/this.parameters.sampleRateHz,i=a*n,this.streaming=!0,[2,new Promise((function(s){var a=null==t.snippetDurationSec?1:t.snippetDurationSec/i,l=1-a,u=Math.round(1/a),c=0,h=-1,d=[];o.audioDataExtractor=new Mb({sampleRateHz:o.parameters.sampleRateHz,numFramesPerSpectrogram:n,columnTruncateLength:o.nonBatchInputShape[1],suppressionTimeMillis:0,spectrogramCallback:function(n,a){return Nb(o,void 0,void 0,(function(){var i,o,l,p,f,g,m,b,y,w,x,v,k,I,S,$,E,C,N,T;return Tb(this,(function(A){switch(A.label){case 0:return null!=t.onSnippet?[3,7]:(i=Ob(n),l=(o=this.dataset).addExample,p={label:e},f={},[4,i.data()]);case 1:return p.spectrogram=(f.data=A.sent(),f.frameSize=this.nonBatchInputShape[1],f),t.includeRawAudio?(m={},[4,a.data()]):[3,3];case 2:return m.data=A.sent(),m.sampleRateHz=this.audioDataExtractor.sampleRateHz,g=m,[3,4];case 3:g=void 0,A.label=4;case 4:return l.apply(o,[(p.rawAudio=g,p)]),i.dispose(),[4,this.audioDataExtractor.stop()];case 5:return A.sent(),this.streaming=!1,this.collateTransferWords(),b=s,y={},[4,n.data()];case 6:return b.apply(void 0,[(y.data=A.sent(),y.frameSize=this.nonBatchInputShape[1],y)]),[3,13];case 7:return[4,n.data()];case 8:for(w=A.sent(),-1===h&&(h=w.length),x=h-1;0!==w[x]&&x>=0;)x--;return v=h-x-1,h=x+1,k=w.slice(w.length-v,w.length),d.push(k),null!=t.onSnippet&&t.onSnippet({data:k,frameSize:this.nonBatchInputShape[1]}),c++!==u?[3,13]:[4,this.audioDataExtractor.stop()];case 9:return A.sent(),this.streaming=!1,this.collateTransferWords(),I=function(e){if(e.length<2)throw new Error("Cannot normalize a Float32Array with fewer than 2 elements.");return null==_b&&(_b=(0,r.y3$)().epsilon()),(0,r.lub)((function(){var t=(0,r.Gi7)((0,r.RRF)(e)),n=t.mean,s=t.variance,a=n.arraySync(),i=Math.sqrt(s.arraySync()),o=Array.from(e).map((function(e){return(e-a)/(i+_b)}));return new Float32Array(o)}))}(function(e){var t=0;e.forEach((function(e){return t+=e.length}));var n=new Float32Array(t),r=0;return e.forEach((function(e){n.set(e,r),r+=e.length})),n}(d)),S={data:I,frameSize:this.nonBatchInputShape[1]},E=($=this.dataset).addExample,C={label:e,spectrogram:S},t.includeRawAudio?(T={},[4,a.data()]):[3,11];case 10:return T.data=A.sent(),T.sampleRateHz=this.audioDataExtractor.sampleRateHz,N=T,[3,12];case 11:N=void 0,A.label=12;case 12:E.apply($,[(C.rawAudio=N,C)]),s(S),A.label=13;case 13:return[2,!1]}}))}))},overlapFactor:l,includeRawAudio:t.includeRawAudio}),o.audioDataExtractor.start(t.audioTrackConstraints)}))]}))}))},t.prototype.clearExamples=function(){var e=this;r.D5U.assert(null!=this.words&&this.words.length>0&&!this.dataset.empty(),(function(){return"No transfer learning examples exist for model name "+e.name})),this.dataset.clear(),this.words=null},t.prototype.countExamples=function(){if(this.dataset.empty())throw new Error("No examples have been collected for transfer-learning model named '"+this.name+"' yet.");return this.dataset.getExampleCounts()},t.prototype.getExamples=function(e){return this.dataset.getExamples(e)},t.prototype.setExampleKeyFrameIndex=function(e,t){this.dataset.setExampleKeyFrameIndex(e,t)},t.prototype.removeExample=function(e){this.dataset.removeExample(e),this.collateTransferWords()},t.prototype.isDatasetEmpty=function(){return this.dataset.empty()},t.prototype.loadExamples=function(e,t){var n,r,s,a;void 0===t&&(t=!1);var i=new Hb(e);t&&this.clearExamples();var o=i.getVocabulary();try{for(var l=Ab(o),u=l.next();!u.done;u=l.next()){var c=u.value,h=i.getExamples(c);try{for(var d=(s=void 0,Ab(h)),p=d.next();!p.done;p=d.next()){var f=p.value;this.dataset.addExample(f.example)}}catch(e){s={error:e}}finally{try{p&&!p.done&&(a=d.return)&&a.call(d)}finally{if(s)throw s.error}}}}catch(e){n={error:e}}finally{try{u&&!u.done&&(r=l.return)&&r.call(l)}finally{if(n)throw n.error}}this.collateTransferWords()},t.prototype.serializeExamples=function(e){return this.dataset.serialize(e)},t.prototype.collateTransferWords=function(){this.words=this.dataset.getVocabulary()},t.prototype.collectTransferDataAsTensors=function(e,t){var n=this.nonBatchInputShape[0];e=e||ey;var r=Math.round(e*n),s=this.dataset.getData(null,Cb({numFrames:n,hopFrames:r},t));return{xs:s.xs,ys:s.ys}},t.prototype.collectTransferDataAsTfDataset=function(e,t,n,r){void 0===t&&(t=.15),void 0===n&&(n=32);var s=this.nonBatchInputShape[0];e=e||ey;var a=Math.round(e*s);return this.dataset.getData(null,Cb({numFrames:s,hopFrames:a,getDataset:!0,datasetBatchSize:n,datasetValidationSplit:t},r))},t.prototype.train=function(e){return Nb(this,void 0,void 0,(function(){var t,n=this;return Tb(this,(function(s){return r.D5U.assert(null!=this.words&&this.words.length>0,(function(){return"Cannot train transfer-learning model '"+n.name+"' because no transfer learning example has been collected."})),r.D5U.assert(this.words.length>1,(function(){return"Cannot train transfer-learning model '"+n.name+"' because only 1 word label ('"+JSON.stringify(n.words)+"') has been collected for transfer learning. Requires at least 2."})),null!=e.fineTuningEpochs&&r.D5U.assert(e.fineTuningEpochs>=0&&Number.isInteger(e.fineTuningEpochs),(function(){return"If specified, fineTuningEpochs must be a non-negative integer, but received "+e.fineTuningEpochs})),null==e&&(e={}),null==this.model&&this.createTransferModelFromBaseModel(),this.secondLastBaseDenseLayer.trainable=!1,this.model.compile({loss:"categoricalCrossentropy",optimizer:e.optimizer||"sgd",metrics:["acc"]}),t=null==e.fitDatasetDurationMillisThreshold?6e4:e.fitDatasetDurationMillisThreshold,this.dataset.durationMillis()>t?(console.log("Detected large dataset: total duration = "+this.dataset.durationMillis()+" ms > "+t+" ms. Training transfer model using fitDataset() instead of fit()"),[2,this.trainOnDataset(e)]):[2,this.trainOnTensors(e)]}))}))},t.prototype.trainOnDataset=function(e){return Nb(this,void 0,void 0,(function(){var t,n,s,a,i,o,l,u,c;return Tb(this,(function(h){switch(h.label){case 0:return r.D5U.assert(e.epochs>0,(function(){return"Invalid config.epochs"})),t=null==e.batchSize?32:e.batchSize,n=e.windowHopRatio||ey,s=Rb(this.collectTransferDataAsTfDataset(n,e.validationSplit,t,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),2),a=s[0],i=s[1],o=r.D5U.now(),[4,this.model.fitDataset(a,{epochs:e.epochs,validationData:e.validationSplit>0?i:null,callbacks:null==e.callback?null:[e.callback]})];case 1:return l=h.sent(),console.log("fitDataset() took "+(r.D5U.now()-o).toFixed(2)+" ms"),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?(u=r.D5U.now(),[4,this.fineTuningUsingTfDatasets(e,a,i)]):[3,3];case 2:return c=h.sent(),console.log("fitDataset() (fine-tuning) took "+(r.D5U.now()-u).toFixed(2)+" ms"),[2,[l,c]];case 3:return[2,l]}}))}))},t.prototype.trainOnTensors=function(e){return Nb(this,void 0,void 0,(function(){var t,n,s,a,i,o,l,u,c,h;return Tb(this,(function(d){switch(d.label){case 0:t=e.windowHopRatio||ey,n=this.collectTransferDataAsTensors(t,{augmentByMixingNoiseRatio:e.augmentByMixingNoiseRatio}),s=n.xs,a=n.ys,console.log("Training data: xs.shape = "+s.shape+", ys.shape = "+a.shape),d.label=1;case 1:return d.trys.push([1,,6,7]),null!=e.validationSplit?(u=function(e,t,n){return r.D5U.assert(n>0&&n<1,(function(){return"validationSplit is expected to be >0 and <1, but got "+n})),(0,r.lub)((function(){for(var s=(0,r.NqF)(t,-1).dataSync(),a=[],i=0;i<s.length;++i){var o=s[i];null==a[o]&&(a[o]=[]),a[o].push(i)}var l=a.length,u=[],c=[];for(a.map((function(e){return r.D5U.shuffle(e)})),i=0;i<l;++i)for(var h=a[i],d=Math.round(h.length*(1-n)),p=0;p<h.length;++p)p<d?u.push(h[p]):c.push(h[p]);return{trainXs:(0,r.Iqj)(e,u),trainYs:(0,r.Iqj)(t,u),valXs:(0,r.Iqj)(e,c),valYs:(0,r.Iqj)(t,c)}}))}(s,a,e.validationSplit),i=u.trainXs,o=u.trainYs,l=[u.valXs,u.valYs]):(i=s,o=a),[4,this.model.fit(i,o,{epochs:null==e.epochs?20:e.epochs,validationData:l,batchSize:e.batchSize,callbacks:null==e.callback?null:[e.callback]})];case 2:return c=d.sent(),null!=e.fineTuningEpochs&&e.fineTuningEpochs>0?[4,this.fineTuningUsingTensors(e,i,o,l)]:[3,4];case 3:return h=d.sent(),[2,[c,h]];case 4:return[2,c];case 5:return[3,7];case 6:return(0,r.B90)([s,a,i,o,l]),[7];case 7:return[2]}}))}))},t.prototype.fineTuningUsingTfDatasets=function(e,t,n){return Nb(this,void 0,void 0,(function(){var r,s,a;return Tb(this,(function(i){switch(i.label){case 0:return r=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,s=null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:s,metrics:["acc"]}),[4,this.model.fitDataset(t,{epochs:e.fineTuningEpochs,validationData:n,callbacks:null==e.callback?null:[e.callback]})];case 1:return a=i.sent(),this.secondLastBaseDenseLayer.trainable=r,[2,a]}}))}))},t.prototype.fineTuningUsingTensors=function(e,t,n,r){return Nb(this,void 0,void 0,(function(){var s,a,i;return Tb(this,(function(o){switch(o.label){case 0:return s=this.secondLastBaseDenseLayer.trainable,this.secondLastBaseDenseLayer.trainable=!0,a=null==e.fineTuningOptimizer?"sgd":e.fineTuningOptimizer,this.model.compile({loss:"categoricalCrossentropy",optimizer:a,metrics:["acc"]}),[4,this.model.fit(t,n,{epochs:e.fineTuningEpochs,validationData:r,batchSize:e.batchSize,callbacks:null==e.fineTuningCallback?null:[e.fineTuningCallback]})];case 1:return i=o.sent(),this.secondLastBaseDenseLayer.trainable=s,[2,i]}}))}))},t.prototype.evaluate=function(e){return Nb(this,void 0,void 0,(function(){var t=this;return Tb(this,(function(n){return r.D5U.assert(null!=e.wordProbThresholds&&e.wordProbThresholds.length>0,(function(){return"Received null or empty wordProbThresholds"})),r.D5U.assert(this.words[0]===jb,(function(){return"Cannot perform evaluation when the first tag is not _background_noise_"})),[2,(0,r.lub)((function(){for(var n=[],s=0,a=t.collectTransferDataAsTensors(e.windowHopRatio),i=a.xs,o=a.ys.argMax(-1).dataSync(),l=t.model.predict(i),u=(0,r.Fp7)((0,r.tPi)(l,[0,1],[l.shape[0],l.shape[1]-1]),-1),c=l.shape[0],h=0;h<e.wordProbThresholds.length;++h){for(var d=e.wordProbThresholds[h],p=u.greater((0,r.iD$)(d)).dataSync(),f=0,g=0,m=0,b=0,y=0;y<c;++y)0===o[y]?(f++,p[y]&&m++):(g++,p[y]&&b++);var w=m/f,x=b/g;n.push({probThreshold:d,fpr:w,tpr:x}),console.log("ROC thresh="+d+": fpr="+w.toFixed(4)+", tpr="+x.toFixed(4)),h>0&&(s+=Math.abs(n[h-1].fpr-n[h].fpr)*(n[h-1].tpr+n[h].tpr)/2)}return{rocCurve:n,auc:s}}))]}))}))},t.prototype.createTransferModelFromBaseModel=function(){var e=this;r.D5U.assert(null!=this.words,(function(){return"No word example is available for tranfer-learning model of name "+e.name}));for(var t=this.baseModel.layers,n=t.length-2;n>=0&&"dense"!==t[n].getClassName().toLowerCase();)n--;if(n<0)throw new Error("Cannot find a hidden dense layer in the base model.");this.secondLastBaseDenseLayer=t[n];var s,a=this.secondLastBaseDenseLayer.output;this.transferHead=new kg(undefined),this.transferHead.add((s={units:this.words.length,activation:"softmax",inputShape:a.shape.slice(1),name:"NewHeadDense"},new Lm(s)));var i=this.transferHead.apply(a);this.model=Ig({inputs:this.baseModel.inputs,outputs:i})},t.prototype.modelInputShape=function(){return this.baseModel.inputs[0].shape},t.prototype.getMetadata=function(){return{tfjsSpeechCommandsVersion:Jb,modelName:this.name,timeStamp:(new Date).toISOString(),wordLabels:this.wordLabels()}},t.prototype.save=function(e){return Nb(this,void 0,void 0,(function(){var t,n,r;return Tb(this,(function(s){return t=null!=e,e=e||ry(this.name),t||(n=Qb.localStorage.getItem(Zb),(r=null==n?{}:JSON.parse(n))[this.name]=this.getMetadata(),Qb.localStorage.setItem(Zb,JSON.stringify(r))),console.log("Saving model to "+e),[2,this.model.save(e)]}))}))},t.prototype.load=function(e){return Nb(this,void 0,void 0,(function(){var t,n,r;return Tb(this,(function(s){switch(s.label){case 0:if(t=null!=e,e=e||ry(this.name),!t){if(null==(n=JSON.parse(Qb.localStorage.getItem(Zb)))||null==n[this.name])throw new Error("Cannot find metadata for transfer model named "+this.name+'"');this.words=n[this.name].wordLabels,console.log("Loaded word list for model named "+this.name+": "+this.words)}return r=this,[4,Sg(e)];case 1:return r.model=s.sent(),console.log("Loaded model from "+e+":"),this.model.summary(),[2]}}))}))},t.prototype.createTransfer=function(e){throw new Error("Creating transfer-learned recognizer from a transfer-learned recognizer is not supported.")},t}(ty);function ry(e){return"indexeddb://tfjs-speech-commands-model/"+e}function sy(e,t,n,s){if(r.D5U.assert(null==n&&null==s||null!=n&&null!=s,(function(){return"customModelURL and customMetadataURL must be both provided or both not provided."})),null!=n&&r.D5U.assert(null==t,(function(){return"vocabulary name must be null or undefined when modelURL is provided."})),"BROWSER_FFT"===e)return new ty(t,n,s);throw"SOFT_FFT"===e?new Error("SOFT_FFT SpeechCommandRecognizer has not been implemented yet."):new Error("Invalid fftType: '"+e+"'")}},689:(e,t,n)=>{"use strict";var r={};n.r(r),n.d(r,{addImpl:()=>Se,bincountImpl:()=>Ee,bincountReduceImpl:()=>Ce,ceilImpl:()=>Ae,concatImpl:()=>Re,expImpl:()=>De,expm1Impl:()=>Fe,floorImpl:()=>_e,gatherV2Impl:()=>Oe,greaterImpl:()=>Le,lessImpl:()=>Me,linSpaceImpl:()=>ze,logImpl:()=>Be,maxImpl:()=>Pe,maximumImpl:()=>Ue,minimumImpl:()=>We,multiplyImpl:()=>Ve,negImpl:()=>je,notEqualImpl:()=>He,prodImpl:()=>qe,rangeImpl:()=>Xe,rsqrtImpl:()=>Ye,simpleAbsImpl:()=>me,sliceImpl:()=>Je,sparseFillEmptyRowsImpl:()=>Ze,sparseReshapeImpl:()=>Qe,squaredDifferenceImpl:()=>et,stridedSliceImpl:()=>tt,subImpl:()=>nt,tileImpl:()=>st,topKImpl:()=>at,transposeImpl:()=>Ke,uniqueImpl:()=>it});var s=n(966);const a={},i={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function o(e){if(!(e in a)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete a[e]}),!1),1===e?t.getContext("webgl",i)||t.getContext("experimental-webgl",i):t.getContext("webgl2",i)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;a[e]=t}const t=a[e];return t.isContextLost()?(delete a[e],o(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),a[e])}var l,u,c;function h(e,t){return[t,e]}function d(e){const t=s.D5U.sizeFromShape(e),n=Math.ceil(t/4);return s.D5U.sizeToSquarishShape(n)}function p(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function f(e,t){const n=e;let r,a,i,o,l,u,c,h,d,p;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,i=n.RGBA16F,o=n.RGBA32F,l=n.RED,c=4,h=1,d=n.HALF_FLOAT,p=n.FLOAT):(r=e.RGBA,a=e.RGBA,i=e.RGBA,o=n.RGBA,l=e.RGBA,c=4,h=4,d=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:i,internalFormatPackedFloat:o,textureFormatFloat:l,downloadTextureFormat:u,downloadUnpackNumChannels:c,defaultNumChannels:h,textureTypeHalfFloat:d,textureTypeFloat:p}}function g(e,t){const n=t();return(0,s.OBj)().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function m(e){return!!((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function b(e,t){return $(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(l||(l={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const y=/ERROR: [0-9]+:([0-9]+):/g;function w(e,t){if(g(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function x(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),g(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),g(e,(()=>e.enableVertexAttribArray(o))),!0)}function v(e,t,n,r){g(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),g(e,(()=>e.activeTexture(e.TEXTURE0+n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),g(e,(()=>e.uniform1i(n,r)))}function k(e,t,n){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function I(e,t){g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),g(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function S(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function $(e,t,n){const r=g(e,(()=>t()));if(null==r)throw new Error(n);return r}function E(e,t=2){return s.D5U.sizeFromShape(e.slice(0,e.length-t))}function C(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function N(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[E(e),...C(e)]),t}function T(e){return e%2==0}function A(e,t){if(e=e.slice(-2),t=t.slice(-2),s.D5U.arraysEqual(e,t))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(T(n)&&T(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&T(e[0])&&T(t[0])}let R,D;function F(e,t){return null!=e.getExtension(t)}function _(e){try{if(null!=o(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function O(e){const t=f(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function L(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const M=(0,s.OBj)();function z(){let e,t,n,r,a,i,o,l,u,c;return 2===(0,s.OBj)().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",i="outputColor",o="out vec4 outputColor;",l="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",c="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",i="gl_FragColor",o="",l="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",c="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:i,defineOutput:o,defineSpecialNaN:l,defineSpecialInf:u,defineRound:c}}function B(e,t,n="index"){const r=s.D5U.computeStrides(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function P(e){const t=s.D5U.computeStrides(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}M.registerFlag("HAS_WEBGL",(()=>M.getNumber("WEBGL_VERSION")>0)),M.registerFlag("WEBGL_VERSION",(()=>_(2)?2:_(1)?1:0)),M.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),M.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===M.get("WEBGL_VERSION"))),M.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),M.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),M.registerFlag("WEBGL_PACK",(()=>M.getBool("HAS_WEBGL"))),M.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_CLIP",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_PACK_REDUCE",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_LAZILY_UNPACK",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_CONV_IM2COL",(()=>M.getBool("WEBGL_PACK"))),M.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==R){const t=o(e);R=t.getParameter(t.MAX_TEXTURE_SIZE)}return R}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==D){const t=o(e);D=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,D)}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=M.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=o(e);return t=F(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:F(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),M.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>M.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!s.C2$.isMobile())),M.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=o(e);if(1===e){if(!F(t,"OES_texture_float"))return!1}else if(!F(t,"EXT_color_buffer_float"))return!1;return O(t)}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!M.getBool("WEBGL_FORCE_F16_TEXTURES")&&M.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),M.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=o(e);if(1!==e){if(F(t,"EXT_color_buffer_float"))return O(t);const e="EXT_color_buffer_half_float";if(F(t,e)){const n=t.getExtension(e);return function(e,t){const n=f(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!F(t,"OES_texture_float")&&!!F(t,"WEBGL_color_buffer_float")&&O(t)}(M.getNumber("WEBGL_VERSION")))),M.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=M.getNumber("WEBGL_VERSION"))&&null!=o(e).fenceSync;var e})),M.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>M.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),M.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),M.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>s.C2$.isMobile()&&M.getBool("IS_CHROME")?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}));const U="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n";class W{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=l.DENSE;const t=d(e),n=z();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${B(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class V{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=l.DENSE;const t=d(e),n=z();this.outputShape=e,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${B(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${t[0]}, ${t[1]}));\n        int index = 4 * (resTexRC.x * ${t[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class G{constructor(e){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const t=z();this.outputShape=e,this.userCode=`\n      ${U}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class j{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const t=z();this.outputShape=e,this.userCode=`\n      ${U}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class H{constructor(e,t,n=!1){this.variableNames=["A"];const r=z(),[s,a]=t;this.outputShape=e;let i="result";n&&(i="floor(result * 255. + 0.5)"),this.userCode=`\n      ${P(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${a};\n        int c = imod(flatIndex, ${a});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${i}, 0., 0., 0.);\n      }\n    `}}class K{constructor(e,t,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=z(),[s,a]=t;this.outputShape=e;let i="",o="result";n&&(o="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let n=0;n<=1;n++){const o=2*t+n;i+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${e[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${t} < ${e[1]}) {\n              localCoords[1] += ${t};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${a};\n              c = imod(flatIndex, ${a});\n              uv = (vec2(c, r) + halfCR) / vec2(${a}.0, ${s}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${o}] = values[0];\n              } else if(offset == 1) {\n                result[${o}] = values[1];\n              } else if(offset == 2) {\n                result[${o}] = values[2];\n              } else {\n                result[${o}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${P(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${i}\n\n        ${r.output} = ${o};\n      }\n    `}}function q(e,t,n,r,a,i){!function(e,t){const n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const o=function(e){return $(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),l=e.TEXTURE_2D;return g(e,(()=>e.bindTexture(l,o))),g(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(l,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),g(e,(()=>e.texParameteri(l,e.TEXTURE_MIN_FILTER,e.NEAREST))),g(e,(()=>e.texParameteri(l,e.TEXTURE_MAG_FILTER,e.NEAREST))),g(e,(()=>e.texImage2D(l,0,r,t,n,0,a,i,null))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),o}function X(e){return e.internalFormatFloat}function Y(e){return e.internalFormatHalfFloat}function J(e){return e.downloadTextureFormat}function Z(e){return e.internalFormatPackedFloat}function Q(e){return e.internalFormatPackedHalfFloat}class ee{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=(0,s.OBj)().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){a[e]=t}(t,e)):this.gl=o(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===(0,s.OBj)().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=b(this.gl,e),F(this.gl,t))this.textureHalfFloatExtension=b(this.gl,t);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),F(this.gl,r))this.colorBufferHalfFloatExtension=b(this.gl,r);else if((0,s.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",F(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!F(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=$(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),g(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return $(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=f(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,s.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;g(e,(()=>e.finish())),g(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),g(e,(()=>e.deleteFramebuffer(this.framebuffer))),g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),g(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),g(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=h(t,n);return q(e,s,a,X(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=h(t,n);return q(e,s,a,Y(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=h(t,n);return q(e,s,a,J(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,l;g(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(s),g(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,r,0,e.RGBA,o,i))),g(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=p(t,n);return q(e,s,a,Q(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=p(t,n);return q(e,s,a,Z(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(I(this.gl,this.framebuffer),this.outputTexture=null),g(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=h(t,n),i=new Uint8Array(t*n*4);return g(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,r]=p(e,t);return n*r*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return g(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),g(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if((0,s.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return g(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=$(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=y.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),i=a.length.toString().length+2,o=a.map(((e,t)=>s.D5U.rightPad((t+1).toString(),i)+e));let l=0;for(let e=0;e<o.length;e++)l=Math.max(o[e].length,l);const u=o.slice(0,r-1),c=o.slice(r-1,r),h=o.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${s.D5U.rightPad(c[0],l)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=z();return function(e,t){const n=$(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(g(e,(()=>e.shaderSource(n,t))),g(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return $(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return g(t,(()=>t.attachShader(r,this.vertexShader))),g(t,(()=>t.attachShader(r,n))),function(e,t){if(g(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&w(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return g(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),x(e,t,"clipSpacePos",n,3,20,0)&&x(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&g(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&w(this.gl,this.program),g(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return $(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),g(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),v(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=p(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&w(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),g(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),g(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=b(this.gl,2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await s.D5U.repeatedTry((()=>this.disposed||this.isQueryAvailable(e,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||s.D5U.repeatedTry((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),k(this.gl,e,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(k(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):I(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;k(r,e,this.framebuffer),this.debug&&S(r),this.outputTexture=e,g(r,(()=>r.viewport(0,0,t,n))),g(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),g(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{getBroadcastDims:te}=s.Wap;function ne(e,t,n,r){const a=[];e.forEach((e=>{const t=s.D5U.sizeFromShape(e.shapeInfo.logicalShape);e.shapeInfo.isUniform?a.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(a.push(`uniform sampler2D ${e.name};`),a.push(`uniform int offset${e.name};`))}));const i=a.join("\n"),o=e.map((e=>function(e,t,n=!1){let r="";r+=n?se(e):re(e);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=e.shapeInfo.logicalShape.length,o=t.logicalShape.length,l=te(e.shapeInfo.logicalShape,t.logicalShape),u=he(o),c=o-i;let h;const d=["x","y","z","w","u","v"];h=0===i?"":o<2&&l.length>=1?"coords = 0;":l.map((e=>`coords.${d[e+c]} = 0;`)).join("\n");let p="";p=o<2&&i>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+c]}`)).join(", ");let f="return outputValue;";const g=1===s.D5U.sizeFromShape(e.shapeInfo.logicalShape),m=1===s.D5U.sizeFromShape(t.logicalShape);if(1!==i||g||m){if(g&&!m)f=1===o?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(l.length){const e=i-2,t=i-1;l.indexOf(e)>-1&&l.indexOf(t)>-1?f="return vec4(outputValue.x);":l.indexOf(e)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":l.indexOf(t)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${r}(${p});\n      ${f}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",i=t.texShape,o=e.shapeInfo.texShape,l=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&l===u&&null==e.shapeInfo.flatOffset&&s.D5U.arraysEqual(o,i))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const c=he(u),h=te(e.shapeInfo.logicalShape,t.logicalShape),d=u-l;let p;const f=["x","y","z","w","u","v"];p=0===l?"":u<2&&h.length>=1?"coords = 0;":h.map((e=>`coords.${f[e+d]} = 0;`)).join("\n");let g="";return g=u<2&&l>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${f[t+d]}`)).join(", "),`\n    float ${a}() {\n      ${c} coords = getOutputCoords();\n      ${p}\n      return get${r}(${g});\n    }\n  `}(e,t)),r}(e,t,r))).join("\n"),l=t.texShape,u=z(),c=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(u);let h,d,p=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${ae}\n    ${ie}\n    ${oe}\n  `}(u);return t.isPacked?(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,t);case 2:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(s.D5U.arraysEqual(e,t))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),s=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t);default:return function(e,t){const n=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),s=r*Math.ceil(e[e.length-2]/2);let a=s,i="",o="b, r, c";for(let t=2;t<e.length-1;t++)a*=e[e.length-t-1],i=`\n      int b${t} = index / ${a};\n      index -= b${t} * ${a};\n    `+i,o=`b${t}, `+o;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${i}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${o});\n    }\n  `}(e,t)}}(t.logicalShape,l),d=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(u)):(h=function(e,t){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=t)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(e,t){return s.D5U.arraysEqual(e,t)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t);case 3:return function(e,t){const n=B(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(e,t);case 4:return function(e,t){const n=B(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t);case 5:return function(e,t){const n=B(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=B(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}var n}(t.logicalShape,l),d=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(u)),r&&(p+=le),[p,c,d,i,h,o,n].join("\n")}function re(e){const t=e.shapeInfo.logicalShape;switch(t.length){case 0:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`float ${n}() {return ${t};}`;const[r,s]=e.shapeInfo.texShape;if(1===r&&1===s)return`\n      float ${n}() {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const[a,i]=e.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${a}, ${i}, ${ue(t)});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${ce(e)}\n      }\n    `;const r=e.shapeInfo.texShape,s=r[0],a=r[1];if(1===a&&1===s)return`\n      float ${n}(int index) {\n        return sampleTexture(${t}, halfCR);\n      }\n    `;const i=ue(t);return 1===a?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${s}.0);\n        return sampleTexture(${t}, uv);\n      }\n    `:1===s?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);\n        return sampleTexture(${t}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${a}, index + ${i});\n      return sampleTexture(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape;if(null!=a&&s.D5U.arraysEqual(t,a)){const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=s.D5U.squeezeShape(t),l=i;if(l.length<t.length){const t=["row","col"];return`\n      ${re(de(e,l))}\n      float ${r}(int row, int col) {\n        return ${r}(${pe(t,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));\n        ${ce(e)}\n      }\n    `;const u=a[0],c=a[1],h=ue(n);return 1===c?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===u?`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${t[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${t[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[1]*t[2],i=t[2],{newShape:o,keptDims:l}=s.D5U.squeezeShape(t),u=o;if(u.length<t.length){const t=["row","col","depth"];return`\n        ${re(de(e,u))}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${pe(t,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${ce(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],d=c[1],p=e.shapeInfo.flatOffset;if(d===a&&null==p)return`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${d}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(d===i&&null==p)return`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${d}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${ue(n)};\n        vec2 uv = uvFromFlat(${h}, ${d}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(e);case 4:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[3],i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=s.D5U.squeezeShape(t);if(l.length<t.length){const t=["row","col","depth","depth2"];return`\n      ${re(de(e,l))}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${pe(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${ce(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,d=h[0],p=h[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${t[1]*t[2]}, ${t[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${d}, ${p}, index + ${ue(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],i=t[3]*a,o=t[2]*i,l=t[1]*o,{newShape:u,keptDims:c}=s.D5U.squeezeShape(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${re(de(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${pe(t,c)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${l}, ${o}, ${i}, ${a})) +\n          depth3;\n        ${ce(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,p=d[0],f=d[1];if(f===l&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${o}, ${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===a&&null==h)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${l} + col * ${o} + depth * ${i} +\n          depth2 * ${a} + depth3 + ${ue(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:i}=s.D5U.squeezeShape(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${re(de(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${pe(t,i)});\n      }\n    `}const o=t[5],l=t[4]*o,u=t[3]*l,c=t[2]*u,h=t[1]*c;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${c}, ${u}, ${l})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${o}, 1)));\n        ${ce(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,f=p[0],g=p[1];if(g===h&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${g}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(g===o&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${g}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${c} + depth * ${u} +\n          depth2 * ${l} + depth3 * ${o} + depth4 + ${ue(n)};\n      vec2 uv = uvFromFlat(${f}, ${g}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function se(e){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${z().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e){const t=e.name,n="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e.shapeInfo.texShape,s=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=z();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${s[0]}, ${s[1]}, index);\n      return ${a.texture2D}(${t}, uv);\n    }\n  `}(e);case 2:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=z();if(null!=a&&s.D5U.arraysEqual(t,a))return`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${n}, uv);\n      }\n    `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(t[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${n}, uv);\n    }\n  `}(e);case 3:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===t[0]){const n=[1,2],s=["b","row","col"];return`\n        ${se(de(e,t.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${pe(s,n)});\n        }\n      `}const i=a[0],o=a[1],l=Math.ceil(t[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${i}, ${o}, ${l*Math.ceil(t[1]/2)}, ${l}, b, row, col);\n      return ${z().texture2D}(${n}, uv);\n    }\n  `}(e);default:return function(e){const t=e.shapeInfo.logicalShape,n=t.length,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],o=i[0],l=i[1],u=Math.ceil(t[n-1]/2);let c=u*Math.ceil(t[n-2]/2),h="int b, int row, int col",d=`b * ${c} + (row / 2) * ${u} + (col / 2)`;for(let e=2;e<n-1;e++)h=`int b${e}, `+h,c*=t[n-e-1],d=`b${e} * ${c} + `+d;return`\n    vec4 ${s}(${h}) {\n      int index = ${d};\n      int texR = index / ${l};\n      int texC = index - texR * ${l};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${o});\n      return ${z().texture2D}(${r}, uv);\n    }\n  `}(e)}}const ae="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",ie="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oe="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",le="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function ue(e){return`offset${e}`}function ce(e){const t=e.name,n=s.D5U.sizeFromShape(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function he(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function de(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function pe(e,t){return t.map((t=>e[t])).join(", ")}function fe(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,a=t[n],i=a.shape;if(!s.D5U.arraysEqual(r,i))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${i} must match`);if(e.isUniform&&a.isUniform)return;const o=e.texShape,l=a.isUniform?null:a.texData.texShape;if(!s.D5U.arraysEqual(o,l))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${o} and ${l} must match`)}))}function ge(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&s.D5U.assert("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}function me(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}function be(e){return(t,n,r,a,i)=>{const o=s.Wap.assertAndGetBroadcastShape(t,n),l=o.length,u=s.D5U.computeStrides(o),c=s.D5U.sizeFromShape(o),h=s.D5U.getTypedArrayFromDType(i,c),d=t.length,p=n.length,f=s.D5U.computeStrides(t),g=s.D5U.computeStrides(n),m=s.Wap.getBroadcastDims(t,o),b=s.Wap.getBroadcastDims(n,o);if(m.length+b.length===0)for(let t=0;t<h.length;++t)h[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<h.length;++t){const n=s.D5U.indexToLoc(t,l,u),i=n.slice(-d);m.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,d,f),c=n.slice(-p);b.forEach((e=>c[e]=0));const y=s.D5U.locToIndex(c,p,g);h[t]=e(r[o],a[y])}return[h,o]}}function ye(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}function we(e,t,n="float32"){if("complex64"===n)return ye({inputs:{real:we(e,t,"float32"),imag:we(e,t,"float32")},backend:e});const r=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(t),n);return e.makeTensorInfo(t,n,r)}function xe(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function ve(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return xe({inputs:{x:a},backend:n});const e=we(n,a.shape,a.dtype),t=ve({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=ye({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}({inputs:{input:a},backend:n}),t=ve({inputs:{x:e},backend:n,attrs:{dtype:i}});return n.disposeIntermediateTensorInfo(e),t}if(!s.D5U.hasEncodingLoss(a.dtype,i)){const e=xe({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===i){const e=n.data.get(a.dataId).values,t=s.D5U.toTypedArray([0],a.dtype),[r,i]=be(((e,t)=>e!==t?1:0))(a.shape,[],e,t,"bool");return n.makeTensorInfo(i,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}function ke(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;ge([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c=r||a.dtype,[h,d]=t(a.shape,i.shape,l,u,c);return o.makeTensorInfo(d,c,h)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=ve({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,l=o.data.get(r.dataId).values,u=o.data.get(s.dataId).values,c=ve({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),d=h.complexTensorInfos.real,p=h.complexTensorInfos.imag,f=o.data.get(d.dataId).values,g=o.data.get(p.dataId).values,[m,b,y]=n(a.shape,i.shape,l,u,f,g),w=o.makeTensorInfo(y,"float32",m),x=o.makeTensorInfo(y,"float32",b),v=ye({inputs:{real:w,imag:x},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(x),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[l,u]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(u,s,l)}}}function Ie(e){return(t,n,r,a,i,o)=>{const l=s.Wap.assertAndGetBroadcastShape(t,n),u=s.D5U.sizeFromShape(l),c=l.length,h=s.D5U.computeStrides(l),d=s.D5U.getTypedArrayFromDType("float32",u),p=s.D5U.getTypedArrayFromDType("float32",u),f=s.Wap.getBroadcastDims(t,l),g=s.Wap.getBroadcastDims(n,l),m=s.Wap.mergeRealAndImagArrays(r,a),b=s.Wap.mergeRealAndImagArrays(i,o),y=t.length,w=s.D5U.computeStrides(t),x=n.length,v=s.D5U.computeStrides(n);if(f.length+g.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%b.length,s=e(m[2*n],m[2*n+1],b[2*r],b[2*r+1]);d[t]=s.real,p[t]=s.imag}else for(let t=0;t<d.length;t++){const n=s.D5U.indexToLoc(t,c,h),r=n.slice(-y);f.forEach((e=>r[e]=0));const a=s.D5U.locToIndex(r,y,w),i=n.slice(-x);g.forEach((e=>i[e]=0));const o=s.D5U.locToIndex(i,x,v),l=e(m[2*a],m[2*a+1],b[2*o],b[2*o+1]);d[t]=l.real,p[t]=l.imag}return[d,p,l]}}s.SYM,s.Zz9,s.iJz,s.xJR,s.RFZ;const Se=be(((e,t)=>e+t)),$e=Ie(((e,t,n,r)=>({real:e+n,imag:t+r})));function Ee(e,t,n,r,a){const i=s.D5U.sizeFromShape(r),o=s.D5U.makeZerosTypedArray(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(o[r]+=i>0?t[n]:1)}return o}function Ce(e,t,n,r=!1){const a=e.shape[0],i=e.shape[1],o=(0,s.f3b)([a,n],t.dtype);for(let s=0;s<a;s++)for(let a=0;a<i;a++){const i=e.get(s,a);if(i<0)throw new Error("Input x must be non-negative!");i>=n||(r?o.set(1,s,i):t.size>0?o.set(o.get(s,i)+t.get(s,a),s,i):o.set(o.get(s,i)+1,s,i))}return o}function Ne(e){return(t,n,r)=>{const a=s.D5U.getTypedArrayFromDType(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}function Te(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(ge(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,s);return o.makeTensorInfo(i.shape,u,c)}}ke(s.mm_,Se,$e),s.mm_;const Ae=Ne((e=>Math.ceil(e)));function Re(e,t,n,r){const a=s.D5U.getArrayFromDType(n,s.D5U.sizeFromShape(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=s.D5U.sizeFromShape(e.shape);a.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const i="string"===n?s.Wap.fromUint8ToStringArray(e.vals):e.vals;let o=0;for(let n=0;n<e.shape[0];++n){const s=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[s+t]=i[o++]}r+=e.shape[1]}))}return a}Te(s.gJX,Ae),s.gJX;const De=Ne((e=>Math.exp(e))),Fe=(Te(s.NEP,De),s.NEP,Ne((e=>Math.expm1(e)))),_e=(Te(s.Y0y,Fe),s.Y0y,Ne((e=>Math.floor(e))));function Oe(e,t,n){const r=(0,s.f3b)(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const l=e.locToIndex(s);r.values[n]=e.values[l]}return r}Te(s.OR,_e),s.OR;const Le=be(((e,t)=>e>t?1:0)),Me=(ke(s.iZT,Le,null,"bool"),s.iZT,be(((e,t)=>e<t?1:0)));function ze(e,t,n){const r=(t-e)/(n-1),a=s.D5U.makeZerosTypedArray(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}ke(s.vtC,Me,null,"bool"),s.vtC;const Be=Ne((e=>Math.log(e)));function Pe(e,t,n,r){const a=s.D5U.getTypedArrayFromDType(r,s.D5U.sizeFromShape(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];t>s&&(s=t)}a[n]=s}return a}Te(s.ZbH,Be),s.ZbH;const Ue=be(((e,t)=>Math.max(e,t))),We=(ke(s.BMI,Ue),s.BMI,be(((e,t)=>Math.min(e,t)))),Ve=(ke(s.q8u,We),s.q8u,be(((e,t)=>e*t))),Ge=Ie(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})));function je(e,t,n){const r=s.D5U.createScalarValue(-1,n);return Ve([],t,r,e,n)}ke(s.wYn,Ve,Ge),s.wYn,s.kuV;const He=be(((e,t)=>e!==t?1:0));function Ke(e,t,n,r,a){const i=t.length,o=s.D5U.sizeFromShape(t),l=s.D5U.computeStrides(t),u=s.D5U.computeStrides(a),c=s.D5U.getTypedArrayFromDType(n,s.D5U.sizeFromShape(a));for(let t=0;t<o;++t){const n=s.D5U.indexToLoc(t,i,l),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];c[s.D5U.locToIndex(a,i,u)]=e[t]}return c}function qe(e,t,n,r){const[a,i]=s.Wap.computeOutAndReduceShapes(e,r),o=(0,s.x8V)(t,"int32"),l=s.D5U.makeZerosTypedArray(s.D5U.sizeFromShape(a),o),u=s.D5U.sizeFromShape(i);for(let e=0;e<l.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];l[e]=r}return{outVals:l,outShape:a,outDtype:o}}function Xe(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return s.D5U.makeZerosTypedArray(0,r);const a=Math.abs(Math.ceil((t-e)/n)),i=s.D5U.makeZerosTypedArray(a,r);t<e&&1===n&&(n=-1),i[0]=e;for(let e=1;e<i.length;e++)i[e]=i[e-1]+n;return i}ke(s.yQU,He,null,"bool"),s.yQU,s.G3Y,s.DlI;const Ye=Ne((e=>1/Math.sqrt(e)));function Je(e,t,n,r,a){const i=s.kuN.isSliceContinous(r,t,n),o=s.D5U.sizeFromShape(n),l=s.D5U.computeStrides(r);if(i){const n=s.kuN.computeFlatOffset(t,l);return"string"===a?e.slice(n,n+o):e.subarray(n,n+o)}const u="string"===a?s.Wap.fromUint8ToStringArray(e):e,c=(0,s.f3b)(r,a,u),h=(0,s.f3b)(n,a);for(let e=0;e<h.size;++e){const n=h.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));h.set(c.get(...r),...n)}return"string"===a?s.Wap.fromStringArrayToUint8(h.values):h.values}function Ze(e,t,n,r,a,i,o){const l=t[0],u=i[0],c=new Array(u),h=new Array(l),d=t[1];if(0===u){if(0!==l)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${l}`);return[s.D5U.getArrayFromDType(n,0),[0,d],s.D5U.getArrayFromDType(a,0),c,h]}let p=!0,f=0;const g=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*d];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++g[n],p=p&&n>=f,f=n}let m=!0;for(let e=0;e<u;++e){const t=0===g[e];c[e]=t,m=m&&!t,g[e]=Math.max(g[e],1),e>0&&(g[e]+=g[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<l;++e)h[e]=e;return[t,[l,d],n,c,h]}{const t=g[u-1],i=s.D5U.getArrayFromDType(n,t*d),p=s.D5U.getArrayFromDType(a,t),f=new Array(u).fill(0);for(let t=0;t<l;++t){const n=e[t*d],s=f[n],a=(0===n?0:g[n-1])+s;f[n]++;for(let n=0;n<d;++n)i[a*d+n]=e[t*d+n];p[a]=r[t],h[t]=a}for(let e=0;e<u;++e)if(0===f[e]){const t=0===e?0:g[e-1];i[t*d+0]=e;for(let e=1;e<d;++e)i[t*d+e]=0;p[t]=o}return[i,[l,d],p,c,h]}}function Qe(e,t,n,r,a){const i=s.D5U.sizeFromShape(r),o=t[0],l=a.length,u=[];let c=1,h=-1;for(let e=0;e<l;++e){const t=a[e];if(-1===t){if(-1!==h)throw new Error(`only one output dimension may be -1, not both ${h} and ${e}`);h=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);c*=t,u.push(t)}}if(-1!==h){if(c<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(i/c);if(c*e!==i)throw new Error(`Input to reshape is a SparseTensor with ${i}\n          dense values, but the requested shape requires a multiple of ${c}. inputShape=${r} outputShape= ${u}`);u[h]=e}const d=s.D5U.sizeFromShape(u);if(d!==i)throw new Error(`Input to reshape is a tensor with ${i} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const p=r.length,f=[];if(p>0){f[p-1]=1;for(let e=p-2;e>=0;--e)f[e]=f[e+1]*r[e+1]}const g=[];if(l>0){g[l-1]=1;for(let e=l-2;e>=0;--e)g[e]=g[e+1]*u[e+1]}const m=s.D5U.getArrayFromDType(n,o*l);for(let t=0;t<o;++t){let n=0;for(let r=0;r<p;++r)n+=e[t*p+r]*f[r];for(let e=0;e<l;++e)m[t*l+e]=Math.trunc(n/g[e]),n%=g[e]}return[m,[o,l],u]}Te(s.bV0,Ye),s.bV0,s.p2w;const et=be(((e,t)=>{const n=e-t;return n*n}));function tt(e,t,n,r){const a=(0,s.f3b)(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}ke(s._tC,et),s._tC;const nt=be(((e,t)=>e-t)),rt=Ie(((e,t,n,r)=>({real:e-n,imag:t-r})));function st(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=(0,s.f3b)(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}function at(e,t,n,r,a){const i=t[t.length-1],[o,l]=[e.length/i,i],u=s.D5U.getTypedArrayFromDType(n,o*r),c=s.D5U.getTypedArrayFromDType("int32",o*r);for(let t=0;t<o;t++){const n=t*l,s=e.subarray(n,n+l),a=[];for(let e=0;e<s.length;e++)a.push({value:s[e],index:e});a.sort(((e,t)=>t.value-e.value));const i=t*r,o=u.subarray(i,i+r),h=c.subarray(i,i+r);for(let e=0;e<r;e++)o[e]=a[e].value,h[e]=a[e].index}const h=t.slice();return h[h.length-1]=r,[(0,s.f3b)(h,n,u),(0,s.f3b)(h,"int32",c)]}function it(e,t,n,r){const a=s.D5U.parseAxisParam(t,n)[0],i=[1,n[0],1];for(let e=0;e<a;e++)i[0]*=n[e];i[1]=n[a];for(let e=a+1;e<n.length;e++)i[2]*=n[e];const o={},l=new Int32Array(n[a]),u=new s.YDk(i,r,e),c=[],h=1===i[0]&&1===i[2];for(let t=0;t<n[a];t++){let n;if(h)n=e[t].toString();else{const e=[];for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==o[n])l[t]=o[n];else{const e=Object.keys(o).length;o[n]=e,l[t]=e,c.push(t)}}const d=i.slice();d[1]=Object.keys(o).length;const p=new s.YDk(d,r);c.forEach(((e,t)=>{for(let n=0;n<i[0];n++)for(let r=0;r<i[2];r++)p.set(u.get(n,e,r),n,t,r)}));const f=n.slice();return f[a]=d[1],{outputValues:p.values,outputShape:f,indices:l}}ke(s.Tr8,nt,rt),s.Tr8;const{addImpl:ot,bincountImpl:lt,bincountReduceImpl:ut,ceilImpl:ct,concatImpl:ht,expImpl:dt,expm1Impl:pt,floorImpl:ft,gatherV2Impl:gt,greaterImpl:mt,lessImpl:bt,linSpaceImpl:yt,logImpl:wt,maxImpl:xt,maximumImpl:vt,minimumImpl:kt,multiplyImpl:It,negImpl:St,prodImpl:$t,rangeImpl:Et,rsqrtImpl:Ct,simpleAbsImpl:Nt,sliceImpl:Tt,sparseFillEmptyRowsImpl:At,sparseReshapeImpl:Rt,stridedSliceImpl:Dt,subImpl:Ft,tileImpl:_t,topKImpl:Ot,transposeImpl:Lt,uniqueImpl:Mt}=r;function zt(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function Bt(e,t){return 1===t?[e]:zt(e,t)}class Pt{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Bt("rc",t),r=he(t),s=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let s=e-2;s<e;s++)r+=`${n[s]} >= ${t[s]}`,s<e-1&&(r+="||");return r}(t,e,n),a=function(e,t,n,r){if(1===e)return"";const s=r.slice(-2);return`\n    int r = ${s[0]};\n    int c = ${s[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let s=0;s<=1;s++){let a=`${0===r?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let n=2;n<e;n++)a=`${t[t.length-1-n]},`+a;n.push(a)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${s}) {\n            setOutput(vec4(0));\n          } else {\n            ${a}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class Ut{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=t,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${B(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${P(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${e[1]};\n        int cols = ${e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Wt{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=Gt(t,n),s=jt(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=Vt(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===c.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===c.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===c.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=Gt(n,r),i=jt(t,a,r);i in this.freeTextures||(this.freeTextures[i]=[]);const o=Vt(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),l=(0,s.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==l&&this._numBytesAllocated>l?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=o):(this.freeTextures[i].push(e),this.numFreeTextures++,this._numBytesFree+=o),this.numUsedTextures--;const u=this.usedTextures[i],c=u.indexOf(e);if(c<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(c,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function Vt(e,t,n,r,s){const a=function(e,t){switch(e){case c.PACKED_2X2_FLOAT32:return Z(t);case c.PACKED_2X2_FLOAT16:return Q(t);case c.UNPACKED_FLOAT32:return X(t);case c.UNPACKED_FLOAT16:return Y(t);case c.PACKED_4X1_UNSIGNED_BYTE:return J(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=p(e[0],e[1]);i=t*n}else{const[t,n]=h(e[0],e[1]);i=t*n}return i*function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,a)}function Gt(e,t){if(e===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(e===u.RENDER||null==e)return function(e){return(0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:e?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(t);if(e===u.DOWNLOAD||e===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function jt(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class Ht{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const Kt="return abs(x);",qt="return x;";class Xt{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class Yt{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=Bt("rc",t),r=he(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const Jt=s.GDt.ZA,Zt={};class Qt extends s.Zuw{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!(0,s.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=o((0,s.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((t=(0,s.OBj)().getNumber("WEBGL_VERSION"))in Zt||(Zt[t]={}),Zt[t]),this.gpgpu=new ee(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new Wt(this.gpgpu),this.numMBBeforeWarning=null==(0,s.OBj)().global.screen?1024:(0,s.OBj)().global.screen.height*(0,s.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new s.JLz(this,(0,s.SRH)())}nextDataId(){return Qt.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if(((0,s.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,s.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:u.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if((0,s.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:u.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:i,shape:o,isPacked:l}=t;if(null!=i){let t;t=l?new Xt(o,qt):new Ht(o,qt);const n=this.runWebGLProgram(t,[{dataId:e,shape:o,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let c,h;if(u&&(c=s.D5U.now()),"complex64"===r){const e=this.readSync(a.real.dataId),t=this.readSync(a.imag.dataId);h=s.Wap.mergeRealAndImagArrays(e,t)}else h=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=s.D5U.now()-c),this.convertAndCacheOnCPU(e,h)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:i,complexTensorInfos:o,isPacked:l}=t;if(null!=a){let t;t=l?new Xt(r,qt):new Ht(r,qt);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:i}],i),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(!(0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,s.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,c,h=null;if("complex64"!==i&&(0,s.OBj)().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);h=this.gpgpu.createBufferFromTexture(t.texture,...d(r))}if(this.pendingRead.set(e,[]),"complex64"!==i&&await this.gpgpu.createAndWaitForFence(),"complex64"===i){const e=await Promise.all([this.read(o.real.dataId),this.read(o.imag.dataId)]),t=e[0],n=e[1];c=s.Wap.mergeRealAndImagArrays(t,n)}else if(null==h)c=this.getValuesFromTexture(e);else{const e=s.D5U.sizeFromShape(r);c=this.gpgpu.downloadFloat32MatrixFromBuffer(h,e)}null!=u&&this.disposeIntermediateTensorInfo(u);const p=this.convertAndCacheOnCPU(e,c),f=this.pendingRead.get(e);return this.pendingRead.delete(e),f.forEach((e=>e(p))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&(0,s.SRH)().removeDataId(e,this),this.pendingDeletes--),p}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>s.D5U.decodeString(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return(0,s.f3b)(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!m(n)){if((0,s.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=s.D5U.sizeFromShape(t);if((0,s.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...d(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const i=(0,s.OBj)().getBool("WEBGL_PACK")&&!0===r,o=i?N(t):t,l=i?new j(o):new G(o),u=this.runWebGLProgram(l,[{shape:o,dtype:n,dataId:e}],"float32"),c=this.texData.get(u.dataId),h=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(c.texture,c.texShape[0],c.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),h}timerAvailable(){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=s.D5U.flatten(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),i=s.D5U.flatten(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const o={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);o.kernelMs=s.D5U.sum(e),o.getExtraProfileInfo=()=>e.map(((e,t)=>({name:i[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else o.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,o}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:s.D5U.now(),endMs:null}}endTimer(e){return(0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=s.D5U.now(),e)}async getQueryTime(e){if((0,s.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=128){return(0,s.OBj)().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&s.D5U.sizeFromShape(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){s.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return Jt(e.shape,t)}packedUnaryOp(e,t,n){const r=new Xt(e.shape,t),a=this.compileAndRun(r,[e],n);return(0,s.SRH)().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=Nt(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if((0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Kt,e.dtype);const t=new Ht(e.shape,Kt),n=this.compileAndRun(t,[e]);return(0,s.SRH)().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&s.D5U.isString(n[0])){const a=n.map((e=>s.D5U.encodeString(e)));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return(0,s.SRH)().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new Yt(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new Pt(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[E(e.shape),...C(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[E(t),...C(t)],a=new Ut(s,n),i=this.runWebGLProgram(a,[r],e.dtype,null,!0);return{dataId:i.dataId,shape:t,dtype:i.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:s}=t,a=N(r);let i;return i=n?new V(a):new W(a),{dtype:s,shape:r,dataId:this.runWebGLProgram(i,[{shape:a,dtype:s,dataId:e}],s,null,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===l.DENSE){const t=d(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===s.D5U.sizeFromShape(i.shape))return o.values=s.D5U.getTypedArrayFromDType(i.dtype,0),i;const u=[],c=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&s.D5U.sizeFromShape(t.shape)<=(0,s.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!A(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const h={shape:i.shape,texData:o,isUniform:!1},p=function(e,t,n){let r="";t.concat(n).forEach((e=>{const t=null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0,n=e.isUniform?"uniform":e.texData.texShape;r+=`${e.shape}_${n}_${t}`}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s,a}(e,c,h),f=this.getAndSaveBinary(p,(()=>function(e,t,n,r){const a=t.userCode,i=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),o=i.map((e=>e.shapeInfo)),l={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=ne(i,l,a,t.packedInputs),c=e.createProgram(u);let h=null;const d=e.getUniformLocation(c,"NAN",!1);1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&(h=e.getUniformLocation(c,"INFINITY",!1));const p={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n],s=!1;p[r]=e.getUniformLocation(c,r,s),p[`offset${r}`]=e.getUniformLocation(c,`offset${r}`,s)}return{program:t,source:u,webGLProgram:c,uniformLocations:p,inShapeInfos:o,outShapeInfo:l,infLoc:h,nanLoc:d}}(this.gpgpu,e,c,h))),g=null!=this.activeTimers;let m;g&&(m=this.startTimer()),function(e,t,n,r,a){fe(t.inShapeInfos,n),fe([t.outShapeInfo],[r]);const i=r.texData.texture,o=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(i,o[0],o[1]):e.setOutputMatrixTexture(i,o[0],o[1]),e.setProgram(t.webGLProgram),1===(0,s.OBj)().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const a=t.program.variableNames[r],i=t.uniformLocations[a],o=t.uniformLocations[`offset${a}`];if(null!=i)if(n.isUniform)if(s.D5U.sizeFromShape(n.shape)<2)e.gl.uniform1f(i,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(i,t)}else null!=n.texData.slice&&null!=o&&e.gl.uniform1i(o,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,i,r)})),null!=a&&a(e,t.webGLProgram),e.executeProgram()}(this.gpgpu,f,c,h,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),g&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const b=(0,s.OBj)().get("WEBGL_FLUSH_THRESHOLD");if(b>0){const e=s.D5U.now();e-this.lastGlFlushTime>b&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!(0,s.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===a){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,s.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,s.lub)((()=>{if(!(0,s.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=(0,s.OBj)().getBool("DEBUG");(0,s.OBj)().set("DEBUG",!1);const t=this.abs((0,s.iD$)(1e-8)).dataSync()[0];if((0,s.OBj)().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:i,usage:o,isPacked:l}=t;if(null!=i)return;const c=null!=this.activeTimers;let h;c&&(h=s.D5U.now());let d=t.texShape;if(null==d&&(d=function(e,t=!1){let n=(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?s.D5U.nearestLargerEven(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=s.D5U.squeezeShape(e);e=t.newShape}let r=s.D5U.sizeFromShape(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=E(e);let n=2,a=2;return e.length&&([n,a]=C(e)),r=t*(n/2)*(a/2),s.D5U.sizeToSquarishShape(r).map((e=>2*e))}return s.D5U.sizeToSquarishShape(r)}(n,l),t.texShape=d),null!=a){const e=N(n);let i,o=d[1],f=d[0];const g=a instanceof Uint8Array;l?([o,f]=p(d[0],d[1]),i=new K(e,[f,o],g)):i=new H(e,[f,o],g);const m=this.makeTensorInfo([f,o],r);this.texData.get(m.dataId).usage=g?u.PIXELS:u.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(m.dataId),o,f,a);const b=!0,y=this.runWebGLProgram(i,[m],r,null,b),w=this.texData.get(y.dataId);t.texture=w.texture,t.texShape=w.texShape,t.isPacked=w.isPacked,t.usage=w.usage,this.disposeIntermediateTensorInfo(m),this.texData.delete(y.dataId),t.values=null,c&&(this.uploadWaitMs+=s.D5U.now()-h)}else{const e=this.acquireTexture(d,o,r,l);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*s.D5U.bytesPerElement(t)}}Qt.nextDataId=0,s.C2$.isBrowser()&&(0,s.jqO)("webgl",(()=>new Qt),2);class en{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class tn{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n);const a=this.outputShape.length;let i="";if(r)if(0===a||1===s.D5U.sizeFromShape(this.outputShape))i="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(i=`\n          ${he(a)} coords = getOutputCoords();\n        `,1===a)i+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=Bt("coords",a);i+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${i}\n\n        setOutput(result);\n      }\n    `}}function nn(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const rn={kernelName:s.iJz,backendName:"webgl",kernelFunc:nn};function sn(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=nn({inputs:{x:r},backend:n}),l=nn({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const an={kernelName:s.Zz9,backendName:"webgl",kernelFunc:sn},on="return (a < 0.) ? b * a : a;",ln="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",un={kernelName:s.J$2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:i}=r,o=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(i,"float32")),l=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(ln,a.shape,o.shape):new en(on,a.shape,o.shape),u=n.runWebGLProgram(l,[a,o],a.dtype);return n.disposeIntermediateTensorInfo(o),u}},cn="return (a < 0.) ? b * a : a;",hn="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",dn={kernelName:s.o0g,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,i=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(hn,r.shape,a.shape):new en(cn,r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}};function pn({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:i})=>{const{x:o}=a,l=i,u=r||o.dtype;if(l.shouldExecuteOnCPU([o])&&null!=n){const e=l.texData.get(o.dataId),t=n(e.values,u);return l.makeTensorInfo(o.shape,u,t)}let c;return c=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new Xt(o.shape,t):new Ht(o.shape,e),l.runWebGLProgram(c,[o],u)}}function fn({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:i}){return({inputs:o,backend:l})=>{const{a:u,b:c}=o,h=l;if(r&&"complex64"===u.dtype){const t=h.texData.get(u.dataId),n=h.texData.get(c.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},i={dataId:r.dataId,dtype:r.dtype,shape:c.shape},o=new en(e,u.shape,c.shape);return h.runWebGLProgram(o,[a,i],(0,s.x8V)(n.dtype,r.dtype))})),i=sn({inputs:{real:r,imag:a},backend:h});return h.disposeIntermediateTensorInfo(r),h.disposeIntermediateTensorInfo(a),i}const d=i||(0,s.x8V)(u.dtype,c.dtype);if(h.shouldExecuteOnCPU([u,c])&&null!=a){const e=h.texData.get(u.dataId),t=h.texData.get(c.dataId),[n,r]=a(u.shape,c.shape,e.values,t.values,d),s=h.makeTensorInfo(r,d);return h.texData.get(s.dataId).values=n,s}let p;return p=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new tn(t,u.shape,c.shape,n):new en(e,u.shape,c.shape),h.runWebGLProgram(p,[u,c],d)}}function gn(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?hn:cn;if("leakyrelu"===e)return t?ln:on;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class mn{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?e[1]:e[2],c=Math.ceil(u/2),h=r?"i * 2, rc.y":"rc.y, i * 2",d=s?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",m="";i&&(g=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,m="result = activation(result);");const b=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let y="rc.x",w="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${g}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${w};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${d});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${b}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class bn{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=s.Wap.assertAndGetBroadcastShape(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const yn="return a * b;";function wn(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,i=s.Wap.upcastType(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new bn("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new bn("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],l=n.runWebGLProgram(s,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=sn({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[s,o]=It(r.shape,a.shape,e.values,t.values,i),l=n.makeTensorInfo(o,i);return n.texData.get(l.dataId).values=s,l}let o;return o=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn(yn,r.shape,a.shape):new en(yn,r.shape,a.shape),n.runWebGLProgram(o,[r,a],i)}const xn={kernelName:s.wYn,backendName:"webgl",kernelFunc:wn};function vn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:i}=r,o=n,l=s.D5U.sizeFromShape(a.shape),u=s.D5U.inferFromImplicitShape(i,l),c=s.D5U.sizeFromShape(u);s.D5U.assert(l===c,(()=>`The new shape (${u}) has ${c} elements and the old shape (${a.shape}) has ${l} elements. The new shape and old shape must have the same number of elements.`));const h=o.texData.get(a.dataId);return!h.isPacked||A(a.shape,u)||null!==h.texture&&A(h.shape,u)?(o.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[E(e.shape),...C(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[E(t),...C(t)],i=new Ut(a,r),o=n.runWebGLProgram(i,[s],e.dtype,null,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}(a,u,o)}const kn={kernelName:s.HZH,backendName:"webgl",kernelFunc:vn};class In{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:i}=e;this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${s.D5U.isInt(e)?e.toPrecision(2):e}, ones);`}let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class Sn{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n      }\n    `,d="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",d="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",d="bvec4");let p="";s%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${d} values = ${d}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function $n(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=s.Wap.computeOptimalWindowSize(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let i=e;for(let s=0;s<a.length;s++){const{inSize:o,windowSize:l,outSize:u}=a[s];let c,h;c="mean"===n?0===s?new In({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new In({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new Sn({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=i,i=r.runWebGLProgram(c,[i],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return i}class En{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=he(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class Cn{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=he(this.rank),s=zt("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Nn(e,t,n){const r=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Cn(e.shape,t):new En(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function Tn(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r;return function(e,t,n,r){const a=t,i=e.shape.length,o=s.D5U.parseAxisParam(a,e.shape);let l=o;const u=s.Wap.getAxesPermutation(l,i),c=null!=u;let h=e;c&&(h=Nn(e,u,r),l=s.Wap.getInnerMostAxes(l.length,i)),s.Wap.assertAxesAreInnerMostDims("sum",l,i);const[d,p]=s.Wap.computeOutAndReduceShapes(h.shape,l);let f=d;n&&(f=s.Wap.expandShapeToKeepDim(d,o));const g=s.D5U.sizeFromShape(p),m=vn({inputs:{x:h},attrs:{shape:[s.D5U.sizeFromShape(e.shape)/g,g]},backend:r}),b=$n(m,(0,s.z4k)(e.dtype),"sum",r),y=vn({inputs:{x:b},attrs:{shape:f},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(b),c&&r.disposeIntermediateTensorInfo(h),y}(a,i,o,n)}const An={kernelName:s.GBy,backendName:"webgl",kernelFunc:Tn};function Rn(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=s.shape[a[e]];let u;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=Lt(e,s.shape,s.dtype,a,l);u=i.makeTensorInfo(l,s.dtype),i.texData.get(u.dataId).values=t}else u=Nn(s,a,i);return u}const Dn={kernelName:s.G3Y,backendName:"webgl",kernelFunc:Rn};function Fn({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:i=null,preluActivationWeights:o=null,leakyreluAlpha:l=0,activation:u=null}){const c=e.shape.length,h=t.shape.length,d=n?e.shape[c-2]:e.shape[c-1],p=r?t.shape[h-1]:t.shape[h-2],f=n?e.shape[c-1]:e.shape[c-2],g=r?t.shape[h-2]:t.shape[h-1],m=e.shape.slice(0,-2),b=t.shape.slice(0,-2),y=s.D5U.sizeFromShape(m),w=s.D5U.sizeFromShape(b),x=y===w||1===y||1===w;s.D5U.assert(c>=2&&h>=2&&x,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${b}).`));const v=(y>w?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([f,g]);s.D5U.assert(d===p,(()=>`Error in matMul: inner shapes (${d}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const k=n?[y,d,f]:[y,f,d],I=r?[w,g,p]:[w,p,g],S=vn({inputs:{x:e},backend:a,attrs:{shape:k}}),$=vn({inputs:{x:t},backend:a,attrs:{shape:I}}),E=[S,$],C=Math.max(y,w),N=n?S.shape[1]:S.shape[2],T=null!=i,A=null!=o,R="leakyrelu"===u,D=null!=u?gn(u,!0):null;let F;if((1===f||1===g)&&N>1e3&&!1===(T||A||R||null!=D)){let e=S,t=$;n&&(e=Rn({inputs:{x:S},backend:a,attrs:{perm:[0,2,1]}}),E.push(e)),r&&(t=Rn({inputs:{x:$},backend:a,attrs:{perm:[0,2,1]}}),E.push(t));const s=1===g;let i=e;1!==g&&(i=vn({inputs:{x:e},backend:a,attrs:{shape:[C,N,1]}}),E.push(i));const o=1===g?2:1;let l=t;s&&(l=vn({inputs:{x:t},backend:a,attrs:{shape:[C,1,N]}}),E.push(l));const u=wn({inputs:{a:i,b:l},backend:a});F=Tn({inputs:{x:u},backend:a,attrs:{axis:o,keepDims:!0}}),E.push(u)}else{const u=(0,s.x8V)(e.dtype,t.dtype),c=new mn(k,I,[C,f,g],n,r,T,D,A,R),h=[S,$];if(null!=i&&h.push(i),A&&h.push(o),R){const e=a.makeTensorInfo([],"float32",s.D5U.createScalarValue(l,"float32"));h.push(e),E.push(e)}F=a.runWebGLProgram(c,h,u)}const _=vn({inputs:{x:F},backend:a,attrs:{shape:v}});E.push(F);for(const e of E)a.disposeIntermediateTensorInfo(e);return _}const _n={kernelName:s.usg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=r;return Fn({a:s,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},On="return abs(x);",Ln={kernelName:s.SYM,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=Nt(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(r.shape,On):new Ht(r.shape,On),n.runWebGLProgram(a,[r],r.dtype)}},Mn=pn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),zn={kernelName:s.VGw,backendName:"webgl",kernelFunc:Mn},Bn=pn({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),Pn={kernelName:s.SpW,backendName:"webgl",kernelFunc:Bn},Un="return a + b;",Wn=fn({opSnippet:Un,packedOpSnippet:Un,supportsComplex:!0,cpuKernelImpl:ot}),Vn={kernelName:s.mm_,backendName:"webgl",kernelFunc:Wn};class Gn{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class jn{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const Hn={kernelName:s.Xze,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return nn({inputs:{x:a[0]},backend:r});if(a.length>(0,s.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const i=a.map((e=>e.dtype)).reduce(((e,t)=>(0,s.x8V)(e,t))),o=a.map((e=>e.shape)),l=(0,s.OBj)().getBool("WEBGL_PACK")?new jn(a[0].shape,o):new Gn(a[0].shape,o);return r.runWebGLProgram(l,a,i)}},Kn={kernelName:s.oT6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.D5U.parseAxisParam(i,a.shape);let c=u;const h=s.Wap.getAxesPermutation(c,l);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=s.Wap.getInnerMostAxes(c.length,l)),s.Wap.assertAxesAreInnerMostDims("all",c,l);const[p,f]=s.Wap.computeOutAndReduceShapes(d.shape,c),g=vn({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),m=$n(g,g.dtype,"all",n);let b;return b=vn(o?{inputs:{x:m},backend:n,attrs:{shape:s.Wap.expandShapeToKeepDim(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}},qn={kernelName:s.IKK,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.D5U.parseAxisParam(i,a.shape);let c=u;const h=s.Wap.getAxesPermutation(c,l);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=s.Wap.getInnerMostAxes(c.length,l)),s.Wap.assertAxesAreInnerMostDims("any",c,l);const[p,f]=s.Wap.computeOutAndReduceShapes(d.shape,c),g=vn({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),m=$n(g,g.dtype,"any",n);let b;return b=vn(o?{inputs:{x:m},backend:n,attrs:{shape:s.Wap.expandShapeToKeepDim(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}};class Xn{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class Yn{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,s.D5U.assert(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const a=e[e.length-1],i=Math.ceil(a/t);this.outputShape=e.slice(0,-1),i>1&&this.outputShape.push(i),r||this.variableNames.push("bestIndicesA");const o=this.outputShape,l=o.length,u=he(l),c=Bt("coords",l);let h,d;if(1===i){d=l+1;const e=he(d);h=`\n        ${e} sourceLocR = ${e}(${c.join()}, 0);\n        ++${c[l-1]};\n        ${e} sourceLocG = ${e}(${c.join()}, 0);\n        ++${c[l-2]};\n        ${e} sourceLocA = ${e}(${c.join()}, 0);\n        --${c[l-1]};\n        ${e} sourceLocB = ${e}(${c.join()}, 0);\n        --${c[l-2]};`}else d=l,h=`\n        ${u} sourceLocR = coords;\n        ++${c[l-1]};\n        ${u} sourceLocG = coords;\n        ++${c[l-2]};\n        ${u} sourceLocA = coords;\n        --${c[l-1]};\n        ${u} sourceLocB = coords;\n        --${c[l-2]};`;const p=["x","y","z","w","u","v"].slice(0,d),f="."+p[d-1],g=p.map((e=>"int "+e)),m=Bt("sourceLocR",d-1).concat("inIdx.r"),b=Bt("sourceLocG",d-1).concat("inIdx.g"),y=Bt("sourceLocB",d-1).concat("inIdx.b"),w=Bt("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",v=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${b.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${w.join()})));`,k=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${b.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${w.join()}) : 0.)`,I=r?"":`\n      float getBestIndicesAChannel(${g.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${g.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${I}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${c[l-1]} < ${o[l-1]-1};\n        bool hasNextRow = ${c[l-2]} < ${o[l-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${k};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${v}\n          vec4 candidate = ${k};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function Jn(e,t,n,r=null){let a=t.shape[0],i=t.shape[1];null!=r&&(a=r.shape[0],i=r.shape[1]);const o=s.Wap.computeOptimalWindowSize(i),l={windowSize:o,inSize:i,batchSize:a,outSize:Math.ceil(i/o)},u=new Xn(l,n,null==r),c=[t];null!=r&&c.push(r);const h=e.runWebGLProgram(u,c,"int32");if(1===h.shape[1])return h;const d=Jn(e,t,n,h);return e.disposeIntermediateTensorInfo(h),d}function Zn(e,t,n,r=null){const a=null!=r?r.shape:t.shape,i=a[a.length-1],o=s.Wap.computeOptimalWindowSize(i),l=new Yn(a,o,n,null==r),u=null==r?[t]:[t,r],c=e.runWebGLProgram(l,u,"int32");if(c.shape.length===t.shape.length){const r=Zn(e,t,n,c);return e.disposeIntermediateTensorInfo(c),r}return c}function Qn(e,t,n,r){const a=[n];if(s.Wap.assertAxesAreInnerMostDims("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!(0,s.OBj)().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],[i,o]=s.Wap.computeOutAndReduceShapes(t.shape,a),l=s.D5U.sizeFromShape(o),u=vn({inputs:{x:t},backend:e,attrs:{shape:[-1,l]}});n.push(u);const c=Jn(e,u,r);n.push(c);const h=vn({inputs:{x:c},backend:e,attrs:{shape:i}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),h}return Zn(e,t,r)}const er={kernelName:s.sJF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let o=s.D5U.parseAxisParam(i,a.shape);const l=s.Wap.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=Rn({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.Wap.getInnerMostAxes(o.length,u.shape.length)),s.Wap.assertAxesAreInnerMostDims("argMax",[o[0]],u.shape.length);const h=Qn(n,u,o[0],"max");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},tr={kernelName:s.aJk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i}=r;let o=s.D5U.parseAxisParam(i,a.shape);const l=s.Wap.getAxesPermutation(o,a.shape.length);let u=a;const c=[];null!=l&&(u=Rn({inputs:{x:a},backend:n,attrs:{perm:l}}),c.push(u),o=s.Wap.getInnerMostAxes(o.length,u.shape.length)),s.Wap.assertAxesAreInnerMostDims("argMin",[o[0]],u.shape.length);const h=Qn(n,u,o[0],"min");return c.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},nr=pn({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),rr={kernelName:s.M2y,backendName:"webgl",kernelFunc:nr},sr=pn({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),ar={kernelName:s.qw7,backendName:"webgl",kernelFunc:sr},ir=pn({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),or={kernelName:s.jMg,backendName:"webgl",kernelFunc:ir},lr=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),ur={kernelName:s.QCc,backendName:"webgl",kernelFunc:lr},cr=pn({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),hr={kernelName:s.Oyi,backendName:"webgl",kernelFunc:cr};class dr{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,d=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,m=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let b="0.0";if(f||(b="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${d}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?g:m:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let y=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(y="avgValue / count");const w=4*Math.floor(a/4),x=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${d}, ${p});\n      const float initializationValue = ${b};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${b});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${w}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${w};\n          if (${1===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===x}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${y});\n      }\n    `}}class pr{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,d=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,g=e.padInfo.front,m=e.padInfo.top,b=e.padInfo.left;this.outputShape=e.outShape;const y="avg"===t;let w="0.0";if(y||(w="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${g}, ${m}, ${b});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${d};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let x=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(x="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${y}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${g}, ${m}, ${b});\n      const float initializationValue = ${w};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${w});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${d};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${x});\n        }\n      }\n    `}}const fr={kernelName:s.JhU,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;L(a,"avgPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.D5U.assert(s.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.D5U.arraysEqual(c.inShape,c.outShape))return nn({inputs:{x:a},backend:n});const h=new dr(c,"avg",!1);return n.runWebGLProgram(h,[a],"float32")}},gr={kernelName:s._k9,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u,dataFormat:c}=r,h=s.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],l,u,c),d=new pr(h,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class mr{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class br{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,d=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=h-1-e.padInfo.top,g=d-1-e.padInfo.left,m=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${g});\n      const float avgMultiplier = float(${m});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${d};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const yr={kernelName:s.IMb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=s.Wap.computePool3DInfo(o.shape,l,u,[1,1,1],c,h),p=new br(d);return n.runWebGLProgram(p,[a],o.dtype)}},wr={kernelName:s.ROF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i;L([a,i],"avgPoolGrad");const{filterSize:l,strides:u,pad:c}=r,h=s.Wap.computePool2DInfo(o.shape,l,u,1,c),d=new mr(h);return n.runWebGLProgram(d,[a],o.dtype)}},xr={kernelName:s.XLW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Fn({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class vr{constructor(e,t,n,r,a,i){this.outputShape=[],this.variableNames=["x","mean","variance"],s.Wap.assertAndGetBroadcastShape(e,t),s.Wap.assertAndGetBroadcastShape(e,n);let o="0.0";null!=r&&(s.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="1.0";null!=a&&(s.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${o};\n        float scale = ${l};\n        float inv = scale * inversesqrt(variance + float(${i}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class kr{constructor(e,t,n,r,a,i){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],s.Wap.assertAndGetBroadcastShape(e,t),s.Wap.assertAndGetBroadcastShape(e,n);let o="vec4(0.0)";null!=r&&(s.Wap.assertAndGetBroadcastShape(e,r),this.variableNames.push("offset"),o="getOffsetAtOutCoords()");let l="vec4(1.0)";null!=a&&(s.Wap.assertAndGetBroadcastShape(e,a),this.variableNames.push("scale"),l="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${o};\n        vec4 scale = ${l};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${i}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const Ir={kernelName:s.sHE,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:i,offset:o,scale:l}=e;s.D5U.assert(a.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.D5U.assert(null==o||a.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.D5U.assert(null==l||a.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const c=[r,a,i];let h=null;null!=o&&(h=o.shape,c.push(o));let d=null;null!=l&&(d=l.shape,c.push(l));const p=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new kr(r.shape,a.shape,i.shape,h,d,u):new vr(r.shape,a.shape,i.shape,h,d,u);return t.runWebGLProgram(p,c,c[0].dtype)}};class Sr{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=he(this.rank),n=`uniform int start[${this.rank}];`,r=function(e){if(1===e)return"sourceLoc";if(e<=6)return $r.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${$r[t]} = start[${t}] + coords.${$r[t]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${s}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}const $r=["x","y","z","w","u","v"];class Er{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length;const t=he(this.rank),n=Bt("coords",this.rank),r=Bt("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){if(e.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${e.length})`);return(t,n)=>{null==this.startLoc&&(this.startLoc=t.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||t.gl.uniform1iv(this.startLoc,e)}}}function Cr(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,size:o}=r,[l,u]=s.kuN.parseSliceParams(a,i,o);if(s.kuN.assertParamsValid(a,l,u),0===s.D5U.sizeFromShape(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=Tt(e.values,l,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:c}=n.texData.get(a.dataId),h=s.kuN.isSliceContinous(a.shape,l,u);if(c||!h){const e=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Er(u):new Sr(u),t=e.getCustomSetupFunc(l);return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),i=r.makeTensorInfo(n,e.dtype),o=r.texData.get(i.dataId);Object.assign(o,a),o.refCount=1,o.shape=n,o.dtype=e.dtype;let l=s.kuN.computeFlatOffset(t,s.D5U.computeStrides(e.shape));a.slice&&(l+=a.slice.flatOffset),o.slice={flatOffset:l,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(o.slice.origDataId)||1;return r.dataRefCount.set(o.slice.origDataId,u+1),i}(a,l,u,n)}const Nr={kernelName:s.p2w,backendName:"webgl",kernelFunc:Cr},Tr={kernelName:s.zws,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,crops:o}=r;s.D5U.assert(a.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=s.Wap.getReshaped(a.shape,i,l),c=s.Wap.getPermuted(u.length,i.length),h=s.Wap.getReshapedPermuted(a.shape,i,l),d=s.Wap.getSliceBeginCoords(o,i.length),p=s.Wap.getSliceSize(h,o,i.length),f=[],g=vn({inputs:{x:a},backend:n,attrs:{shape:u}}),m=Rn({inputs:{x:g},backend:n,attrs:{perm:c}}),b=vn({inputs:{x:m},backend:n,attrs:{shape:h}}),y=Cr({inputs:{x:b},backend:n,attrs:{begin:d,size:p}});return f.push(g),f.push(m),f.push(b),f.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Ar={kernelName:s.zvY,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),l=n.readSync(a.dataId),u=lt(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},Rr=fn({opSnippet:"return float(a != b);",dtype:"bool"}),Dr={kernelName:s.yQU,backendName:"webgl",kernelFunc:Rr};function Fr(e){const{inputs:t,backend:n}=e,{input:r}=t;return nn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const _r={kernelName:s.xJR,backendName:"webgl",kernelFunc:Fr},Or={kernelName:s.RFZ,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:i}=n,{dtype:o}=a;if("complex64"===o){if("complex64"===i.dtype)return nn({inputs:{x:i},backend:r});const t=s.lls(i.shape),n=e({inputs:{x:i},backend:r,attrs:{dtype:"float32"}}),a=sn({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===i.dtype){const t=Fr({inputs:{input:i},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:o}});return r.disposeIntermediateTensorInfo(t),n}if(!s.D5U.hasEncodingLoss(i.dtype,o)){const e=nn({inputs:{x:i},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:o}}if("int32"===o)return function(e,t){const n=new Ht(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(i,r);if("bool"===o){const e=r.makeTensorInfo([],"bool",s.D5U.getTypedArrayFromDType("bool",1)),t=Rr({inputs:{a:i,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${i.dtype} to ${o}`)}},Lr="return ceil(x);",Mr=pn({opSnippet:Lr,packedOpSnippet:Lr,cpuKernelImpl:ct}),zr={kernelName:s.gJX,backendName:"webgl",kernelFunc:Mr};class Br{constructor(e){this.variableNames=["A"],this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}class Pr{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(e,t){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,e),n.gl.uniform1f(this.maxLoc,t)}}}const Ur={kernelName:s.xnO,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:i,clipValueMax:o}=r;let l;l=(0,s.OBj)().getBool("WEBGL_PACK_CLIP")?new Pr(a.shape):new Br(a.shape);const u=l.getCustomSetupFunc(i,o);return n.runWebGLProgram(l,[a],a.dtype,u)}};class Wr{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function Vr(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const Gr={kernelName:s.yj2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new Wr(r.shape),i=[Vr(r,s.complexTensorInfos.real),Vr(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class jr{constructor(e){this.outputShape=[],this.outputShape=s.Wap.computeOutShape(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class Hr{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=s.Wap.computeOutShape(e,t);const n=this.outputShape,r=n.length,a=he(r),i=Bt("coords",r),o=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const l=new Array(e.length-1);l[0]=e[0][t];for(let n=1;n<l.length;n++)l[n]=l[n-1]+e[n][t];const u=o[t],c=o.slice(-2),h=o.join();let d=`if (${u} < ${l[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${c.join()}));\n        }`;for(let e=1;e<l.length;e++){const t=l[e-1];d+=`\n        if (${u} < ${l[e]}  && ${u} >= ${l[e-1]}) {\n          return getChannel(\n            getT${e}(${Kr(o,u,t)}),\n            vec2(${Kr(c,u,t)}));\n        }`}const p=l.length,f=l[l.length-1];d+=`\n        return getChannel(\n          getT${p}(${Kr(o,u,f)}),\n          vec2(${Kr(c,u,f)}));`,this.userCode=`\n      float getValue(${o.map((e=>"int "+e))}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${i}), 0., 0., 0.);\n\n        ${i[r-1]} = ${i[r-1]} + 1;\n        if (${i[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${i});\n        }\n\n        ${i[r-2]} = ${i[r-2]} + 1;\n        if (${i[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${i});\n        }\n\n        ${i[r-1]} = ${i[r-1]} - 1;\n        if (${i[r-2]} < ${n[r-2]} &&\n            ${i[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${i});\n        }\n        setOutput(result);\n      }\n    `}}function Kr(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function qr(e){const{inputs:t,backend:n}=e,{input:r}=t;return nn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const Xr={kernelName:s.J_u,backendName:"webgl",kernelFunc:qr};function Yr(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>Fr({inputs:{input:e},backend:n}))),s=e.map((e=>qr({inputs:{input:e},backend:n}))),a=Yr(r,t,n),i=Yr(s,t,n),o=sn({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map((e=>{const r=s.D5U.sizeFromShape(e.shape.slice(t));return vn({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),i=a.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),o=s.Wap.computeOutShape(a.map((e=>e.shape)),1),l=1===a[0].shape[0],u=ht(i,o,r,l),c=s.Wap.computeOutShape(e.map((e=>e.shape)),t),h=n.makeTensorInfo(c,r,u);return a.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}if(e.length>(0,s.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=Yr(e.slice(0,r),t,n),a=Yr(e.slice(r),t,n),i=Yr([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if((0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new Hr(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:i,outShape:o}=function(e,t,n){const r=s.Wap.computeOutShape(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>vn({inputs:{x:e},attrs:{shape:[-1,s.D5U.sizeFromShape(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),l=new jr(i.map((e=>e.shape))),u=n.runWebGLProgram(l,i,r);i.forEach((e=>n.disposeIntermediateTensorInfo(e)));const c=vn({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}function Jr(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,i=s.D5U.parseAxisParam(a,t[0].shape)[0],o=s.Wap.computeOutShape(t.map((e=>e.shape)),i);if(0===s.D5U.sizeFromShape(o))return n.makeTensorInfo(o,t[0].dtype,[]);const l=t.filter((e=>s.D5U.sizeFromShape(e.shape)>0));if(1===l.length)return nn({inputs:{x:l[0]},backend:n});const u=l.map((e=>e.shape));return s.Wap.assertParamsConsistent(u,i),Yr(l,i,n)}const Zr={kernelName:s.Eh3,backendName:"webgl",kernelFunc:Jr};class Qr{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,g="channelsLast"===e.dataFormat,m=g?1:2,b=g?2:3,y=g?3:1;let w="",x="";n&&(w=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${b}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${g}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${g}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${g}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${g}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}class es{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,d=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ts{constructor(e,t,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e;const{filterWidth:r,inChannels:s,strideWidth:a,strideHeight:i,padInfo:o,outWidth:l,dilationWidth:u,dilationHeight:c,dataFormat:h}=n,{left:d,top:p}=o,f=s*r,g=z(),m="channelsLast"===h,b=m?0:1,y=m?1:2;let w="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)w+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${e[1]} && pos < ${e[0]}) {\n            offsetY = int(blockIndex / (${l})) * ${i} - ${p};\n            d0 = offsetY + ${c} * (pos / ${f});\n\n            if(d0 < ${t[b]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${l}.) * ${a}. - ${d}.);\n              d1 = offsetX + ${u} * (int(mod(float(pos), ${f}.) / ${s}.));\n\n              if(d1 < ${t[y]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${s}.));\n\n                if (${m}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${w}\n\n        ${g.output} = result;\n      }\n    `}}function ns({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape,c=r.texData.get(e.dataId),h=n.inChannels,d=u[0]*u[1]*u[2],p=n.outChannels,f="channelsLast"===n.dataFormat;let g;const m=[],b=(1===d||1===p)&&h>1e3,y=u[2]%2!=0&&!!c.isPacked;if(!b&&(0,s.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&y){const h=f?u[0]*u[1]*(u[2]+1):u[0]*u[2]*(u[3]+1),d={dataId:e.dataId,shape:[1,h,n.inChannels],dtype:e.dtype},p=c.shape;c.shape=c.shape.slice(),c.shape[c.shape.length-2]++,s.D5U.assert(A(c.shape,d.shape),(()=>`packed reshape ${c.shape} to ${d.shape} isn't free`));const b=vn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(b);const y=Fn({a:d,b,backend:r,transposeA:!1,transposeB:!1,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o}),w=r.texData.get(y.dataId);s.D5U.assert(w.isPacked,(()=>"batchMatMul result is expected to be packed")),c.shape=p,w.shape=n.outShape,g=nn({inputs:{x:y},backend:r}),g.shape=n.outShape,m.push(y)}else{const s=vn({inputs:{x:e},backend:r,attrs:{shape:[1,f?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=vn({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Fn({a:s,b:c,transposeA:!1,transposeB:!1,backend:r,bias:a,activation:l,preluActivationWeights:i,leakyreluAlpha:o});g=vn({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(s),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return g}function rs({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const{filterWidth:u,filterHeight:c,inChannels:h,outWidth:d,outHeight:p,dataFormat:f}=n,g="channelsLast"===f,m=u*c*h,b=p*d,y=[m,b],w=[],x=vn({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),v=vn({inputs:{x:t},backend:r,attrs:{shape:[1,m,s.D5U.sizeFromShape(t.shape)/m]}});w.push(x),w.push(v);const k=new ts(y,x.shape,n),I=r.runWebGLProgram(k,[x],"float32"),S=vn({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});w.push(I),w.push(S);const $=null!=a,E=null!=i,C="leakyrelu"===l,N=l?gn(l,!0):null,T=new mn(S.shape,v.shape,[1,b,n.outChannels],!0,!1,$,N,E,C),A=[S,v];if(a&&A.push(a),E&&A.push(i),C){const e=r.makeTensorInfo([],"float32",s.D5U.createScalarValue(o,"float32"));A.push(e),w.push(e)}const R=r.runWebGLProgram(T,A,"float32"),D=vn({inputs:{x:R},backend:r,attrs:{shape:g?[1,p,d,n.outChannels]:[1,n.outChannels,p,d]}});w.push(R);for(const e of w)r.disposeIntermediateTensorInfo(e);return D}const ss={kernelName:s.mhS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dataFormat:u,dilations:c,dimRoundingMode:h}=r,d=s.Wap.convertConv2DDataFormat(u),p=s.Wap.computeConv2DInfo(a.shape,i.shape,o,c,l,h,!1,d);let f;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])f=rs({x:a,filter:i,convInfo:p,backend:n});else{const e=new Qr(p);f=n.runWebGLProgram(e,[a,i],"float32")}else f=ns({x:a,filter:i,convInfo:p,backend:n});const g=vn({inputs:{x:f},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(f),g}};class as{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class is{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class os{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ls{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const us={kernelName:s.wUP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,dataFormat:u,dimRoundingMode:c,filterShape:h}=r,d=s.Wap.convertConv2DDataFormat(u),p=s.Wap.computeConv2DInfo(a.shape,h,o,1,l,c,!1,d),f=new as(p);return n.runWebGLProgram(f,[a,i],"float32")}},cs={kernelName:s.wm,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{inputShape:o,strides:l,pad:u,dataFormat:c,dimRoundingMode:h}=r,d=s.Wap.convertConv2DDataFormat(c),p=s.Wap.computeConv2DInfo(o,i.shape,l,1,u,h,!1,d),f=new is(p);return n.runWebGLProgram(f,[a,i],"float32")}},hs={kernelName:s.x12,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=s.Wap.computeConv3DInfo(a.shape,i.shape,o,u,l),h=new es(c);return n.runWebGLProgram(h,[a,i],"float32")}},ds={kernelName:s.o2y,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,pad:l,filterShape:u}=r,c=s.Wap.computeConv3DInfo(a.shape,u,o,1,l),h=new os(c);return n.runWebGLProgram(h,[a,i],"float32")}},ps={kernelName:s.ik2,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{pad:o,strides:l,inputShape:u}=r,c=s.Wap.computeConv3DInfo(u,i.shape,l,1,o),h=new ls(c);return n.runWebGLProgram(h,[a,i],"float32")}},fs=pn({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),gs={kernelName:s.mc4,backendName:"webgl",kernelFunc:fs},ms=pn({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),bs={kernelName:s.TR1,backendName:"webgl",kernelFunc:ms};class ys{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const d="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[g,m,b]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[y,w,x]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${g});\n      const float width_ratio = float(${y});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${m};\n        float width_scale = ${w};\n\n        float in_y = ${b};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${x};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${d} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const ws={kernelName:s.VcC,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=r,c=new ys(s.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[s,a,i],"float32")}};class xs{constructor(e,t,n){this.variableNames=["x"],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${vs(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${he(r)} coords = getOutputCoords();\n        int end = ${ks(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${ks(r,"coords")} = idx;\n          val += getX(${vs(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.index&&(this.index=t.getUniformLocation(n,"index")),t.gl.uniform1f(this.index,e)}}}function vs(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function ks(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const Is={kernelName:s.iHb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,exclusive:o,reverse:l}=r,u=a.shape.length,c=s.Wap.getAxesPermutation([i],u);let h=a;null!=c&&(h=Rn({inputs:{x:a},backend:n,attrs:{perm:c}}));const d=s.Wap.getInnerMostAxes(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${i}`);const p=h.shape[d];let f=nn({inputs:{x:h},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new xs(h.shape,!1,l),r=t.getCustomSetupFunc(e),s=f;f=n.runWebGLProgram(t,[f],f.dtype,r),n.disposeIntermediateTensorInfo(s)}if(o){const e=new xs(h.shape,o,l),t=f;f=n.runWebGLProgram(e,[f],f.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=c){const e=Rn({inputs:{x:f},backend:n,attrs:{perm:s.Wap.getUndoAxesPermutation(c)}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(h),e}return f}},Ss={kernelName:s.QRR,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=lt(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=ut(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class $s{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const Es={kernelName:s.T0n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:i,dataFormat:o}=r;s.D5U.assert(i>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${i}`));const l=a.shape[0],u="NHWC"===o?a.shape[1]:a.shape[2],c="NHWC"===o?a.shape[2]:a.shape[3],h="NHWC"===o?a.shape[3]:a.shape[1],d=u*i,p=c*i,f=h/(i*i),g=new $s("NHWC"===o?[l,d,p,f]:[l,f,d,p],i,o);return n.runWebGLProgram(g,[a],a.dtype)}};class Cs{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.inHeight,i=e.inWidth,o=e.padInfo.top,l=e.padInfo.left,u=e.strideHeight,c=e.strideWidth,h=e.dilationHeight,d=e.dilationWidth,p=e.filterHeight,f=e.filterWidth,g=e.outChannels/e.inChannels;let m="",b="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,b="result = activation(result);");const y=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${o}, ${l});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${g};\n        int q = d2 - d1 * ${g};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${h};\n\n          if (xR < 0 || xR >= ${a}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${f}; wC++) {\n            int xC = xCCorner + wC * ${d};\n\n            if (xC < 0 || xC >= ${i}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${b}\n        setOutput(result);\n      }\n    `}}class Ns{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.outShape;const i=e.outChannels/e.inChannels,o=e.inHeight,l=e.inWidth,u=e.padInfo.top,c=e.padInfo.left,h=e.strideHeight,d=e.strideWidth,p=e.dilationHeight,f=e.dilationWidth,g=e.filterHeight,m=e.filterWidth,b=m;let y="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<m;e++)y+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xC${e};`;for(let e=0;e<g;e++){for(let e=0;e<m;e++)y+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xC${e} = vec4(0.0);`;y+=`\n        xR = xRCorner + ${e*p};\n        if (xR >=0 && xR < ${o}) {\n      `;for(let t=0;t<(b+1)/2;t++){const n=2*t,r=n*f;if(y+=`\n          xC = xCCorner + ${r};\n          `,1===d){if(n<m&&(c%2==1?(y+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n              `,y+=1===f&&r>0?`\n                xC${n} = vec4(xTexelC${r-2}.zw, xTexelC${r}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < ${l}) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${n} = vec4(previous.zw, xTexelC${r}.xy);\n                  } else {\n                    xC${n} = vec4(0.0, 0.0, xTexelC${r}.xy);\n                  }\n                  `):y+=`\n                if (xC >= 0 && xC < ${l} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xC${n} = xTexelC${r};\n                `,r+1<m)){const e=c%2==0?s.D5U.nearestLargerEven(f):f;f%2==0&&c%2==1||f%2!=0&&c%2!=1?(y+=`\n                  xCOffset = xC + ${c%2} + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${r+2}Ready == 0) {\n                    xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= ${l}) {\n                      xTexelC${r+2}.zw = vec2(0.0);\n                    }\n                    xTexelC${r+2}Ready = 1;\n                  }\n                  `,f>1&&(y+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${r}Ready == 0) {\n                      xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${r}Ready = 1;\n                    }\n                    `),y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.xy);\n                  `):y+=1===e?`\n                    xC${n+1} = xTexelC${r};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < ${l} && xTexelC${r+2}Ready == 0) {\n                      xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= ${l}) {\n                        xTexelC${r+2}.zw = vec2(0.0);\n                      }\n                      xTexelC${r+2}Ready = 1;\n                    }\n\n                    xC${n+1} = xTexelC${r+2};\n                    `}}else r<m&&(c%2==1?(y+=`\n                xCOffset = xC + 1 - ${d};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${l} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= ${l}) {\n                    xTexelC${r+2}.zw = vec2(0.0);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n              `,r+1<m&&(y+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + ${d};\n                  if(xCOffset >= 0 && xCOffset < ${l}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${n+1} = vec4(xTexelC${r+2}.xy, final.xy);\n                `)):(y+=`\n                if(xC >= 0 && xC < ${l} && xTexelC${r}Ready == 0) {\n                  xTexelC${r} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= ${l}) {\n                    xTexelC${r}.zw = vec2(0.0);\n                  }\n                  xTexelC${r}Ready = 1;\n                }\n\n                xCOffset = xC + ${d};\n                if(xCOffset >= 0 && xCOffset < ${l} && xTexelC${r+2}Ready == 0) {\n                  xTexelC${r+2} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= ${l}) {\n                    xTexelC${r+2}.zw = vec2(0.);\n                  }\n                  xTexelC${r+2}Ready = 1;\n                }\n\n                xC${n} = vec4(\n                  xTexelC${r}.xy, xTexelC${r+2}.xy);\n              `,r+1<m&&(y+=`\n                  xC${n+1} = vec4(xTexelC${r}.zw, xTexelC${r+2}.zw);\n                `)));n<m&&(y+=`\n            wTexel = getW(${e}, ${r}, d1, q);\n            dotProd += xC${n} * vec4(wTexel.xz, wTexel.xz);\n          `,r+1<m&&(y+=`\n              wTexel = getW(${e}, ${r+1}, d1, q);\n              dotProd += xC${n+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}y+="\n        }\n      "}let w="",x="";n&&(w=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,x="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${w}\n\n      const ivec2 strides = ivec2(${h}, ${d});\n      const ivec2 pads = ivec2(${u}, ${c});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${i};\n        int q = d2 - d1 * ${i};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${y}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${v}\n        ${x}\n        setOutput(result);\n      }\n    `}}const Ts={kernelName:s.cie,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u,dimRoundingMode:c}=r;let h=u;null==h&&(h=[1,1]),s.D5U.assert(s.Wap.eitherStridesOrDilationsAreOne(o,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${o} and dilations '${h}'`));const d=s.Wap.computeConv2DInfo(a.shape,i.shape,o,h,l,c,!0);let p;return p=(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels==1?new Ns(d):new Cs(d),n.runWebGLProgram(p,[a,i],"float32")}};class As{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Rs{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ds={kernelName:s.sL$,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,filterShape:h}=r,d=s.Wap.computeConv2DInfo(a.shape,h,o,l,u,c,!0),p=new As(d);return n.runWebGLProgram(p,[a,i],"float32")}},Fs={kernelName:s.y7R,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:i}=t,{strides:o,dilations:l,pad:u,dimRoundingMode:c,inputShape:h}=r,d=s.Wap.computeConv2DInfo(h,i.shape,o,l,u,c,!0),p=new Rs(d);return n.runWebGLProgram(p,[a,i],"float32")}};class _s{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const Os={kernelName:s.$w,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],i=s.D5U.sizeFromShape(r.shape),o=vn({inputs:{x:r},backend:n,attrs:{shape:[i]}}),l=new _s(i),u=n.runWebGLProgram(l,[o],o.dtype),c=vn({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),c}};class Ls{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const Ms={kernelName:s.p4S,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i}=t,{strides:o,pad:l,dilations:u}=r,c=s.Wap.computeDilation2DInfo(a.shape,i.shape,o,l,"NHWC",u);let h;const d=new Ls(c);h=n.runWebGLProgram(d,[a,i],"float32");const p=vn({inputs:{x:h},backend:n,attrs:{shape:c.outShape}});return n.disposeIntermediateTensorInfo(h),p}},zs={kernelName:s.$g6,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,i=t,{allDims:o,summedDims:l,idDims:u}=s.Wap.decodeEinsumEquation(a,i.length);s.Wap.checkEinsumDimSizes(o.length,u,i);const{path:c,steps:h}=s.Wap.getEinsumComputePath(l,u),d=h.length;let p=null,f=o.length;const g=[];for(let e=0;e<d;++e){for(const t of h[e]){const{permutationIndices:e,expandDims:r}=s.Wap.getEinsumPermutation(f,u[t]);let a;s.Wap.isIdentityPermutation(e)?a=i[t]:(a=Rn({inputs:{x:i[t]},backend:n,attrs:{perm:e}}),g.push(a));const o=a.shape.slice();for(let e=0;e<r.length;++e)o.splice(r[e],0,1);s.D5U.arraysEqual(a.shape,o)||(a=vn({inputs:{x:a},backend:n,attrs:{shape:o}}),g.push(a)),null===p?p=a:(p=wn({inputs:{a,b:p},backend:n}),g.push(p))}e<d-1&&(c[e]>=0&&(p=Tn({inputs:{x:p},backend:n,attrs:{axis:c[e]-(o.length-f),keepDims:!1}}),g.push(p)),f--)}for(const e of g)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},Bs=pn({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),Ps={kernelName:s.SX0,backendName:"webgl",kernelFunc:Bs},Us={kernelName:s.HEU,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,i=(0,s.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new tn("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new en("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(i,[r,a],r.dtype)}},Ws=fn({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool"}),Vs={kernelName:s.hdR,backendName:"webgl",kernelFunc:Ws},Gs=pn({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${s.Wap.ERF_P};\n  float a1 = ${s.Wap.ERF_A1};\n  float a2 = ${s.Wap.ERF_A2};\n  float a3 = ${s.Wap.ERF_A3};\n  float a4 = ${s.Wap.ERF_A4};\n  float a5 = ${s.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),js={kernelName:s.Omj,backendName:"webgl",kernelFunc:Gs},Hs="return exp(x);",Ks=pn({opSnippet:Hs,packedOpSnippet:Hs,cpuKernelImpl:dt}),qs={kernelName:s.NEP,backendName:"webgl",kernelFunc:Ks};function Xs(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:i}=t,o=i.shape.length,l=i.shape.slice();let u=a;return a<0&&(s.D5U.assert(-(o+1)<=a,(()=>`Axis must be in the interval [${-(o+1)}, ${o}]`)),u=o+a+1),l.splice(u,0,1),vn({inputs:{x:i},backend:r,attrs:{shape:l}})}const Ys={kernelName:s.YFo,backendName:"webgl",kernelFunc:Xs},Js="return exp(x) - 1.0;",Zs=pn({opSnippet:Js,packedOpSnippet:Js,cpuKernelImpl:pt}),Qs={kernelName:s.Y0y,backendName:"webgl",kernelFunc:Zs};class ea{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function ta(e,t,n){const r=n.texData.get(e.dataId),a=s.D5U.sizeFromShape(e.shape),i=e.shape[e.shape.length-1],o=vn({inputs:{x:e},backend:n,attrs:{shape:[a/i,i]}}),l=o.shape,u=new ea("real",l,t),c=new ea("imag",l,t),h=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:l},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:l}],d=n.runWebGLProgram(u,h,"float32"),p=n.runWebGLProgram(c,h,"float32"),f=sn({inputs:{real:d,imag:p},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p);const g=vn({inputs:{x:f},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(f),g}const na={kernelName:s.vwp,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ta(r,!1,n)}};class ra{constructor(e,t){this.outputShape=[],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}function sa(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:i}=n;if(i=i||s.D5U.inferDtype(a),"string"===i){const e=s.D5U.getArrayFromDType(i,s.D5U.sizeFromShape(r));return e.fill(a),t.makeTensorInfo(r,i,e)}{const e=new ra(r,a),n=e.getCustomSetupFunc(a);return t.runWebGLProgram(e,[],i,n)}}const aa={kernelName:s.deh,backendName:"webgl",kernelFunc:sa};class ia{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const oa={kernelName:s.Uyb,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new ia(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},la="return floor(x);",ua=pn({opSnippet:la,packedOpSnippet:la,cpuKernelImpl:ft}),ca={kernelName:s.OR,backendName:"webgl",kernelFunc:ua},ha=fn({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),da={kernelName:s.jeX,backendName:"webgl",kernelFunc:ha};class pa{constructor(e){this.variableNames=["A"];const t=z(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class fa{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=z(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const ga={kernelName:s.eBW,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:i}=r,o="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,l="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[c,h]=o?[a.videoWidth,a.videoHeight]:[a.width,a.height],d=[h,c],p=[h,c,i];(l||o)&&(null==ma&&(ma=document.createElement("canvas").getContext("2d")),ma.canvas.width=c,ma.canvas.height=h,ma.drawImage(a,0,0,c,h),a=ma.canvas);const f=n.makeTensorInfo(d,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),a);const g=(0,s.OBj)().getBool("WEBGL_PACK")?new fa(p):new pa(p),m=n.runWebGLProgram(g,[f],"int32");return n.disposeData(f.dataId),m}};let ma;const ba={kernelName:s._V0,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dataFormat:h,dilations:d,dimRoundingMode:p,activation:f,leakyreluAlpha:g}=r,m=s.Wap.convertConv2DDataFormat(h),b=s.Wap.computeConv2DInfo(a.shape,i.shape,u,d,c,p,!1,m);let y;const w=[];if(1!==b.filterHeight||1!==b.filterWidth||1!==b.dilationHeight||1!==b.dilationWidth||1!==b.strideHeight||1!==b.strideWidth||"SAME"!==b.padInfo.type&&"VALID"!==b.padInfo.type)if((0,s.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=rs({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:g});else{const e=null!=o,t=null!=l,r="leakyrelu"===f,u=f?gn(f,!1):null,c=new Qr(b,e,u,t,r),h=[a,i];if(o&&h.push(o),l&&h.push(l),r){const e=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(g,"float32"));h.push(e),w.push(e)}y=n.runWebGLProgram(c,h,"float32")}else y=ns({x:a,filter:i,convInfo:b,backend:n,bias:o,activation:f,preluActivationWeights:l,leakyreluAlpha:g});const x=vn({inputs:{x:y},backend:n,attrs:{shape:b.outShape}});return w.push(y),w.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},ya={kernelName:s.luS,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:i,bias:o,preluActivationWeights:l}=t,{strides:u,pad:c,dilations:h,dimRoundingMode:d,activation:p,leakyreluAlpha:f}=r,g=[];let m=h;null==m&&(m=[1,1]),s.D5U.assert(s.Wap.eitherStridesOrDilationsAreOne(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const b=s.Wap.computeConv2DInfo(a.shape,i.shape,u,m,c,d,!0),y=(0,s.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&b.strideWidth<=2&&b.outChannels/b.inChannels==1,w=p?gn(p,y):null,x=[a,i],v=null!=o,k=null!=l,I="leakyrelu"===p;if(v&&x.push(o),k&&x.push(l),I){const e=n.makeTensorInfo([],"float32",s.D5U.createScalarValue(f,"float32"));x.push(e),g.push(e)}let S;S=y?new Ns(b,v,w,k,I):new Cs(b,v,w,k,I);const $=n.runWebGLProgram(S,x,"float32");return g.forEach((e=>n.disposeIntermediateTensorInfo(e))),$}};class wa{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=he(t.length),s=he(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const xa={kernelName:s.q1x,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,i=a.shape,o=i[i.length-1],[l,u,c,h]=s.Wap.prepareAndValidate(r,a),d=vn({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),p=vn({inputs:{x:r},backend:n,attrs:{shape:[s.D5U.sizeFromShape(r.shape)/c,c]}}),f=new wa(o,h,[u,c]),g=n.runWebGLProgram(f,[p,d],p.dtype),m=vn({inputs:{x:g},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(g),m}};class va{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=he(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("int(getIndices(resRC.x, resRC.z))"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}const ka={kernelName:s.qi_,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:i}=t,{axis:o,batchDims:l}=r,u=s.D5U.parseAxisParam(o,a.shape)[0],c=s.Wap.segment_util.collectGatherOpShapeInfo(a,i,u,l),h=s.D5U.sizeFromShape(i.shape),d=[],p=vn({inputs:{x:a},backend:n,attrs:{shape:[c.batchSize,c.outerSize,c.dimSize,c.sliceSize]}}),f=vn({inputs:{x:i},backend:n,attrs:{shape:[c.batchSize,h/c.batchSize]}});d.push(p),d.push(f);const g=[c.batchSize,c.outerSize,h/c.batchSize,c.sliceSize];if(n.shouldExecuteOnCPU([a,i])||"string"===a.dtype){const e=n.bufferSync(f),t=n.bufferSync(p),r=gt(t,e,g);return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c.outputShape,r.dtype,r.values)}const m=new va(p.shape,g),b=n.runWebGLProgram(m,[p,f],p.dtype);d.push(b);const y=vn({inputs:{x:b},backend:n,attrs:{shape:c.outputShape}});return d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},Ia=fn({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:mt,dtype:"bool"}),Sa={kernelName:s.iZT,backendName:"webgl",kernelFunc:Ia},$a=fn({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool"}),Ea={kernelName:s.Acj,backendName:"webgl",kernelFunc:$a},Ca={kernelName:s.Qg5,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return ta(r,!0,n)}},Na=pn({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),Ta={kernelName:s.avt,backendName:"webgl",kernelFunc:Na},Aa=pn({opSnippet:"return float(isinf(x));",dtype:"bool"}),Ra={kernelName:s.iWB,backendName:"webgl",kernelFunc:Aa},Da=pn({opSnippet:"return float(isnan(x));",dtype:"bool"}),Fa={kernelName:s.r7n,backendName:"webgl",kernelFunc:Da},_a=fn({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:bt,dtype:"bool"}),Oa={kernelName:s.vtC,backendName:"webgl",kernelFunc:_a},La=fn({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",dtype:"bool"}),Ma={kernelName:s.CAk,backendName:"webgl",kernelFunc:La},za={kernelName:s.e7N,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=yt(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},Ba=pn({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:wt}),Pa={kernelName:s.ZbH,backendName:"webgl",kernelFunc:Ba},Ua=pn({opSnippet:"return log(1.0 + x);"}),Wa={kernelName:s.kU,backendName:"webgl",kernelFunc:Ua},Va=fn({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Ga={kernelName:s.PYm,backendName:"webgl",kernelFunc:Va},ja=pn({opSnippet:"return float(!(x >= 1.0));"}),Ha={kernelName:s.VfG,backendName:"webgl",kernelFunc:ja},Ka=fn({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),qa={kernelName:s.MZg,backendName:"webgl",kernelFunc:Ka};class Xa{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Ya{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${l})`:1===s?`1.0/(${l})`:`exp(log(${l}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const Ja={kernelName:s.eZ0,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:i,bias:o,alpha:l,beta:u}=r,c=(0,s.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Ya(a.shape,i,o,l,u):new Xa(a.shape,i,o,l,u);return n.runWebGLProgram(c,[a],a.dtype)}};class Za{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Qa={kernelName:s.Hhh,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=r,h=new Za(s.shape,o,l,u,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function ei(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:i,keepDims:o}=r,l=a.shape.length,u=s.D5U.parseAxisParam(i,a.shape);let c=u;const h=s.Wap.getAxesPermutation(c,l),d=null!=h,p=n.shouldExecuteOnCPU([a]);let f=a;if(d){if(p){const e=n.texData.get(f.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=a.shape[h[e]];const r=Lt(e,a.shape,a.dtype,h,t);f=n.makeTensorInfo(t,a.dtype),n.texData.get(f.dataId).values=r}else f=Nn(a,h,n);c=s.Wap.getInnerMostAxes(c.length,l)}s.Wap.assertAxesAreInnerMostDims("max",c,l);const[g,m]=s.Wap.computeOutAndReduceShapes(f.shape,c);let b,y=g;if(o&&(y=s.Wap.expandShapeToKeepDim(g,u)),p){const e=n.texData.get(f.dataId).values,t=xt(e,s.D5U.sizeFromShape(m),y,a.dtype);b=n.makeTensorInfo(y,a.dtype),n.texData.get(b.dataId).values=t}else b=function(e,t,n,r){const a=s.D5U.sizeFromShape(t),i=vn({inputs:{x:e},attrs:{shape:[s.D5U.sizeFromShape(e.shape)/a,a]},backend:r}),o=$n(i,e.dtype,"max",r),l=vn({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(f,m,y,n);return d&&n.disposeIntermediateTensorInfo(f),b}const ti={kernelName:s.YoZ,backendName:"webgl",kernelFunc:ei},ni=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:vt}),ri={kernelName:s.BMI,backendName:"webgl",kernelFunc:ni},si={kernelName:s.mTV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;L(a,"maxPool");const{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=r;s.D5U.assert(s.Wap.eitherStridesOrDilationsAreOne(o,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '1'`));const c=s.Wap.computePool2DInfo(a.shape,i,o,1,l,u);if(1===c.filterWidth&&1===c.filterHeight&&s.D5U.arraysEqual(c.inShape,c.outShape))return nn({inputs:{x:a},backend:n});const h=new dr(c,"max",!1);return n.runWebGLProgram(h,[a],a.dtype)}},ai={kernelName:s.OAf,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=r,h=s.Wap.computePool3DInfo(a.shape,i,o,[1,1,1],l,c,u),d=new pr(h,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class ii{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,l=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oi{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,d=u-1-e.padInfo.left,p=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${d});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const li={kernelName:s.OU7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i}=t,o=i,{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=r,d=s.Wap.computePool3DInfo(o.shape,l,u,[1,1,1],c,h),p=new pr(d,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),g=new oi(d),m=n.runWebGLProgram(g,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),m}},ui={kernelName:s.OV7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:i,output:o}=t,l=i;L([i,o],"maxPoolGrad");const{filterSize:u,strides:c,pad:h,dimRoundingMode:d}=r,p=s.Wap.computePool2DInfo(l.shape,u,c,1,h,d),f=new dr(p,"max",!0),g=n.runWebGLProgram(f,[l],l.dtype),m=new ii(p),b=n.runWebGLProgram(m,[a,g],l.dtype);return n.disposeIntermediateTensorInfo(g),b}},ci={kernelName:s.vFR,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:i,pad:o,includeBatchInIndex:l}=t,u=n;s.D5U.assert(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const c=[1,1];s.D5U.assert(s.Wap.eitherStridesOrDilationsAreOne(i,c),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=s.Wap.computePool2DInfo(r.shape,a,i,c,o),[d,p]=function(e,t,n,r){let s=new dr(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new dr(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,l,h,u);return[d,p]}},hi={kernelName:s.q2K,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:i}=t,o=n,l=r.shape.length,u=s.D5U.parseAxisParam(i,r.shape);let c=u;const h=s.Wap.getAxesPermutation(c,l),d=null!=h,p=o.shouldExecuteOnCPU([r]),f=[];let g=r;if(d){if(p){const e=o.texData.get(g.dataId).values,t=new Array(l);for(let e=0;e<t.length;e++)t[e]=r.shape[h[e]];const n=Lt(e,r.shape,r.dtype,h,t);g=o.makeTensorInfo(t,r.dtype),o.texData.get(g.dataId).values=n}else g=Nn(r,h,o);f.push(g),c=s.Wap.getInnerMostAxes(c.length,l)}s.Wap.assertAxesAreInnerMostDims("sum",c,l);const[m,b]=s.Wap.computeOutAndReduceShapes(g.shape,c);let y=m;a&&(y=s.Wap.expandShapeToKeepDim(m,u));const w=function(e,t,n,r){const a=s.D5U.sizeFromShape(t),i=vn({inputs:{x:e},attrs:{shape:[s.D5U.sizeFromShape(e.shape)/a,a]},backend:r}),o=$n(i,"float32","mean",r),l=vn({inputs:{x:o},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(i),r.disposeIntermediateTensorInfo(o),l}(g,b,y,o);for(const e of f)o.disposeIntermediateTensorInfo(e);return w}},di={kernelName:s.c17,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=s.D5U.parseAxisParam(i,a.shape);let c=u;const h=s.Wap.getAxesPermutation(c,l);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),c=s.Wap.getInnerMostAxes(c.length,a.shape.length)),s.Wap.assertAxesAreInnerMostDims("min",c,l);const[p,f]=s.Wap.computeOutAndReduceShapes(d.shape,c),g=vn({inputs:{x:d},backend:n,attrs:{shape:[-1,s.D5U.sizeFromShape(f)]}}),m=$n(g,g.dtype,"min",n);let b;return b=vn(o?{inputs:{x:m},backend:n,attrs:{shape:s.Wap.expandShapeToKeepDim(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(m),null!=h&&n.disposeIntermediateTensorInfo(d),b}},pi=fn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:kt}),fi={kernelName:s.q8u,backendName:"webgl",kernelFunc:pi};class gi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=he(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),l="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class mi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=he(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Bt("rc",r),l=Bt("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let d="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;d=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const bi={kernelName:s.jQs,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:i}=n,o=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mi(r.shape,a,i):new gi(r.shape,a,i);return t.runWebGLProgram(o,[r],r.dtype)}},yi=fn({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),wi={kernelName:s.Vbg,backendName:"webgl",kernelFunc:yi};class xi{constructor(e,t,n){this.variableNames=["probs"],this.outputShape=[e,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.seedLoc&&(this.seedLoc=t.getUniformLocation(n,"seed")),t.gl.uniform1f(this.seedLoc,e)}}}const vi=fn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),ki={kernelName:s.oHH,backendName:"webgl",kernelFunc:vi},Ii="return a - b;",Si=fn({opSnippet:Ii,packedOpSnippet:Ii,supportsComplex:!0,cpuKernelImpl:Ft}),$i={kernelName:s.Tr8,backendName:"webgl",kernelFunc:Si};function Ei(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:i}=r,o=s.D5U.parseAxisParam([i],a.shape),l=ei({inputs:{x:a},backend:n,attrs:{reductionIndices:o,keepDims:!1}}),u=s.Wap.expandShapeToKeepDim(l.shape,o),c=vn({inputs:{x:l},backend:n,attrs:{shape:u}}),h=Si({inputs:{a,b:c},backend:n}),d=Ks({inputs:{x:h},backend:n}),p=Tn({inputs:{x:d},backend:n,attrs:{axis:o,keepDims:!1}}),f=vn({inputs:{x:p},backend:n,attrs:{shape:u}}),g=vi({inputs:{a:d,b:f},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),g}const Ci={kernelName:s.Gcp,backendName:"webgl",kernelFunc:Ei},Ni={kernelName:s.NZg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,l=o?s:Ei({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new xi(u,c,a),d=h.getCustomSetupFunc(i),p=n.runWebGLProgram(h,[l],"int32",d);return o||n.disposeIntermediateTensorInfo(l),p}},Ti="return -x;",Ai={kernelName:s.kuV,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=St(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let a;return a=(0,s.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new Xt(r.shape,Ti):new Ht(r.shape,Ti),n.runWebGLProgram(a,[r],r.dtype)}},Ri=s.GDt.GP,Di={kernelName:s.uv1,backendName:"webgl",kernelFunc:function(e){s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u}=r,c=n.readSync(a.dataId),h=n.readSync(i.dataId),{selectedIndices:d}=Ri(c,h,o,l,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},Fi=s.GDt.qP,_i={kernelName:s.cye,backendName:"webgl",kernelFunc:function(e){s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,padToMaxOutputSize:c}=r,h=n.readSync(a.dataId),d=n.readSync(i.dataId),{selectedIndices:p,validOutputs:f}=Fi(h,d,o,l,u,c);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([f]))]}},Oi=s.GDt.pA,Li={kernelName:s.W0H,backendName:"webgl",kernelFunc:function(e){s.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:i}=t,{maxOutputSize:o,iouThreshold:l,scoreThreshold:u,softNmsSigma:c}=r,h=n.readSync(a.dataId),d=n.readSync(i.dataId),p=o,f=l,g=u,m=c,{selectedIndices:b,selectedScores:y}=Oi(h,d,p,f,g,m);return[n.makeTensorInfo([b.length],"int32",new Int32Array(b)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class Mi{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const zi={kernelName:s.we_,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:i,onValue:o,offValue:l}=r,u=s.D5U.sizeFromShape(a.shape),c=new Mi(u,i,o,l),h=vn({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(c,[h],a.dtype);n.disposeIntermediateTensorInfo(h);const p=vn({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,i]}});return n.disposeIntermediateTensorInfo(d),p}};function Bi(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=Fr({inputs:{input:r},backend:n}),t=Bi({inputs:{x:e},backend:n}),s=qr({inputs:{input:r},backend:n}),a=Bi({inputs:{x:s},backend:n}),i=sn({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return sa({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const Pi={kernelName:s.RuY,backendName:"webgl",kernelFunc:Bi},Ui={kernelName:s.qWM,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=Fr({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=qr({inputs:{input:s},backend:r}),i=Bi({inputs:{x:a},backend:r}),o=sn({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return sa({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},Wi={kernelName:s.QiL,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return Xs({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const i=t[0].shape,o=t[0].dtype;t.forEach((e=>{s.D5U.assertShapesMatch(i,e.shape,"All tensors passed to stack must have matching shapes"),s.D5U.assert(o===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=[],u=Jr({inputs:t.map((e=>{const t=Xs({inputs:{input:e},backend:n,attrs:{dim:a}});return l.push(t),t})),backend:n,attrs:{axis:a}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class Vi{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=he(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n        uniform float value;\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}class Gi{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=he(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=Bt("rc",r),l=Bt("source",r),u=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${l.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${u}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${u}) {`],d=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${h[e]}\n        if (${d}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n      uniform float value;\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(e){return(t,n)=>{null==this.valueLoc&&(this.valueLoc=t.getUniformLocationNoThrow(n,"value")),t.gl.uniform1f(this.valueLoc,e)}}}const ji=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:i,constantValue:o}=r,l=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gi(a.shape,i,o):new Vi(a.shape,i,o),u=l.getCustomSetupFunc(o);return n.runWebGLProgram(l,[a],a.dtype,u)},Hi={kernelName:s.lyA,backendName:"webgl",kernelFunc:ji},Ki=fn({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),qi={kernelName:s.pe_,backendName:"webgl",kernelFunc:Ki},Xi={kernelName:s.DlI,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:i,keepDims:o}=r,l=a.shape.length,u=[],c=s.D5U.parseAxisParam(i,a.shape);let h=c;const d=s.Wap.getAxesPermutation(h,l);let p,f=a;if(null!=d&&(f=Rn({inputs:{x:a},backend:n,attrs:{perm:d}}),h=s.Wap.getInnerMostAxes(h.length,l),u.push(f)),s.Wap.assertAxesAreInnerMostDims("prod",h,l),n.shouldExecuteOnCPU([f])){const e=n.texData.get(f.dataId).values,{outVals:t,outShape:r,outDtype:s}=$t(f.shape,f.dtype,e,h);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=s.Wap.computeOutAndReduceShapes(f.shape,h),r=s.D5U.sizeFromShape(t),i=vn({inputs:{x:f},backend:n,attrs:{shape:[-1,r]}}),o=$n(i,(0,s.z4k)(a.dtype),"prod",n);p=vn({inputs:{x:o},backend:n,attrs:{shape:e}}),u.push(i),u.push(o)}if(o){u.push(p);const e=s.Wap.expandShapeToKeepDim(p.shape,c);p=vn({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},Yi=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=Et(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},Ji={kernelName:s.e6w,backendName:"webgl",kernelFunc:Yi},Zi=pn({opSnippet:"return 1.0 / x;"}),Qi={kernelName:s.$HU,backendName:"webgl",kernelFunc:Zi},eo=pn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),to={kernelName:s.qkr,backendName:"webgl",kernelFunc:eo},no=pn({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),ro={kernelName:s.SbG,backendName:"webgl",kernelFunc:no};class so{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class ao{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const io={kernelName:s._Yw,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,h=(0,s.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ao(a.shape,u,c,i,o):new so(a.shape,u,c,i,o);return n.runWebGLProgram(h,[a],"float32")}};class oo{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const lo={kernelName:s.zbQ,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new oo(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class uo{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class co{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let d;d=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const ho={kernelName:s.dpD,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:i,halfPixelCenters:o,size:l}=r,[u,c]=l,h=(0,s.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new co(a.shape,u,c,i,o):new uo(a.shape,u,c,i,o);return n.runWebGLProgram(h,[a],a.dtype)}};class po{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,d=1/c,p=2*Math.ceil(h)+2,f=2*Math.ceil(d)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${d});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const fo={kernelName:s.Hmb,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new po(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class go{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=he(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class mo{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=Bt("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=he(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const bo={kernelName:s.mKl,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:i}=r,o=a.shape.length,l=s.D5U.parseAxisParam(i,a.shape);if(0===o)return nn({inputs:{x:a},backend:n});const u=(0,s.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new mo(a.shape,l):new go(a.shape,l);return n.runWebGLProgram(u,[a],a.dtype)}};class yo{constructor(e,t){this.variableNames=["Image"],this.outputShape=[];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        uniform vec4 params;\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}getCustomSetupFunc(e,t,n,r){return(s,a)=>{null==this.paramsLoc&&(this.paramsLoc=s.getUniformLocationNoThrow(a,"params")),s.gl.uniform4f(this.paramsLoc,e,t,n,r)}}}const wo={kernelName:s.b9H,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:i,center:o}=t,l=n,u=new yo(r.shape,i),[c,h]=s.Wap.getImageCenter(o,r.shape[1],r.shape[2]),d=u.getCustomSetupFunc(c,h,Math.sin(a),Math.cos(a));return l.runWebGLProgram(u,[r],r.dtype,d)}},xo=pn({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),vo={kernelName:s.e07,backendName:"webgl",kernelFunc:xo},ko=pn({opSnippet:"return inversesqrt(x);",cpuKernelImpl:Ct}),Io={kernelName:s.bV0,backendName:"webgl",kernelFunc:ko};class So{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=he(s.length),l=he(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const d=`getUpdates(${h})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${d};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const $o={kernelName:s.xQA,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:i}=t,{shape:o}=r,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:d}=s.Wap.calculateShapes(i,a,o),p=[d/c,c];if(0===d)return n.makeTensorInfo(o,a.dtype);const f=vn({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),g=vn({inputs:{x:i},backend:n,attrs:{shape:[u,c]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),b=new So(u,l,f.shape.length,g.shape.length,h,p),y=n.runWebGLProgram(b,[g,f,m],g.dtype),w=vn({inputs:{x:y},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),w}};class Eo{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=he(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const Co={kernelName:s.PhF,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:i}=t,o=new Eo(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(o,[r,a,i],(0,s.x8V)(a.dtype,i.dtype))}},No=pn({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${s.Wap.SELU_SCALEALPHA};\n  float scale = ${s.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),To={kernelName:s.oFR,backendName:"webgl",kernelFunc:No},Ao=pn({opSnippet:"return 1.0 / (1.0 + exp(-1.0 * x));"}),Ro={kernelName:s.a5O,backendName:"webgl",kernelFunc:Ao},Do=pn({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),Fo={kernelName:s.i5y,backendName:"webgl",kernelFunc:Do},_o=pn({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),Oo={kernelName:s.RQH,backendName:"webgl",kernelFunc:_o},Lo=pn({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),Mo={kernelName:s.wYB,backendName:"webgl",kernelFunc:Lo},zo=pn({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),Bo={kernelName:s.MRv,backendName:"webgl",kernelFunc:zo},Po={kernelName:s.TQc,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:i,paddings:o}=r;s.D5U.assert(a.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const l=i.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...o);for(let e=1+i.length;e<a.shape.length;++e)u.push([0,0]);const c=[],h=ji({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=s.Wap.getReshaped(h.shape,i,l,!1),p=s.Wap.getPermuted(d.length,i.length,!1),f=s.Wap.getReshapedPermuted(h.shape,i,l,!1),g=vn({inputs:{x:h},backend:n,attrs:{shape:d}}),m=Rn({inputs:{x:g},backend:n,attrs:{perm:p}}),b=vn({inputs:{x:m},backend:n,attrs:{shape:f}});return c.push(h),c.push(g),c.push(m),c.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},Uo={kernelName:s.O3z,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),l=n.readSync(s.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,d,p,f,g]=At(o,r.shape,r.dtype,l,s.dtype,u,c);return[n.makeTensorInfo(d,r.dtype,h),n.makeTensorInfo([d[0]],s.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([g.length],r.dtype,new Int32Array(g))]}},Wo={kernelName:s.nhH,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=Rt(o,r.shape,r.dtype,i,l);return[n.makeTensorInfo(c,r.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},Vo={kernelName:s.D2d,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:i,defaultValue:o}=t,{outputShape:l}=r,{sliceRank:u,numUpdates:c,strides:h,outputSize:d}=s.Wap.calculateShapes(i,a,l),p=new So(c,u,a.shape.length,i.shape.length,h,[d,1],!1),f=n.runWebGLProgram(p,[i,a,o],i.dtype),g=vn({inputs:{x:f},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(f),g}},Go={kernelName:s.L8s,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:i,axis:o}=r,l=s.D5U.parseAxisParam(o,a.shape)[0],u=s.Wap.prepareSplitSize(a,i,l),c=a.shape.length,h=new Array(c).fill(0),d=a.shape.slice();return u.map((e=>{const t=[...d];t[l]=e;const r=Cr({inputs:{x:a},backend:n,attrs:{begin:h,size:t}});return h[l]+=e,r}))}},jo=pn({opSnippet:"return sqrt(x);"}),Ho={kernelName:s.FKq,backendName:"webgl",kernelFunc:jo},Ko=pn({opSnippet:"return x * x;"}),qo={kernelName:s.bK0,backendName:"webgl",kernelFunc:Ko},Xo="return (a - b) * (a - b);",Yo=fn({opSnippet:Xo,packedOpSnippet:Xo}),Jo={kernelName:s._tC,backendName:"webgl",kernelFunc:Yo},Zo={kernelName:s.h8e,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new Ht(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class Qo{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=he(n.length),a=he(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const el={kernelName:s.jQk,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:i,end:o,strides:l,beginMask:u,endMask:c,ellipsisMask:h,newAxisMask:d,shrinkAxisMask:p}=r,{nonStrided:f,$begin:g,$strides:m,size:b,newShape:y,outShape:w}=s.kuN.sliceInfo(a.shape,i,o,l,u,c,h,d,p),x=vn({inputs:{x:a},backend:n,attrs:{shape:y}});let v;if(f){const e=Cr({inputs:{x},backend:n,attrs:{begin:g,size:b}});v=vn({inputs:{x:e},backend:n,attrs:{shape:w}}),n.disposeIntermediateTensorInfo(e)}else if(w.some((e=>0===e)))v=n.makeTensorInfo(w,a.dtype,[]);else if(n.shouldExecuteOnCPU([x])){const e=n.texData.get(x.dataId).values,t=(0,s.f3b)(x.shape,x.dtype,e),r=Dt(w,t,m,g);v=n.makeTensorInfo(w,x.dtype,r.values)}else{const e=new Qo(g,m,w);v=n.runWebGLProgram(e,[x],x.dtype)}const k=vn({inputs:{x:v},backend:n,attrs:{shape:w}});return n.disposeIntermediateTensorInfo(x),n.disposeIntermediateTensorInfo(v),k}},tl=pn({opSnippet:"return tan(x);"}),nl={kernelName:s.sEM,backendName:"webgl",kernelFunc:tl},rl=pn({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),sl={kernelName:s.MIZ,backendName:"webgl",kernelFunc:rl};class al{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=he(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function il(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:i}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map((e=>s.D5U.decodeString(e))):e,r=(0,s.f3b)(a.shape,a.dtype,t),o=_t(r,i);return n.makeTensorInfo(o.shape,o.dtype,o.values)}const o=new al(a.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}const ol={kernelName:s.n9L,backendName:"webgl",kernelFunc:il},ll={kernelName:s.cWu,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=n.readSync(s.dataId),[l,u]=Ot(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}};class ul{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4;break;default:o=1}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const cl={kernelName:s.wx7,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=r,[c,h,d,p]=s.shape,[f,g]=null!=u?u:[h,d],m=new ul(h,d,i,o,l,[c,f,g,p]);return n.runWebGLProgram(m,[s,a],"float32")}},hl={kernelName:s.kpP,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;L(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=Mt(i,s,a.shape,a.dtype);return[r.makeTensorInfo(l,a.dtype,o),r.makeTensorInfo([u.length],"int32",u)]}},dl={kernelName:s.ToN,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,l=s.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],d=new Array(o).fill(0),p=i.shape.slice();p[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){d[a]=e;const t=Cr({inputs:{x:i},backend:n,attrs:{begin:d,size:p}}),r=vn({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class pl{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const fl=[Ja,Qa,_n,Ln,zn,Pn,Vn,Hn,Kn,qn,er,tr,rr,ar,ur,or,hr,gr,fr,yr,wr,xr,Ir,Tr,Ar,Or,zr,Ur,Gr,an,Zr,us,cs,ss,ds,ps,hs,gs,bs,ws,Is,Ss,Es,Ds,Fs,Ts,Os,Ms,zs,Ps,Us,Vs,js,qs,Ys,Qs,na,aa,oa,ca,da,ga,ba,ya,xa,ka,Sa,Ea,rn,Ca,Xr,Ta,Ra,Fa,un,Oa,Ma,za,Wa,Pa,Ga,Ha,qa,ti,ai,si,li,ui,ci,ri,hi,di,fi,bi,wi,Ni,xn,Ai,Di,_i,Li,Dr,zi,Ui,Wi,Hi,qi,dn,Xi,Ji,_r,ki,Qi,ro,to,kn,io,lo,ho,fo,bo,wo,vo,Io,$o,Co,To,Ro,Fo,Oo,Mo,Nr,Ci,Bo,Po,Uo,Wo,Vo,Go,Ho,qo,Jo,Zo,el,$i,An,nl,sl,ol,ll,cl,Dn,hl,dl,{kernelName:s.Qvg,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:i}=t,{numSegments:o}=r,l=a.shape.length,u=[];let c=0;const h=s.Wap.getAxesPermutation([c],l);let d=a;null!=h&&(d=Rn({inputs:{x:a},backend:n,attrs:{perm:h}}),u.push(d),c=s.Wap.getInnerMostAxes(1,l)[0]);const p=s.Wap.segment_util.computeOutShape(d.shape,c,o),f=s.D5U.sizeFromShape([d.shape[c]]),g=vn({inputs:{x:d},backend:n,attrs:{shape:[-1,f]}});u.push(g);const m=(0,s.z4k)(a.dtype),b=(e,t,r,a,i)=>{const o=e.shape[0],l=e.shape[1],c=s.Wap.segment_util.segOpComputeOptimalWindowSize(l,i),h=new pl({windowSize:c,inSize:l,batchSize:o,numSegments:i},t),d=n.compileAndRun(h,[e,r],a);if(u.push(d),d.shape[1]===i)return d;const p=Yi({backend:n,attrs:{start:0,stop:i,step:1,dtype:"float32"}}),f=il({inputs:{x:p},backend:n,attrs:{reps:[l/c]}});return u.push(p),u.push(f),b(d,t,f,a,i)},y=vn({inputs:{x:b(g,"unsortedSegmentSum",i,m,o)},backend:n,attrs:{shape:p}});let w=y;if(null!=h){u.push(y);const e=s.Wap.getUndoAxesPermutation(h);w=Rn({inputs:{x:w},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),w}},Pi];for(const e of fl)(0,s.wCN)(e)},966:(e,t,n)=>{"use strict";n.d(t,{SYM:()=>pe,VGw:()=>fe,SpW:()=>ge,mm_:()=>me,Xze:()=>be,oT6:()=>ye,IKK:()=>we,sJF:()=>xe,aJk:()=>ve,M2y:()=>ke,qw7:()=>Ie,jMg:()=>Se,QCc:()=>Ee,Oyi:()=>$e,JhU:()=>Ce,_k9:()=>Te,IMb:()=>Ae,ROF:()=>Ne,XLW:()=>Re,zws:()=>De,zvY:()=>Fe,RFZ:()=>_e,gJX:()=>Oe,xnO:()=>Le,Zz9:()=>Me,yj2:()=>ze,Eh3:()=>Be,mhS:()=>Pe,wUP:()=>Ue,wm:()=>We,x12:()=>Ve,o2y:()=>Ge,ik2:()=>je,mc4:()=>He,TR1:()=>Ke,VcC:()=>Xe,iHb:()=>qe,JLz:()=>c,QRR:()=>Ye,T0n:()=>Je,cie:()=>Ze,sL$:()=>Qe,y7R:()=>et,$w:()=>tt,p4S:()=>nt,$g6:()=>st,SX0:()=>at,HEU:()=>it,hdR:()=>lt,Omj:()=>ot,NEP:()=>ut,YFo:()=>ct,Y0y:()=>ht,vwp:()=>dt,deh:()=>pt,Uyb:()=>ft,OR:()=>gt,jeX:()=>mt,eBW:()=>rr,sHE:()=>bt,_V0:()=>ir,luS:()=>or,q1x:()=>wt,qi_:()=>yt,iZT:()=>xt,Acj:()=>vt,Qg5:()=>It,iJz:()=>kt,J_u:()=>St,avt:()=>$t,iWB:()=>Et,r7n:()=>Ct,Zuw:()=>h,eZ0:()=>Mt,Hhh:()=>zt,J$2:()=>Nt,vtC:()=>Tt,CAk:()=>At,e7N:()=>Rt,ZbH:()=>Dt,kU:()=>Ft,PYm:()=>_t,VfG:()=>Ot,MZg:()=>Lt,YoZ:()=>Bt,mTV:()=>Ut,OAf:()=>Vt,OU7:()=>Gt,OV7:()=>Wt,vFR:()=>jt,BMI:()=>Pt,q2K:()=>Ht,c17:()=>Kt,q8u:()=>qt,jQs:()=>Xt,Vbg:()=>Yt,NZg:()=>Jt,wYn:()=>Zt,kuV:()=>Qt,uv1:()=>tn,cye:()=>nn,W0H:()=>rn,yQU:()=>en,we_:()=>an,qWM:()=>sn,QiL:()=>on,lyA:()=>ln,pe_:()=>un,o0g:()=>cn,DlI:()=>hn,e6w:()=>dn,xJR:()=>pn,oHH:()=>rt,$HU:()=>fn,qkr:()=>gn,SbG:()=>vn,HZH:()=>mn,_Yw:()=>wn,zbQ:()=>xn,dpD:()=>bn,Hmb:()=>yn,mKl:()=>kn,b9H:()=>sr,e07:()=>In,bV0:()=>Sn,xQA:()=>$n,PhF:()=>En,oFR:()=>Cn,a5O:()=>Dn,i5y:()=>Rn,RQH:()=>Tn,wYB:()=>An,p2w:()=>Nn,Gcp:()=>zn,MRv:()=>Fn,TQc:()=>Ln,O3z:()=>Bn,nhH:()=>Pn,D2d:()=>Un,L8s:()=>Mn,FKq:()=>_n,bK0:()=>Vn,_tC:()=>Wn,h8e:()=>nr,jQk:()=>Gn,Tr8:()=>jn,GBy:()=>On,sEM:()=>Hn,MIZ:()=>Kn,esB:()=>Fr,YDk:()=>Tr,n9L:()=>qn,cWu:()=>Xn,wx7:()=>Yn,G3Y:()=>Jn,kpP:()=>Zn,ToN:()=>Qn,Qvg:()=>er,RuY:()=>tr,usg:()=>ar,IHx:()=>Ma,NqF:()=>za,y3$:()=>io,Wap:()=>l,f3b:()=>ta,pju:()=>na,C2$:()=>s,B90:()=>so,hiC:()=>Pa,SRH:()=>no,OBj:()=>le,Iqj:()=>Ua,io:()=>a,GDt:()=>u,Fp7:()=>Wa,J69:()=>Va,Gi7:()=>ti,dC7:()=>ni,lfX:()=>ri,jqO:()=>ao,wCN:()=>pr,iD$:()=>si,tPi:()=>ai,kuN:()=>i,_b3:()=>ii,L9e:()=>oi,knu:()=>li,luU:()=>ei,z4k:()=>Wr,XeE:()=>us,RRF:()=>ui,odF:()=>ci,wOQ:()=>hi,yXz:()=>di,lub:()=>ro,HHK:()=>pi,x8V:()=>Ur,D5U:()=>r,lls:()=>fi});var r={};n.r(r),n.d(r,{arraysEqual:()=>E,assert:()=>x,assertNonNegativeIntegerDimensions:()=>ne,assertNonNull:()=>k,assertShapesMatch:()=>v,bytesFromStringArray:()=>V,bytesPerElement:()=>W,checkConversionForErrors:()=>z,clamp:()=>g,computeStrides:()=>Y,createScalarValue:()=>gr,createShuffledIndices:()=>A,decodeString:()=>xr,distSquared:()=>w,encodeString:()=>wr,fetch:()=>yr,flatten:()=>I,getArrayFromDType:()=>M,getTypedArrayFromDType:()=>L,hasEncodingLoss:()=>P,indexToLoc:()=>se,inferDtype:()=>K,inferFromImplicitShape:()=>F,isBoolean:()=>j,isFunction:()=>q,isInt:()=>C,isNumber:()=>H,isPromise:()=>ae,isScalarShape:()=>$,isString:()=>G,isTypedArray:()=>U,isValidDtype:()=>B,locToIndex:()=>re,makeOnesTypedArray:()=>Q,makeZerosNestedTypedArray:()=>te,makeZerosTypedArray:()=>ee,nearestDivisor:()=>X,nearestLargerEven:()=>m,now:()=>br,parseAxisParam:()=>_,randUniform:()=>y,repeatedTry:()=>D,rightPad:()=>R,shuffle:()=>p,shuffleCombo:()=>f,sizeFromShape:()=>S,sizeToSquarishShape:()=>T,squeezeShape:()=>O,sum:()=>b,tanh:()=>N,toNestedArray:()=>Z,toTypedArray:()=>mr});var s={};n.r(s),n.d(s,{isBrowser:()=>Qr,isMobile:()=>Zr});var a={};n.r(a),n.d(a,{browserFiles:()=>oa,browserHTTPRequest:()=>ma,concatenateArrayBuffers:()=>ms,copyModel:()=>Js,decodeWeights:()=>ds,encodeWeights:()=>hs,fromMemory:()=>wa,getLoadHandlers:()=>Ss,getModelArtifactsInfoForJSON:()=>ys,getSaveHandlers:()=>Is,http:()=>ga,isHTTPScheme:()=>pa,listModels:()=>Xs,loadWeights:()=>ca,moveModel:()=>Zs,registerLoadRouter:()=>ks,registerSaveRouter:()=>vs,removeModel:()=>Ys,weightsLoaderFactory:()=>ha,withSaveHandler:()=>xa});var i={};n.r(i),n.d(i,{assertParamsValid:()=>va,computeFlatOffset:()=>_a,computeOutShape:()=>Ia,getNormalizedAxes:()=>Ca,isSliceContinous:()=>Fa,maskToAxes:()=>ka,parseSliceParams:()=>Oa,sliceInfo:()=>La,startForAxis:()=>Ra,startIndicesWithElidedDims:()=>Na,stopForAxis:()=>Da,stopIndicesWithElidedDims:()=>Ta,stridesForAxis:()=>Aa,stridesWithElidedDims:()=>Sa});var o={};n.r(o),n.d(o,{collectGatherOpShapeInfo:()=>Ml,computeOutShape:()=>Ll,segOpComputeOptimalWindowSize:()=>Ol});var l={};n.r(l),n.d(l,{ERF_A1:()=>dl,ERF_A2:()=>pl,ERF_A3:()=>fl,ERF_A4:()=>gl,ERF_A5:()=>ml,ERF_P:()=>hl,PARALLELIZE_THRESHOLD:()=>Jo,SELU_SCALE:()=>cl,SELU_SCALEALPHA:()=>ul,applyActivation:()=>Xo,assertAndGetBroadcastShape:()=>Ui,assertAxesAreInnerMostDims:()=>qa,assertParamsConsistent:()=>Eo,assignToTypedArray:()=>Sl,axesAreInnerMostDims:()=>Ga,calculateShapes:()=>ll,checkEinsumDimSizes:()=>Al,combineLocations:()=>ja,complexWithEvenIndex:()=>vl,complexWithOddIndex:()=>kl,computeConv2DInfo:()=>Ro,computeConv3DInfo:()=>Do,computeDefaultPad:()=>Fo,computeDilation2DInfo:()=>No,computeOptimalWindowSize:()=>Zo,computeOutAndReduceShapes:()=>Ha,computeOutShape:()=>Co,computePool2DInfo:()=>To,computePool3DInfo:()=>Ao,convertConv2DDataFormat:()=>Po,decodeEinsumEquation:()=>Nl,eitherStridesOrDilationsAreOne:()=>Bo,expandShapeToKeepDim:()=>Ka,exponent:()=>El,exponents:()=>$l,fromStringArrayToUint8:()=>Bl,fromUint8ToStringArray:()=>zl,getAxesPermutation:()=>Xa,getBroadcastDims:()=>Bi,getComplexWithIndex:()=>Il,getEinsumComputePath:()=>Rl,getEinsumPermutation:()=>Tl,getFusedBiasGradient:()=>qo,getFusedDyActivation:()=>Ko,getImageCenter:()=>Qo,getInnerMostAxes:()=>Ja,getPermuted:()=>tl,getReductionAxes:()=>Pi,getReshaped:()=>el,getReshapedPermuted:()=>nl,getSliceBeginCoords:()=>rl,getSliceSize:()=>sl,getUndoAxesPermutation:()=>Ya,isIdentityPermutation:()=>Dl,log:()=>yl,mergeRealAndImagArrays:()=>wl,prepareAndValidate:()=>al,prepareSplitSize:()=>_l,segment_util:()=>o,shouldFuse:()=>Yo,slice_util:()=>i,splitRealAndImagArrays:()=>xl,tupleValuesAreOne:()=>zo,upcastType:()=>Ur,validateInput:()=>ol,validateUpdateShape:()=>il,warn:()=>bl});var u={};n.r(u),n.d(u,{GP:()=>Ri,qP:()=>Di,pA:()=>Fi,ZA:()=>Pl});class c{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class h{refCount(e){return d("refCount")}incRef(e){return d("incRef")}timerAvailable(){return!0}time(e){return d("time")}read(e){return d("read")}readSync(e){return d("readSync")}numDataIds(){return d("numDataIds")}disposeData(e,t){return d("disposeData")}write(e,t,n){return d("write")}move(e,t,n,r,s){return d("move")}memory(){return d("memory")}floatPrecision(){return d("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return d("dispose")}}function d(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function p(e){let t=e.length,n=0,r=0;for(;t>0;)r=Math.random()*t|0,t--,n=e[t],e[t]=e[r],e[r]=n}function f(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n,r,s=e.length,a=0;for(;s>0;)a=Math.random()*s|0,s--,n=e[s],r=t[s],e[s]=e[a],t[s]=t[a],e[a]=n,t[a]=r}function g(e,t,n){return Math.max(e,Math.min(t,n))}function m(e){return e%2==0?e:e+1}function b(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function y(e,t){const n=Math.random();return t*n+(1-n)*e}function w(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function x(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function v(e,t,n=""){x(E(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function k(e){x(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function I(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||U(e)&&!n)for(let r=0;r<e.length;++r)I(e[r],t,n);else t.push(e);return t}function S(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function $(e){return 0===e.length}function E(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function C(e){return e%1==0}function N(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function T(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function A(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return p(t),t}function R(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function D(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function F(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function _(e,t){const n=t.length;return x((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),x(e.every((e=>C(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function O(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:_(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function L(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function M(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function z(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function B(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function P(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function U(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array}function W(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function V(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function G(e){return"string"==typeof e||e instanceof String}function j(e){return"boolean"==typeof e}function H(e){return"number"==typeof e}function K(e){return Array.isArray(e)?K(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array?"int32":H(e)?"float32":G(e)?"string":j(e)?"bool":"float32"}function q(e){return!!(e&&e.constructor&&e.call&&e.apply)}function X(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Y(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function J(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=J(e+t*o,i,n,r)}return s}function Z(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return J(0,e,t,n)}function Q(e,t){const n=ee(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ee(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function te(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Z(e,new Float32Array(n));if("int32"===t)return Z(e,new Int32Array(n));if("bool"===t)return Z(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function ne(e){e.forEach((t=>{x(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function re(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function se(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function ae(e){return e&&e.then&&"function"==typeof e.then}class ie{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=oe,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(ae(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function oe(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function le(){return ce}let ue,ce=null;function he(){if(null==ue){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}ue=e}return ue}function de(e,t){const n=function(){const e=he();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const pe="Abs",fe="Acos",ge="Acosh",me="Add",be="AddN",ye="All",we="Any",xe="ArgMax",ve="ArgMin",ke="Asin",Ie="Asinh",Se="Atan",$e="Atanh",Ee="Atan2",Ce="AvgPool",Ne="AvgPoolGrad",Te="AvgPool3D",Ae="AvgPool3DGrad",Re="BatchMatMul",De="BatchToSpaceND",Fe="Bincount",_e="Cast",Oe="Ceil",Le="ClipByValue",Me="Complex",ze="ComplexAbs",Be="Concat",Pe="Conv2D",Ue="Conv2DBackpropFilter",We="Conv2DBackpropInput",Ve="Conv3D",Ge="Conv3DBackpropFilterV2",je="Conv3DBackpropInputV2",He="Cos",Ke="Cosh",qe="Cumsum",Xe="CropAndResize",Ye="DenseBincount",Je="DepthToSpace",Ze="DepthwiseConv2dNative",Qe="DepthwiseConv2dNativeBackpropFilter",et="DepthwiseConv2dNativeBackpropInput",tt="Diag",nt="Dilation2D",rt="RealDiv",st="Einsum",at="Elu",it="EluGrad",ot="Erf",lt="Equal",ut="Exp",ct="ExpandDims",ht="Expm1",dt="FFT",pt="Fill",ft="FlipLeftRight",gt="Floor",mt="FloorDiv",bt="FusedBatchNorm",yt="GatherV2",wt="GatherNd",xt="Greater",vt="GreaterEqual",kt="Identity",It="IFFT",St="Imag",$t="IsFinite",Et="IsInf",Ct="IsNan",Nt="LeakyRelu",Tt="Less",At="LessEqual",Rt="LinSpace",Dt="Log",Ft="Log1p",_t="LogicalAnd",Ot="LogicalNot",Lt="LogicalOr",Mt="LRN",zt="LRNGrad",Bt="Max",Pt="Maximum",Ut="MaxPool",Wt="MaxPoolGrad",Vt="MaxPool3D",Gt="MaxPool3DGrad",jt="MaxPoolWithArgmax",Ht="Mean",Kt="Min",qt="Minimum",Xt="MirrorPad",Yt="Mod",Jt="Multinomial",Zt="Multiply",Qt="Neg",en="NotEqual",tn="NonMaxSuppressionV3",nn="NonMaxSuppressionV4",rn="NonMaxSuppressionV5",sn="OnesLike",an="OneHot",on="Pack",ln="PadV2",un="Pow",cn="Prelu",hn="Prod",dn="Range",pn="Real",fn="Reciprocal",gn="Relu",mn="Reshape",bn="ResizeNearestNeighbor",yn="ResizeNearestNeighborGrad",wn="ResizeBilinear",xn="ResizeBilinearGrad",vn="Relu6",kn="Reverse",In="Round",Sn="Rsqrt",$n="ScatterNd",En="Select",Cn="Selu",Nn="Slice",Tn="Sin",An="Sinh",Rn="Sign",Dn="Sigmoid",Fn="Softplus",_n="Sqrt",On="Sum",Ln="SpaceToBatchND",Mn="SplitV",zn="Softmax",Bn="SparseFillEmptyRows",Pn="SparseReshape",Un="SparseToDense",Wn="SquaredDifference",Vn="Square",Gn="StridedSlice",jn="Sub",Hn="Tan",Kn="Tanh",qn="Tile",Xn="TopK",Yn="Transform",Jn="Transpose",Zn="Unique",Qn="Unpack",er="UnsortedSegmentSum",tr="ZerosLike",nr="Step",rr="FromPixels",sr="RotateWithOffset",ar="_FusedMatMul",ir="FusedConv2D",or="FusedDepthwiseConv2D",lr=de("kernelRegistry",(()=>new Map)),ur=de("gradRegistry",(()=>new Map));function cr(e,t){const n=fr(e,t);return lr.get(n)}function hr(e){return ur.get(e)}function dr(e){const t=lr.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function pr(e){const{kernelName:t,backendName:n}=e,r=fr(t,n);lr.has(r)&&console.warn(`The kernel '${t}' for backend '${n}' is already registered`),lr.set(r,e)}function fr(e,t){return`${t}_${e}`}function gr(e,t){return"string"===t?wr(e):mr([e],t)}function mr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=I(e)),le().getBool("DEBUG")&&z(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function br(){return le().platform.now()}function yr(e,t){return le().platform.fetch(e,t)}function wr(e,t="utf-8"){return t=t||"utf-8",le().platform.encode(e,t)}function xr(e,t="utf-8"){return t=t||"utf-8",le().platform.decode(e,t)}class vr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Ir)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=br();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:br()-i})}if(le().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{kr(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function kr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Ir{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?R(`${r}ms`,9):r.error,o=R(e,25),l=t.rank,u=t.size,c=R(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Sr(e,t,n,r){const s=Y(t),a=function(e,t,n,r){const s=S(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Nr(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],$r(l[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Cr(e,t,n,s,a),l=["Tensor"];return r&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function $r(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:G(e)?`'${e}'`:"bool"===n?Er(e):parseFloat(e.toFixed(7)).toString(),R(r,t)}function Er(e){return 0===e?"false":"true"}function Cr(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[$r(Nr(e)[0],0,n)]:"bool"===n?[Er(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Nr(r),a=Nr(a)),["["+r.map(((e,t)=>$r(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>$r(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Nr(e):Array.from(e)).map(((e,t)=>$r(e,s[t],n))).join(", ")+"]"]}const u=t.slice(1),c=r.slice(1),h=r[0]*i,d=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;d.push(...Cr(e.slice(r,a),u,n,c,s,!1))}d.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;d.push(...Cr(e.slice(r,a),u,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;d.push(...Cr(e.slice(r,a),u,n,c,s,t===o-1))}const p=2===l?",":"";d[0]="["+d[0]+p;for(let e=1;e<d.length-1;e++)d[e]=" "+d[e]+p;let f=",\n";for(let e=2;e<l;e++)f+="\n";return d[d.length-1]=" "+d[d.length-1]+"]"+(a?"":f),d}function Nr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Tr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=S(e),null!=n){const e=n.length;x(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||M(t,this.size),this.strides=Y(e)}set(e,...t){0===t.length&&(t=[0]),x(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Ar().makeTensor(this.values,this.shape,this.dtype)}}let Ar=null,Rr=null,Dr=null;class Fr{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=S(e),this.strides=Y(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Rr.buffer(this.shape,this.dtype,e)}bufferSync(){return Rr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Z(this.shape,e,"complex64"===this.dtype)}arraySync(){return Z(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Ar().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>xr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Ar().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>xr(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Ar().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Ar().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Rr.print(this,e)}clone(){return this.throwIfDisposed(),Rr.clone(this)}toString(e=!1){return Sr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Rr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Ar().makeVariable(this,e,t,n)}}Object.defineProperty(Fr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),de("Tensor",(()=>Fr));class _r extends Fr{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!E(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Ar().disposeTensor(this),this.dataId=e.dataId,Ar().incRef(this,null)}dispose(){Ar().disposeVariable(this),this.isDisposedInternal=!0}}var Or,Lr,Mr,zr,Br;Object.defineProperty(_r,Symbol.hasInstance,{value:e=>e instanceof Fr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Or||(Or={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Lr||(Lr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Mr||(Mr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(zr||(zr={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(Br||(Br={}));const Pr={float32:zr,int32:Lr,bool:Mr,complex64:Br};function Ur(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return Pr[e][t]}function Wr(e){return Ur(e,"int32")}function Vr(e,t){if(e.dtype===t.dtype)return[e,t];const n=Ur(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function Gr(e){const t=[];return jr(e,t,new Set),t}function jr(e,t,n){if(null==e)return;if(e instanceof Fr)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),jr(r,t,n))}}function Hr(e){return null!=e.kernelName}class Kr{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class qr{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Kr}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(console.warn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new vr(this.backendInstance),!0}setupRegisteredKernels(){dr(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){dr(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof h||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${e} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return console.warn(`Initialization of backend ${e} failed`),console.warn(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return qr.nextTensorId++}nextVariableId(){return qr.nextVariableId++}clone(e){const t=Yr.runKernel(kt,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return Yr.runKernel(_e,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==cr(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=Hr(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(Hr(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const l=cr(t,this.backendName);x(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=Hr(e)?null:e.backwardsFunc;let d;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(d=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(d),t=d.outputs):t=i()})),r&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:d.timeMs,extraInfo:d.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){return e.map((e=>this.keep(this.clone(e))))}getTensorsForGradient(e,t,n){const r=hr(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(x(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&G(e[0])&&(s=e.map((e=>wr(e))));const a=r.write(s,t,n),i=new Fr(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=V(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new Fr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new _r(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*W(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof _r||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*W(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=hr(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=ee(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=Gr(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(x(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));x(s instanceof Fr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Q(S(e),"float32");return Yr.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!E(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),Jr);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return x(q(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;x(t.every((e=>e instanceof Fr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),x(n.value instanceof Fr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),x(q(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];x(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),x(a.every((e=>e instanceof Fr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=br(),n=await this.backend.time(e);return n.wallMs=br()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Kr;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function Xr(){const e=he();if(null==e._tfengine){const t=new ie(e);e._tfengine=new qr(t)}var t;return t=e._tfengine.ENV,ce=t,Ar=()=>e._tfengine,e._tfengine}qr.nextTensorId=0,qr.nextVariableId=0;const Yr=Xr();function Jr(e,t){const n={a:e,b:t};return Yr.runKernel(me,n)}function Zr(e){if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Qr(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const es=le();function ts(e,t){let n=e;if(U(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||U(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&le().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ns(e,r,[]),r}function ns(e,t,n){if(n=n||[],!Array.isArray(e)&&!U(e))return void x(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));x(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),x(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)ns(e[t],r,n.concat(t))}function rs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function ss(e,t,n,r="numeric"){if(e instanceof Fr)return rs(r,e.dtype,t,n),e;let s=K(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),rs(r,s,t,n),null==e||!U(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=ts(e,s);U(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?mr(e,s):I(e,[],!0);return Yr.makeTensor(i,a,s)}function as(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>ss(e,`${t}[${s}]`,n,r)))}function is(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...e)=>{Yr.startScope(n);try{const t=r(...e);return ae(t)&&console.error("Cannot return a Promise inside of tidy."),Yr.endScope(t),t}catch(e){throw Yr.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}es.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),es.registerFlag("IS_BROWSER",(()=>Qr())),es.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),es.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),es.registerFlag("PROD",(()=>!1)),es.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>es.getBool("DEBUG"))),es.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),es.registerFlag("IS_TEST",(()=>!1)),es.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),es.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const os=is({complex_:function(e,t){const n=ss(e,"real","complex"),r=ss(t,"imag","complex");v(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return Yr.runKernel(Me,s)}});function ls(e,t,n,r){if(null==r&&(r=K(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!U(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){ne(t);const e=S(t),r=S(n);x(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==S(t.slice(e));x(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return U(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?mr(e,r):I(e,[],!0),Yr.makeTensor(e,t,r)}function us(e,t,n){return ls(e,t,ts(e,n),n)}const cs={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function hs(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:ps(await Promise.all(r)),specs:n}}function ds(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=S(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=cs[n.dtype],c=e.slice(s,s+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=ws()),u=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}s+=l*o}else if("string"===i){const t=S(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));u.push(n),s+=t}}else{const r=cs[i],a=e.slice(s,s+l*r);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),r=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],r[t]=u[2*t+1];const s=us(e,o,"float32"),i=us(r,o,"float32");n[t]=os(s,i),s.dispose(),i.dispose()}}s+=l*r}"complex64"!==i&&(n[t]=us(u,o,i))}return n}function ps(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const fs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function gs(e){return fs?Buffer.byteLength(e):new Blob([e]).size}function ms(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function bs(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function ys(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:gs(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:gs(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function ws(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class xs{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==xs.instance&&(xs.instance=new xs),xs.instance}static registerSaveRouter(e){xs.getInstance().saveRouters.push(e)}static registerLoadRouter(e){xs.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return xs.getHandlers(e,"save")}static getLoadHandlers(e,t){return xs.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?xs.getInstance().loadRouters:xs.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const vs=e=>xs.registerSaveRouter(e),ks=e=>xs.registerLoadRouter(e),Is=e=>xs.getSaveHandlers(e),Ss=(e,t)=>xs.getLoadHandlers(e,t),$s="tensorflowjs",Es="models_store",Cs="model_info_store";function Ns(){if(!le().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ts(e){const t=e.result;t.createObjectStore(Es,{keyPath:"modelPath"}),t.createObjectStore(Cs,{keyPath:"modelPath"})}class As{constructor(e){if(this.indexedDB=Ns(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open($s,1);r.onupgradeneeded=()=>Ts(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Es,"readonly"),r=t.objectStore(Es).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=ys(t),a=s.transaction(Cs,"readwrite");let i=a.objectStore(Cs);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let l;o.onsuccess=()=>{l=s.transaction(Es,"readwrite");const o=l.objectStore(Es).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Cs);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}As.URL_SCHEME="indexeddb://";const Rs=e=>{return le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(As.URL_SCHEME)?(t=e.slice(As.URL_SCHEME.length),new As(t)):null;var t};xs.registerSaveRouter(Rs),xs.registerLoadRouter(Rs);class Ds{constructor(){this.indexedDB=Ns()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open($s,1);n.onupgradeneeded=()=>Ts(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Cs,"readonly"),a=s.objectStore(Cs).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(As.URL_SCHEME)?t.slice(As.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open($s,1);r.onupgradeneeded=()=>Ts(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Cs,"readwrite"),i=a.objectStore(Cs),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{l=s.transaction(Es,"readwrite");const r=l.objectStore(Es).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==l?s.close():l.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const Fs="/",_s="tensorflowjs_models",Os="info",Ls="model_topology",Ms="weight_specs",zs="weight_data",Bs="model_metadata";function Ps(e){return{info:[_s,e,Os].join(Fs),topology:[_s,e,Ls].join(Fs),weightSpecs:[_s,e,Ms].join(Fs),weightData:[_s,e,zs].join(Fs),modelMetadata:[_s,e,Bs].join(Fs)}}function Us(e){const t=e.split(Fs);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(Fs)}class Ws{constructor(e){if(!le().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=Ps(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=ys(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(fs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};return null!=e.signature&&(s.signature=e.signature),null!=e.userDefinedMetadata&&(s.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(s.modelInitializer=e.modelInitializer),this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(fs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}Ws.URL_SCHEME="localstorage://";const Vs=e=>{return le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ws.URL_SCHEME)?(t=e.slice(Ws.URL_SCHEME.length),new Ws(t)):null;var t};xs.registerSaveRouter(Vs),xs.registerLoadRouter(Vs);class Gs{constructor(){x(le().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),x("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=_s+Fs,n=Fs+Os;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[Us(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=Ps(e=(t=e).startsWith(Ws.URL_SCHEME)?t.slice(Ws.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}const js="://";class Hs{constructor(){this.managers={}}static getInstance(){return null==Hs.instance&&(Hs.instance=new Hs),Hs.instance}static registerManager(e,t){x(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(js)&&(e=e.slice(0,e.indexOf(js))),x(e.length>0,(()=>"scheme must not be an empty string."));const n=Hs.getInstance();x(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function Ks(e){if(-1===e.indexOf(js))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${Hs.getSchemes().join(",")}`);return{scheme:e.split(js)[0],path:e.split(js)[1]}}async function qs(e,t,n=!1){x(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=xs.getLoadHandlers(e);x(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),x(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=xs.getSaveHandlers(t);x(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),x(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=Ks(e).scheme,l=Ks(e).path,u=o===Ks(e).scheme,c=await s.load();n&&u&&await Hs.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await Hs.getManager(o).removeModel(l),h.modelArtifactsInfo}async function Xs(){const e=Hs.getSchemes(),t={};for(const n of e){const e=await Hs.getManager(n).listModels();for(const r in e)t[n+js+r]=e[r]}return t}async function Ys(e){const t=Ks(e);return Hs.getManager(t.scheme).removeModel(t.path)}async function Js(e,t){return qs(e,t,!1)}async function Zs(e,t){return qs(e,t,!0)}class Qs{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(le().get("IS_BROWSER")){le().setPlatform("browser",new Qs);try{Hs.registerManager(Ws.URL_SCHEME,new Gs)}catch(e){}try{Hs.registerManager(As.URL_SCHEME,new Ds)}catch(e){}}let ea;function ta(e,t="float32",n){return t=t||"float32",ne(e),new Tr(e,t,n)}le().get("IS_NODE")&&le().setPlatform("node",new class{constructor(){this.util=n(628),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=le().global.fetch?le().global.fetch(e,t):(null==ea&&(ea=n(410)),ea(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const na=is({cast_:function(e,t){const n=ss(e,"x","cast");if(!B(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return Yr.runKernel(_e,r,s)}}),ra=is({clone_:function(e){const t={x:ss(e,"x","clone","string_or_numeric")};return Yr.runKernel(kt,t)}});function sa(e){return new Promise((e=>setTimeout(e))).then(e)}Xr(),Rr={buffer:ta,cast:na,clone:ra,print:function(e,t=!1){console.log(e.toString(t))}};class aa{constructor(e){if(!le().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(aa.URL_SCHEME)&&(e=e.slice(aa.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelTopologyFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer);const s=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(a.download=this.modelTopologyFileName,a.href=s,await sa((()=>a.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await sa((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:ys(e)}}}}aa.URL_SCHEME="downloads://";class ia{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.files=e}async load(){const e=this.files[0],t=this.files.slice(1);return new Promise(((n,r)=>{const s=new FileReader;s.onload=s=>{const a=JSON.parse(s.target.result),i=a.modelTopology;if(null==i)return void r(new Error(`modelTopology field is missing from file ${e.name}`));0===t.length&&n({modelTopology:i});const o=a.weightsManifest;if(null==o)return void r(new Error(`weightManifest field is missing from file ${e.name}`));let l;try{l=this.checkManifestAndWeightFiles(o,t)}catch(e){return void r(e)}const u=[],c=[],h=[];o.forEach((e=>{e.paths.forEach((e=>{c.push(e),h.push(null)})),u.push(...e.weights)})),o.forEach((e=>{e.paths.forEach((e=>{const t=new FileReader;t.onload=t=>{const r=t.target.result,s=c.indexOf(e);if(h[s]=r,-1===h.indexOf(null)){const e={modelTopology:i,weightSpecs:u,weightData:ms(h),format:a.format,generatedBy:a.generatedBy,convertedBy:a.convertedBy};null!=a.signature&&(e.signature=a.signature),null!=a.userDefinedMetadata&&(e.userDefinedMetadata=a.userDefinedMetadata),null!=a.modelInitializer&&(e.modelInitializer=a.modelInitializer),n(e)}},t.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),t.readAsArrayBuffer(l[e])}))}))},s.onerror=t=>r(`Failed to read model topology and weights manifest JSON from file '${e.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),s.readAsText(e)}))}checkManifestAndWeightFiles(e,t){const n=[],r=t.map((e=>bs(e.name))),s={};for(const a of e)a.paths.forEach((e=>{const a=bs(e);if(-1!==n.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(n.push(a),-1===r.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);s[e]=t[r.indexOf(a)]}));if(n.length!==t.length)throw new Error(`Mismatch in the number of files in weights manifest (${n.length}) and the number of weight files provided (${t.length}).`);return s}}function oa(e){return new ia(e)}function la(e,t,n,r){!function(e){x(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){x(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),x(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),x(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function ua(e,t){null==t&&(t={});const n=null==t.fetchFunc?le().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await la(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await la(s,t.onProgress,.5,1)}async function ca(e,t="",n,r){return ha((e=>ua(e,{requestInit:r})))(e,t,n)}function ha(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=cs[l]*S(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let d=0;return l.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[d+e].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[d+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=ds(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),d+=n})),h}}xs.registerSaveRouter((e=>le().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(aa.URL_SCHEME)?function(e="model"){return new aa(e)}(e.slice(aa.URL_SCHEME.length)):null));class da{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(x("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=le().platform.fetch,x(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&x(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:n};null!=e.signature&&(r.signature=e.signature),null!=e.userDefinedMetadata&&(r.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(r.modelInitializer=e.modelInitializer),t.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:ys(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest,s=t.generatedBy,a=t.convertedBy,i=t.format,o=t.signature,l=t.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const e=await this.loadWeights(r);[u,c]=e}const h={modelTopology:n,weightSpecs:u,weightData:c,generatedBy:s,convertedBy:a,format:i};null!=o&&(h.signature=o),null!=l&&(h.userDefinedMetadata=l);const d=t.modelInitializer;return d&&(h.modelInitializer=d),h}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,ms(await ua(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function pa(e){return null!=e.match(da.URL_SCHEME_REGEX)}da.URL_SCHEME_REGEX=/^https?:\/\//;const fa=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>pa(e))):pa(e),n)return ga(e,t)}return null};function ga(e,t){return new da(e,t)}function ma(e,t){return ga(e,t)}xs.registerSaveRouter(fa),xs.registerLoadRouter(fa);class ba{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class ya{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function wa(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new ba(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ba({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new ba({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function xa(e){return new ya(e)}function va(e,t,n){const r=e.shape.length;x(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),x(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)x(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function ka(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function Ia(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function Sa(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function $a(e,t,n){return n<=e?n:n-(t-1)}function Ea(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function Ca(e,t,n,r,s,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),d=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=Na(i,l,u,r,e),h=Ta(o,l,u,s,e),d=Sa(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=Ra(i,r,a,e,t,l),h[t]=Da(o,s,a,e,t,l),d[t]=Aa(a,t,l);return{begin:c,end:h,strides:d}}function Na(e,t,n,r,s){const a=[...s],i=Ea(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=$a(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function Ta(e,t,n,r,s){const a=[...s],i=Ea(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=$a(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=g(0,a[e],s[e])}return a}function Aa(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function Ra(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=g(0,i,l-1),i}function Da(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=r[s];return i<0&&(i+=l),i=o>0?g(0,i,l):g(-1,i,l-1),i}function Fa(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function _a(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function Oa(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{x(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(x(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function La(e,t,n,r,s,a,i,o,l){let u=t.slice(),c=n.slice(),h=r;null==r&&(h=new Array(u.length));const d=ka(i);if(d.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==i&&0!==o)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==i&&0!==l)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const p=e.length-u.length,f=ka(o),g=e.slice();f.forEach((e=>{u[e]=0,c[e]=1,g.splice(e,0,1)}));const{begin:m,end:b,strides:y}=Ca(g,d,p,u,c,h,s,a,i);u=m,c=b,h=y;const w=ka(l);w.forEach((e=>{c[e]=u[e]+1,h[e]=1}));const x=Ia(u,c,h),v=x.filter(((e,t)=>-1===w.indexOf(t)));return{nonStrided:h.every((e=>1===e)),$begin:u,$end:c,$strides:h,size:x,newShape:g,outShape:v}}const Ma=is({add_:function(e,t){let n=ss(e,"a","add"),r=ss(t,"b","add");[n,r]=Vr(n,r);const s={a:n,b:r};return Yr.runKernel(me,s)}}),za=is({argMax_:function(e,t=0){const n={x:ss(e,"x","argMax")},r={axis:t};return Yr.runKernel(xe,n,r)}}),Ba=is({floorDiv_:function(e,t){let n=ss(e,"a","floorDiv"),r=ss(t,"b","floorDiv");[n,r]=Vr(n,r);const s={a:n,b:r};return Yr.runKernel(mt,s)}}),Pa=is({div_:function(e,t){let n=ss(e,"a","div"),r=ss(t,"b","div");if([n,r]=Vr(n,r),"int32"===n.dtype&&"int32"===r.dtype)return Ba(n,r);const s={a:n,b:r};return Yr.runKernel(rt,s,{})}}),Ua=is({gather_:function(e,t,n=0,r=0){const s={x:ss(e,"x","gather"),indices:ss(t,"indices","gather","int32")},a={axis:n,batchDims:r};return Yr.runKernel(yt,s,a)}}),Wa=is({max_:function(e,t=null,n=!1){const r={x:ss(e,"x","max")},s={reductionIndices:t,keepDims:n};return Yr.runKernel(Bt,r,s)}}),Va=is({mean_:function(e,t=null,n=!1){const r={x:ss(e,"x","mean")},s={axis:t,keepDims:n};return Yr.runKernel(Ht,r,s)}});function Ga(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function ja(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Ha(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Ka(e,t){return ja(e,t.map((e=>1)),t)}function qa(e,t,n){x(Ga(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Xa(e,t){if(Ga(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function Ya(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Ja(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Za=is({reshape_:function(e,t){const n={x:ss(e,"x","reshape","string_or_numeric")},r={shape:t};return Yr.runKernel(mn,n,r)}}),Qa=is({square_:function(e){const t=ss(e,"x","square");return Yr.runKernel("Square",{x:t},{})}}),ei=is({sub_:function(e,t){let n=ss(e,"a","sub"),r=ss(t,"b","sub");[n,r]=Vr(n,r);const s={a:n,b:r};return Yr.runKernel(jn,s)}}),ti=is({moments_:function(e,t=null,n=!1){const r=_(t,(e=ss(e,"x","moments")).shape),s=Va(e,r,n);let a=s.shape;n||(a=Ka(s.shape,r));const i=Qa(ei(na(e,"float32"),Za(s,a)));return{mean:s,variance:Va(i,r,n)}}}),ni=is({mul_:function(e,t){let n=ss(e,"a","mul"),r=ss(t,"b","mul");[n,r]=Vr(n,r);const s={a:n,b:r};return Yr.runKernel(Zt,s)}}),ri=is({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:ss(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return Yr.runKernel(an,s,a)}});function si(e,t){if((U(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&U(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return ls(e,[],[],t)}const ai=is({slice_:function(e,t,n){const r=ss(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return Yr.runKernel(Nn,s,a)}}),ii=is({sqrt_:function(e){const t={x:ss(e,"x","sqrt")};return Yr.runKernel(_n,t)}}),oi=is({squeeze_:function(e,t){const n=ss(e,"x","squeeze");return Za(n,O(n.shape,t).newShape)}}),li=is({stack_:function(e,t=0){const n=as(e,"tensors","stack","string_or_numeric");x(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&x(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return Yr.runKernel(on,r,s)}});function ui(e,t){k(e);const n=ts(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return ls(e,null,n,t)}function ci(e,t,n){if(k(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=ts(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return ls(e,t,r,n)}function hi(e,t,n){if(k(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=ts(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return ls(e,t,r,n)}function di(e,t,n){if(k(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=ts(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return ls(e,t,r,n)}const pi=is({unstack_:function(e,t=0){const n=ss(e,"x","unstack","string_or_numeric");x(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return Yr.runKernel(Qn,r,s)}});function fi(e,t="float32"){if("complex64"===t){const t=fi(e,"float32"),n=fi(e,"float32");return os(t,n)}const n=ee(S(e),t);return Yr.makeTensor(n,e,t)}const gi=is({concat_:function(e,t=0){x(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=as(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return ra(n[0]);const r=n,s={axis:t};return Yr.runKernel(Be,r,s)}}),mi=is({imag_:function(e){const t={input:ss(e,"input","imag")};return Yr.runKernel(St,t)}}),bi=is({real_:function(e){const t={input:ss(e,"input","real")};return Yr.runKernel(pn,t)}}),yi=is({split_:function(e,t,n=0){const r={x:ss(e,"x","split")},s={numOrSizeSplits:t,axis:n};return Yr.runKernel(Mn,r,s)}}),wi=is({zerosLike_:function(e){const t={x:ss(e,"x","zerosLike")};return Yr.runKernel(tr,t)}}),xi=is({fft_:function(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Yr.runKernel(dt,t)}}),vi=is({rfft_:function(e,t){x("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=ai(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=gi([e,fi(r)],e.shape.length-1),n=t}else s=e;const a=wi(s),i=Za(os(s,a),[r,n]),o=xi(i),l=Math.floor(n/2)+1,u=bi(o),c=mi(o),h=yi(u,[l,n-l],u.shape.length-1),d=yi(c,[l,n-l],c.shape.length-1),p=s.shape.slice();return p[s.shape.length-1]=l,Za(os(h[0],d[0]),p)}}),ki=is({ifft_:function(e){x("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return Yr.runKernel(It,t)}}),Ii=is({reverse_:function(e,t){const n={x:ss(e,"x","reverse")},r={dims:t};return Yr.runKernel(kn,n,r)}});function Si(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return ui(s,"float32")}is({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=Za(e,[n,t]);r=ki(s)}else{const s=[n,2*(t-1)],a=Za(bi(e),[n,t]),i=Za(mi(e),[n,t]),o=Ii(ai(a,[0,1],[n,t-2]),1),l=ni(Ii(ai(i,[0,1],[n,t-2]),1),si(-1)),u=gi([a,o],1),c=gi([i,l],1),h=Za(os(u,c),[s[0],s[1]]);r=ki(h)}if(r=bi(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=Za(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),is({hammingWindow_:function(e){return Si(e,.54,.46)}});const $i=is({hannWindow_:function(e){return Si(e,.5,.5)}});function Ei(e,t,n){const r={shape:e,value:t,dtype:n};return Yr.runKernel(pt,{},r)}const Ci=is({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(ai(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=gi([ai(e,a,t-r),Ei([r],s)]);i.push(o),a+=n}return 0===i.length?ci([],[0,t]):Za(gi(i),[i.length,t])}});function Ni(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),x(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),x(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),x(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),x(1===t.rank,(()=>"scores must be a 1D tensor")),x(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),x(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}function Ti(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Ai)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Ai(e,t){return e>t?1:e<t?-1:0}function Ri(e,t,n,r,s){return _i(e,t,n,r,s,0)}function Di(e,t,n,r,s,a){return _i(e,t,n,r,s,0,!1,a,!0)}function Fi(e,t,n,r,s,a){return _i(e,t,n,r,s,a,!0)}function _i(e,t,n,r,s,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>s&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Mi);const c=a>0?-.5/a:0,h=[],d=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Oi(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Li(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),d.push(t.score)):t.score>s&&Ti(u,t,Mi))}const p=h.length,f=n-p;o&&f>0&&(h.push(...new Array(f).fill(0)),d.push(...new Array(f).fill(0)));const g={selectedIndices:h};return i&&(g.selectedScores=d),l&&(g.validOutputs=p),g}function Oi(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),l=Math.max(r[1],r[3]),u=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),d=Math.max(s[1],s[3]),p=(o-a)*(l-i),f=(h-u)*(d-c);if(p<=0||f<=0)return 0;const g=Math.max(a,u),m=Math.max(i,c),b=Math.min(o,h),y=Math.min(l,d),w=Math.max(b-g,0)*Math.max(y-m,0);return w/(p+f-w)}function Li(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Mi(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}is({stft_:function(e,t,n,r,s=$i){var a;null==r&&(a=t,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));const i=Ci(e,t,n),o=ni(i,s(t));return vi(o,r)}}),is({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=ss(e,"image","cropAndResize"),o=ss(t,"boxes","cropAndResize","float32"),l=ss(n,"boxInd","cropAndResize","int32"),u=o.shape[0];x(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),x(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),x(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),x(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),x(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),x("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:l},h={method:s,extrapolationValue:a,cropSize:r};return Yr.runKernel(Xe,c,h)}}),is({flipLeftRight_:function(e){const t=ss(e,"image","flipLeftRight","float32");x(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return Yr.runKernel(ft,n,{})}}),is({rotateWithOffset_:function(e,t,n=0,r=.5){const s=ss(e,"image","rotateWithOffset","float32");x(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return Yr.runKernel(sr,a,i)}}),is({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=ss(e,"boxes","nonMaxSuppression"),i=ss(t,"scores","nonMaxSuppression"),o=Ni(a,i,n,r,s),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return Yr.runKernel(tn,{boxes:a,scores:i},l)}}),is({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=ss(e,"boxes","nonMaxSuppression"),o=ss(t,"scores","nonMaxSuppression"),l=Ni(i,o,n,r,s,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:r=l.iouThreshold,scoreThreshold:s=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=Yr.runKernel(rn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),is({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=ss(e,"boxes","nonMaxSuppression"),o=ss(t,"scores","nonMaxSuppression"),l=Ni(i,o,n,r,s,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=Yr.runKernel(nn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),is({resizeBilinear_:function(e,t,n=!1,r=!1){const s=ss(e,"images","resizeBilinear");x(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),x(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),x(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Za(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Yr.runKernel(wn,o,l);return i?Za(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),is({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=ss(e,"images","resizeNearestNeighbor");x(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),x(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),x("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),x(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=Za(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:r,size:t},u=Yr.runKernel(bn,o,l);return i?Za(u,[u.shape[1],u.shape[2],u.shape[3]]):u}});const zi=is({bincount_:function(e,t,n){const r=ss(e,"x","bincount"),s=ss(t,"weights","bincount");x("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),x(n>=0,(()=>`size must be non-negative, but got ${n}.`)),x(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return Yr.runKernel(Fe,a,i)}});function Bi(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Pi(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Ui(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Wi=is({lessEqual_:function(e,t){let n=ss(e,"a","lessEqual"),r=ss(t,"b","lessEqual");[n,r]=Vr(n,r),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(At,s)}}),Vi=is({greater_:function(e,t){let n=ss(e,"a","greater"),r=ss(t,"b","greater");[n,r]=Vr(n,r),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(xt,s)}}),Gi=is({sum_:function(e,t=null,n=!1){let r=ss(e,"x","sum");"bool"===r.dtype&&(r=na(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return Yr.runKernel(On,s,a)}}),ji=is({round_:function(e){const t={x:ss(e,"x","round")};return Yr.runKernel(In,t)}}),Hi=is({broadcastTo_:function(e,t){let n=ss(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=Za(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return ra(n);const i={x:n},o={reps:a};return Yr.runKernel(qn,i,o)}}),Ki=is({where_:function(e,t,n){const r=ss(t,"a","where"),s=ss(n,"b","where"),a=ss(e,"condition","where","bool"),i=Ui(Ui(a.shape,r.shape),s.shape),o={condition:Hi(a,i),t:Hi(r,i),e:Hi(s,i)};return Yr.runKernel(En,o)}});function qi(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return Yr.runKernel(dn,{},s)}is({threshold_:function(e,t="binary",n=!1,r=.5){const s=ss(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,l,u,c=ni(ui([r]),255);if(x(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),x(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),x("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),x("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,l]=yi(s,[1,1,1],-1);const e=ni(i,.2989),t=ni(o,.587),n=ni(l,.114);u=Ma(Ma(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,l=ui([-1]),u=ui([0]),c=ui([0]);for(let h=0;h<e.size-1;h++){n=ai(e,0,h+1),r=ai(e,h+1),i=Pa(Gi(n),t),o=Pa(Gi(r),t);const d=Gi(ni(n,qi(0,n.size)));s=Pa(d,Gi(n));const p=Ei(r.shape,n.size),f=Ma(qi(0,r.size),p),g=ni(r,f);a=Pa(Gi(g),Gi(r));const m=ei(s,a),b=ei(s,a),y=ni(i,o);c=ni(ni(y,m),b);const w=Vi(c,u);u=Ki(w,c,u),l=Ki(w,ui([h]),l)}return l}(zi(na(ji(u),"int32"),us([]),256),a));const h=n?Wi(u,c):Vi(u,c);return na(ni(h,255),"int32")}}),is({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=ss(e,"image","transform","float32"),o=ss(t,"transforms","transform","float32");x(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),x(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),x(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return Yr.runKernel(Yn,l,u)}});const Xi=is({greaterEqual_:function(e,t){let n=ss(e,"a","greaterEqual"),r=ss(t,"b","greaterEqual");[n,r]=Vr(n,r),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(vt,s)}}),Yi=is({logicalAnd_:function(e,t){const n=ss(e,"a","logicalAnd","bool"),r=ss(t,"b","logicalAnd","bool");Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(_t,s)}});is({bandPart_:function(e,t,n){x(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),x(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=ss(e,"a","bandPart");x(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=Za(qi(0,a,1,"int32"),[-1,1]),l=qi(0,i,1,"int32"),u=ei(o,l),c=Yi(Wi(u,si(+t,"int32")),Xi(u,si(-n,"int32"))),h=fi([a,i],r.dtype);return Za(li(pi(Za(r,[-1,a,i])).map((e=>Ki(c,e,h)))),s)}});const Ji=is({abs_:function(e){const t=ss(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return Yr.runKernel(ze,e)}{const e={x:t};return Yr.runKernel(pe,e)}}}),Zi=is({min_:function(e,t=null,n=!1){const r={x:ss(e,"x","min")},s={axis:t,keepDims:n};return Yr.runKernel(Kt,r,s)}}),Qi=is({pow_:function(e,t){let n=ss(e,"base","pow"),r=ss(t,"exp","pow");[n,r]=Vr(n,r);const s={a:n,b:r};return Yr.runKernel(un,s)}});function eo(e,t,n=null){if(0===e.rank)return Ji(e);if(1!==e.rank&&null===n)return eo(Za(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Gi(Ji(e),n);if(t===1/0)return Wa(Ji(e),n);if(t===-1/0)return Zi(Ji(e),n);if("euclidean"===t||2===t)return ii(Gi(Qi(Ji(e),si(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Wa(Gi(Ji(e),n[0]),n[1]-1);if(t===1/0)return Wa(Gi(Ji(e),n[1]),n[0]);if(t===-1/0)return Zi(Gi(Ji(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return ii(Gi(Qa(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const to=is({norm_:function(e,t="euclidean",n=null,r=!1){const s=eo(e=ss(e,"x","norm"),t,n);let a=s.shape;if(r){const t=_(n,e.shape);a=Ka(s.shape,t)}return Za(s,a)}});function no(){return Yr}function ro(e,t){return Yr.tidy(e,t)}function so(e){Gr(e).forEach((e=>e.dispose()))}function ao(e,t,n=1){return Yr.registerBackend(e,t,n)}function io(){return Yr.backend}is({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,x(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)x(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=yi(e,e.shape[0],0).map((e=>oi(e,[0])));x(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(Yr.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=ni(Gi(ni(n[r],e)),n[r]);e=ei(e,t)}return Pa(e,to(e,"euclidean"))})));return t?li(n,0):n}}),Dr=function(e){le().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")};const oo=is({expandDims_:function(e,t=0){const n=ss(e,"x","expandDims","string_or_numeric");x(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return Yr.runKernel(ct,r,s)}}),lo=is({tile_:function(e,t){const n=ss(e,"x","tile","string_or_numeric");x(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return Yr.runKernel(qn,r,s)}}),uo=is({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=ta([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=Za(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return lo(oo(i,0),[n[0],1,1]);if(2===n.length)return lo(oo(oo(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return lo(oo(oo(oo(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),co=is({matMul_:function(e,t,n=!1,r=!1){let s=ss(e,"a","matMul"),a=ss(t,"b","matMul");[s,a]=Vr(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return Yr.runKernel(Re,i,o)}}),ho=is({neg_:function(e){const t={x:ss(e,"x","neg")};return Yr.runKernel(Qt,t)}}),po=is({transpose_:function(e,t){const n=ss(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),x(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{x(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return Yr.runKernel(Jn,r,s)}});function fo(e,t=!1){return Yr.tidy((()=>{x(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=uo(n),a=ra(e);const i=ci([[1]],[1,1]);let o=ra(i);const l=n>=r?r:n;for(let e=0;e<l;++e){const t=a,l=o,u=s;[o,a,s]=Yr.tidy((()=>{const t=ai(a,[e,e],[n-e,1]),l=to(t),u=ai(a,[e,e],[1,1]),c=Ki(Vi(u,0),ci([[-1]]),ci([[1]])),h=ei(u,ni(c,l)),d=Pa(t,h);o=1===d.shape[0]?ra(i):gi([i,ai(d,[1,0],[d.shape[0]-1,d.shape[1]])],0);const p=ho(Pa(co(c,h),l)),f=ai(a,[e,0],[n-e,r]),g=ni(p,o),m=po(o);if(0===e)a=ei(f,co(g,co(m,f)));else{const t=ei(f,co(g,co(m,f)));a=gi([ai(a,[0,0],[e,r]),t],0)}const b=po(g),y=ai(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=ei(y,co(co(y,o),b));else{const t=ei(y,co(co(y,o),b));s=gi([ai(s,[0,0],[n,e]),t],1)}return[o,a,s]})),so([t,l,u])}return!t&&n>r&&(s=ai(s,[0,0],[n,r]),a=ai(a,[0,0],[r,r])),[s,a]}))}var go;is({qr_:function(e,t=!1){if(x(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return fo(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=pi(Za(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=fo(e,t);s.push(n),a.push(r)})),[Za(li(s,0),e.shape),Za(li(a,0),e.shape)]}}}),function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(go||(go={}));const mo=is({notEqual_:function(e,t){let n=ss(e,"a","notEqual"),r=ss(t,"b","notEqual");[n,r]=Vr(n,r),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(en,s)}});function bo(e,t="float32"){if("complex64"===t){const t=bo(e,"float32"),n=fi(e,"float32");return os(t,n)}const n=Q(S(e),t);return Yr.makeTensor(n,e,t)}const yo=is({computeWeightedLoss_:function(e,t,n=go.SUM_BY_NONZERO_WEIGHTS){const r=ss(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=ss(t,"weights","computeWeightedLoss"));const a=null==s?r:ni(r,s);if(n===go.NONE)return a;if(n===go.SUM)return Gi(a);if(n===go.MEAN){if(null==s)return Va(a);{const e=r.size/s.size,t=Pa(Gi(a),Gi(s));return e>1?Pa(t,si(e)):t}}if(n===go.SUM_BY_NONZERO_WEIGHTS){if(null==s)return Pa(Gi(a),si(r.size));{const e=ni(s,bo(r.shape)),t=na(Gi(mo(e,si(0))),"float32");return Pa(Gi(a),t)}}throw Error(`Unknown reduction: ${n}`)}});is({absoluteDifference_:function(e,t,n,r=go.SUM_BY_NONZERO_WEIGHTS){const s=ss(e,"labels","absoluteDifference"),a=ss(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=ss(n,"weights","absoluteDifference")),v(s.shape,a.shape,"Error in absoluteDifference: ");const o=Ji(ei(s,a));return yo(o,i,r)}}),is({cosineDistance_:function(e,t,n,r,s=go.SUM_BY_NONZERO_WEIGHTS){const a=ss(e,"labels","cosineDistance"),i=ss(t,"predictions","cosineDistance");let o=null;null!=r&&(o=ss(r,"weights","cosineDistance")),v(a.shape,i.shape,"Error in cosineDistance: ");const l=si(1),u=ei(l,Gi(ni(a,i),n,!0));return yo(u,o,s)}});const wo=is({relu_:function(e){const t={x:ss(e,"x","relu")};return Yr.runKernel(gn,t)}});is({hingeLoss_:function(e,t,n,r=go.SUM_BY_NONZERO_WEIGHTS){let s=ss(e,"labels","hingeLoss");const a=ss(t,"predictions","hingeLoss");let i=null;null!=n&&(i=ss(n,"weights","hingeLoss")),v(s.shape,a.shape,"Error in hingeLoss: ");const o=si(1);s=ei(ni(si(2),s),o);const l=wo(ei(o,ni(s,a)));return yo(l,i,r)}});const xo=is({minimum_:function(e,t){let n=ss(e,"a","minimum"),r=ss(t,"b","minimum");[n,r]=Vr(n,r),"bool"===n.dtype&&(n=na(n,"int32"),r=na(r,"int32")),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(qt,s)}});is({huberLoss_:function(e,t,n,r=1,s=go.SUM_BY_NONZERO_WEIGHTS){const a=ss(e,"labels","huberLoss"),i=ss(t,"predictions","huberLoss");let o=null;null!=n&&(o=ss(n,"weights","huberLoss")),v(a.shape,i.shape,"Error in huberLoss: ");const l=si(r),u=Ji(ei(i,a)),c=xo(u,l),h=ei(u,c),d=Ma(ni(si(.5),Qa(c)),ni(l,h));return yo(d,o,s)}});const vo=is({log_:function(e){const t={x:ss(e,"x","log")};return Yr.runKernel(Dt,t)}});is({logLoss_:function(e,t,n,r=1e-7,s=go.SUM_BY_NONZERO_WEIGHTS){const a=ss(e,"labels","logLoss"),i=ss(t,"predictions","logLoss");let o=null;null!=n&&(o=ss(n,"weights","logLoss")),v(a.shape,i.shape,"Error in logLoss: ");const l=si(1),u=si(r),c=ho(ni(a,vo(Ma(i,u)))),h=ni(ei(l,a),vo(Ma(ei(l,i),u))),d=ei(c,h);return yo(d,o,s)}});const ko=is({squaredDifference_:function(e,t){let n=ss(e,"a","squaredDifference"),r=ss(t,"b","squaredDifference");[n,r]=Vr(n,r),Ui(n.shape,r.shape);const s={a:n,b:r};return Yr.runKernel(Wn,s,{})}});is({meanSquaredError_:function(e,t,n,r=go.SUM_BY_NONZERO_WEIGHTS){const s=ss(e,"labels","meanSquaredError"),a=ss(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=ss(n,"weights","meanSquaredError")),v(s.shape,a.shape,"Error in meanSquaredError: ");const o=ko(s,a);return yo(o,i,r)}});const Io=is({exp_:function(e){const t={x:ss(e,"x","exp")};return Yr.runKernel(ut,t)}}),So=is({log1p_:function(e){const t={x:ss(e,"x","log1p")};return Yr.runKernel(Ft,t)}});is({sigmoidCrossEntropy_:function(e,t,n,r=0,s=go.SUM_BY_NONZERO_WEIGHTS){let a=ss(e,"multiClassLabels","sigmoidCrossEntropy");const i=ss(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=ss(n,"weights","sigmoidCrossEntropy")),v(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=si(r),t=si(1),n=si(.5);a=Ma(ni(a,ei(t,e)),ni(n,e))}const l=function(e,t){const n=ss(e,"labels","sigmoidCrossEntropyWithLogits"),r=ss(t,"logits","sigmoidCrossEntropyWithLogits");v(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=wo(r),a=ni(r,n),i=So(Io(ho(Ji(r))));return Ma(ei(s,a),i)}(a,i);return yo(l,o,s)}});const $o=is({logSumExp_:function(e,t=null,n=!1){const r=ss(e,"x","logSumExp"),s=_(t,r.shape),a=Wa(r,s,!0),i=ei(r,a),o=Io(i),l=Gi(o,s),u=vo(l),c=Ma(Za(a,u.shape),u);if(n){const e=Ka(c.shape,s);return Za(c,e)}return c}});function Eo(e,t){const n=e[0].length;e.forEach(((e,t)=>{x(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),x(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)x(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Co(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}function No(e,t,n,r,s="NHWC",a){return Ro(e,[...t,e[3]],n,a,r,null,null,Po(s))}function To(e,t,n,r,s,a,i="channelsLast"){const[o,l]=_o(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Ro(e,u,n,r,s,a,!1,i)}function Ao(e,t,n,r,s,a,i="NDHWC"){const[o,l,u]=Oo(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return Do(e,c,n,r,s,!1,h,a)}function Ro(e,t,n,r,s,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[d,p,,f]=t,[g,m]=_o(n),[b,y]=_o(r),w=Lo(d,b),x=Lo(p,y),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,s,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=Fo(e,t,n));const a=e[1];return[Mo((e[0]-t+2*r)/n+1,s),Mo((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),l=Math.floor(e/2),d=e-l,p=Math.floor(o/2);u={top:l,bottom:d,left:p,right:o-p,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const d="channelsLast"===l?e[1][0]:e[2][0],p="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],g="channelsLast"===l?e[2][1]:e[3][1];u={top:d,bottom:p,left:f,right:g,type:0===d&&0===p&&0===f&&0===g?"VALID":"EXPLICIT"},c=Mo((t-a+d+p)/r+1,o),h=Mo((n-i+f+g)/s+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(s,u,c,g,m,w,x,a,o),S=i?f*h:f;let $;return"channelsFirst"===o?$=[l,S,k,I]:"channelsLast"===o&&($=[l,k,I,S]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:g,strideWidth:m,filterHeight:d,filterWidth:p,effectiveFilterHeight:w,effectiveFilterWidth:x,dilationHeight:b,dilationWidth:y,inShape:e,outShape:$,filterShape:t}}function Do(e,t,n,r,s,a=!1,i="channelsLast",o){let[l,u,c,h,d]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,d]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,d,u,c,h]=e}const[p,f,g,,m]=t,[b,y,w]=Oo(n),[x,v,k]=Oo(r),I=Lo(p,x),S=Lo(f,v),$=Lo(g,k),{padInfo:E,outDepth:C,outHeight:N,outWidth:T}=function(e,t,n,r,s,a,i,o,l,u,c){let h,d,p,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=Fo(e,t,r));const i=e[1],o=e[2];return[Mo((e[0]-t+2*s)/r+1,a),Mo((i-t+2*s)/r+1,a),Mo((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);d=a[0],p=a[1],f=a[2]}else if("same"===e){d=Math.ceil(t/s),p=Math.ceil(n/a),f=Math.ceil(r/i);const e=(d-1)*s+o-t,c=(p-1)*a+l-n,g=(f-1)*i+u-r,m=Math.floor(e/2),b=e-m,y=Math.floor(c/2),w=c-y,x=Math.floor(g/2);h={top:y,bottom:w,left:x,right:g-x,front:m,back:b,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},d=Math.ceil((t-o+1)/s),p=Math.ceil((n-l+1)/a),f=Math.ceil((r-u+1)/i)}return{padInfo:h,outDepth:d,outHeight:p,outWidth:f}}(s,u,c,h,b,y,w,I,S,$,o),A=a?m*d:m;let R;return"channelsFirst"===i?R=[l,A,C,N,T]:"channelsLast"===i&&(R=[l,C,N,T,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:d,outDepth:C,outHeight:N,outWidth:T,outChannels:A,padInfo:E,strideDepth:b,strideHeight:y,strideWidth:w,filterDepth:p,filterHeight:f,filterWidth:g,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:$,dilationDepth:x,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function Fo(e,t,n,r=1){const s=Lo(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function _o(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function Oo(e){return"number"==typeof e?[e,e,e]:e}function Lo(e,t){return t<=1?e:e+(e-1)*(t-1)}function Mo(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function zo(e){const[t,n,r]=_o(e);return 1===t&&1===n&&1===r}function Bo(e,t){return zo(e)||zo(t)}function Po(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}is({softmaxCrossEntropy_:function(e,t,n,r=0,s=go.SUM_BY_NONZERO_WEIGHTS){let a=ss(e,"onehotLabels","softmaxCrossEntropy");const i=ss(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=ss(n,"weights","softmaxCrossEntropy")),v(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=si(r),t=si(1),n=si(a.shape[1]);a=Ma(ni(a,ei(t,e)),Pa(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);var r;return(r=(e,t,r)=>{const s=$o(t,[n],!0),a=ei(na(t,"float32"),s);r([e,a]);const i=ho(ni(a,e));return{value:Gi(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Ka(e.shape,[n]);return[ni(Za(e,a),ei(na(r,"float32"),Io(s))),ni(Za(e,a),ei(Io(s),na(r,"float32")))]}}},Yr.customGrad(r))(e,t)}(a,i);return yo(l,o,s)}}),is({sparseFillEmptyRows_:function(e,t,n,r){const s=ss(e,"indices","sparseFillEmptyRows"),a=ss(t,"values","sparseFillEmptyRows"),i=ss(n,"denseShape","sparseFillEmptyRows"),o=ss(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:s,values:a,denseShape:i,defaultValue:o},u=Yr.runKernel(Bn,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),is({sparseReshape_:function(e,t,n){const r=ss(e,"inputIndices","sparseReshape"),s=ss(t,"inputShape","sparseReshape"),a=ss(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=Yr.runKernel(Pn,i);return{outputIndices:o[0],outputShape:o[1]}}});const Uo=is({elu_:function(e){const t={x:ss(e,"x","elu")};return Yr.runKernel(at,t)}}),Wo=is({leakyRelu_:function(e,t=.2){const n={x:ss(e,"x","leakyRelu")},r={alpha:t};return Yr.runKernel(Nt,n,r)}}),Vo=is({prelu_:function(e,t){const n={x:ss(e,"x","prelu"),alpha:ss(t,"alpha","prelu")};return Yr.runKernel(cn,n)}}),Go=is({relu6_:function(e){const t={x:ss(e,"x","relu6")};return Yr.runKernel(vn,t)}}),jo=is({sigmoid_:function(e){const t={x:ss(e,"x","sigmoid")};return Yr.runKernel(Dn,t)}}),Ho=is({step_:function(e,t=0){const n={x:ss(e,"x","step")},r={alpha:t};return Yr.runKernel(nr,n,r)}});function Ko(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return ni(e,Ho(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function qo(e,t){let n=t;const r=Pi(e.shape,t.shape);return r.length>0&&(n=Gi(n,r)),Za(n,e.shape)}function Xo(e,t,n,r){if("linear"===t)return e;if("relu"===t)return wo(e);if("elu"===t)return Uo(e);if("relu6"===t)return Go(e);if("prelu"===t)return Vo(e,n);if("leakyrelu"===t)return Wo(e,r);if("sigmoid"===t)return jo(e);throw new Error(`Unknown fused activation ${t}.`)}const Yo=(e,t)=>!(e>0)||"linear"===t,Jo=30;function Zo(e){return e<=Jo?e:X(e,Math.floor(Math.sqrt(e)))}function Qo(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function el(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function tl(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function nl(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function rl(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function sl(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}function al(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===S(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,l=s.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[...Y(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function il(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function ol(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}il(n,t,e)}function ll(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:S(t.shape)/o,sliceSize:i,strides:[...Y(n.slice(0,s)),1],outputSize:S(n)}}const ul=1.7580993408473768,cl=1.0507009873554805,hl=.3275911,dl=.254829592,pl=-.284496736,fl=1.421413741,gl=-1.453152027,ml=1.061405429;function bl(...e){le().getBool("IS_TEST")||console.warn(...e)}function yl(...e){le().getBool("IS_TEST")||console.log(...e)}function wl(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function xl(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function vl(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function kl(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function Il(e,t){return{real:e[2*t],imag:e[2*t+1]}}function Sl(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function $l(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function El(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const Cl=/->/g;function Nl(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(Cl,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");x(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=s.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function Tl(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function Al(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:x(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function Rl(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=Fl(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function Dl(e){return e.every(((e,t)=>e===t))}function Fl(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function _l(e,t,n=0){let r=[];if("number"==typeof t)x(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{x(t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0)<=1,(()=>"There should be only one negative value in split array."));const s=t.indexOf(-1);if(-1!==s){const r=t.reduce(((e,t)=>t>0?e+t:e));t[s]=e.shape[n]-r}x(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function Ol(e,t){let n,r=!1;for(e<=Jo?(n=e,r=!0):n=X(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=X(e,n+1);return n}function Ll(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Ml(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function zl(e){try{return e.map((e=>xr(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Bl(e){return e.map((e=>wr(e)))}function Pl(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=ta(e,"int32"),s=ta([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}}}]);